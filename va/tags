!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	opencv/include/cvaux.hpp	/^    CvMat* A;$/;"	m	class:cv::LevMarqSparse
A	opencv/include/cvcompat.h	/^                                const float* A, const float* k,$/;"	v
A	opencv/include/cxcore.hpp	/^    enum { A=4164903690U, UNIFORM=0, NORMAL=1 };$/;"	e	enum:cv::RNG::__anon95
ADAPTIVE_THRESH_GAUSSIAN_C	opencv/include/cv.hpp	/^enum { ADAPTIVE_THRESH_MEAN_C=0, ADAPTIVE_THRESH_GAUSSIAN_C=1 };$/;"	e	enum:cv::__anon7
ADAPTIVE_THRESH_MEAN_C	opencv/include/cv.hpp	/^enum { ADAPTIVE_THRESH_MEAN_C=0, ADAPTIVE_THRESH_GAUSSIAN_C=1 };$/;"	e	enum:cv::__anon7
AN	vascript/ccg/parseCoderHtml.cpp	136;"	d	file:
ANN_MLP_TrainParams	opencv/include/ml.h	/^typedef CvANN_MLP_TrainParams ANN_MLP_TrainParams;$/;"	t	namespace:cv
APPEND	opencv/include/cxcore.hpp	/^    enum { READ=0, WRITE=1, APPEND=2 };$/;"	e	enum:cv::FileStorage::__anon102
AUTOTUNED	opencv/include/cxflann.h	/^	AUTOTUNED = 255$/;"	e	enum:cv::flann::flann_algorithm_t
AUTO_STEP	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FE0000, AUTO_STEP=-1,$/;"	e	enum:cv::MatND::__anon100
AUTO_STEP	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FF0000, AUTO_STEP=0, CONTINUOUS_FLAG=CV_MAT_CONT_FLAG };$/;"	e	enum:cv::Mat::__anon94
AddBlob	opencv/include/cvvidsurv.hpp	/^    virtual void AddBlob(CvBlob* pB)$/;"	f	class:CvBlobSeq
AddBlobTrack	opencv/include/cvvidsurv.hpp	/^    virtual void AddBlobTrack(int TrackID, int StartFrame = 0)$/;"	f	class:CvBlobTrackSeq
AddFormat	opencv/include/cvvidsurv.hpp	/^    void AddFormat(const char* str){strcat(m_pElemFormat,str);}$/;"	f	class:CvBlobSeq
AddParam	opencv/include/cvvidsurv.hpp	/^    void AddParam(const char* name)$/;"	f	class:CvVSModule
AddParam	opencv/include/cvvidsurv.hpp	/^    void AddParam(const char* name, const char** pAddr)$/;"	f	class:CvVSModule
AddParam	opencv/include/cvvidsurv.hpp	/^    void AddParam(const char* name, double* pAddr)$/;"	f	class:CvVSModule
AddParam	opencv/include/cvvidsurv.hpp	/^    void AddParam(const char* name, float* pAddr)$/;"	f	class:CvVSModule
AddParam	opencv/include/cvvidsurv.hpp	/^    void AddParam(const char* name, int* pAddr)$/;"	f	class:CvVSModule
All	opencv/include/cvaux.h	/^    int** All;$/;"	m	struct:CvCliqueFinder
Allocate	opencv/include/cvwimage.h	/^inline void WImageBuffer<T>::Allocate(int width, int height, int nchannels)$/;"	f	class:cv::WImageBuffer
Allocate	opencv/include/cvwimage.h	/^inline void WImageBufferC<T, C>::Allocate(int width, int height)$/;"	f	class:cv::WImageBufferC
Allocator	opencv/include/cxcore.hpp	/^    explicit Allocator() {}$/;"	f	class:cv::Allocator
Allocator	opencv/include/cxcore.hpp	/^    explicit Allocator(Allocator const&) {}$/;"	f	class:cv::Allocator
Allocator	opencv/include/cxcore.hpp	/^    explicit Allocator(Allocator<U> const&) {}$/;"	f	class:cv::Allocator
Allocator	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Allocator$/;"	c	namespace:cv
ArchType	vascript/ccg/ccg.h	/^typedef    enum{SYS_32 = 0, SYS_64} ArchType;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon135
AstAssginState	vascript/node.hxx	/^	AstAssginState(AstExpression* lhv, AstExpression* rhv){$/;"	f	class:AstAssginState
AstAssginState	vascript/node.hxx	/^	AstAssginState(SymbolInfo lhv, AstExpression* rhv){$/;"	f	class:AstAssginState
AstAssginState	vascript/node.hxx	/^class AstAssginState:public AstStatement$/;"	c
AstConstExpr	vascript/node.hxx	/^	AstConstExpr(size_t v){ var.setValue((void*)v);VASMSG(log_create,"create AstConstExpr\\n");}$/;"	f	class:AstConstExpr
AstConstExpr	vascript/node.hxx	/^class AstConstExpr:public AstExpression$/;"	c
AstExpression	vascript/node.hxx	/^	AstExpression(){}$/;"	f	class:AstExpression
AstExpression	vascript/node.hxx	/^class AstExpression:public AstNode $/;"	c
AstFilterState	vascript/node.hxx	/^	AstFilterState(SymbolInfo outF, SymbolInfo inF, SymbolInfo filterK):outFrame(outF), inFrame(inF), filterKernel(filterK){VASDEBUG(log_create,dumpAst(stdout));}$/;"	f	class:AstFilterState
AstFilterState	vascript/node.hxx	/^class AstFilterState:public AstStatement$/;"	c
AstGraphNode	vascript/node.hxx	/^        AstGraphNode(FlowGraph* graph):m_Graph(graph){}$/;"	f	class:AstGraphNode
AstGraphNode	vascript/node.hxx	/^class AstGraphNode:public AstStatement$/;"	c
AstIfNode	vascript/node.hxx	/^        AstIfNode(AstExpression* condition, AstStatement* ifStatement, AstStatement* elseStatement = NULL):$/;"	f	class:AstIfNode
AstIfNode	vascript/node.hxx	/^class AstIfNode:public AstStatement$/;"	c
AstNode	vascript/node.hxx	/^	AstNode(){$/;"	f	class:AstNode
AstNode	vascript/node.hxx	/^class AstNode :public Node$/;"	c
AstOpExpr	vascript/node.cpp	/^AstOpExpr::AstOpExpr(OpCode opc, AstExpression* oprand1, AstExpression* oprand2):$/;"	f	class:AstOpExpr
AstOpExpr	vascript/node.hxx	/^	AstOpExpr():opcode((char*)NULL), oprand1(NULL), oprand2(NULL),oprand0(NULL){}$/;"	f	class:AstOpExpr
AstOpExpr	vascript/node.hxx	/^class AstOpExpr:public AstExpression$/;"	c
AstStatement	vascript/node.hxx	/^class AstStatement:public AstNode $/;"	c
AstVarExpr	vascript/node.hxx	/^	AstVarExpr(SymbolInfo& v){var = v;VASMSG(log_create,"create AstVarExpr\\n");}$/;"	f	class:AstVarExpr
AstVarExpr	vascript/node.hxx	/^	AstVarExpr(SymbolInfo* v){var =*v;VASMSG(log_create,"create AstVarExpr\\n");}$/;"	f	class:AstVarExpr
AstVarExpr	vascript/node.hxx	/^class AstVarExpr:public AstExpression$/;"	c
AutoBuffer	opencv/include/cxcore.hpp	/^template<typename _Tp, size_t fixed_size=4096\/sizeof(_Tp)+8> class CV_EXPORTS AutoBuffer$/;"	c	namespace:cv
AutoBuffer	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline AutoBuffer<_Tp, fixed_size>::AutoBuffer()$/;"	f	class:cv::AutoBuffer
AutoBuffer	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline AutoBuffer<_Tp, fixed_size>::AutoBuffer(size_t _size)$/;"	f	class:cv::AutoBuffer
AutotunedIndexParams	opencv/include/cxflann.h	/^	AutotunedIndexParams( float target_precision_ = 0.9, float build_weight_ = 0.01,$/;"	f	struct:cv::flann::AutotunedIndexParams
AutotunedIndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS AutotunedIndexParams : public IndexParams {$/;"	s	namespace:cv::flann
B	Kernel.h	/^    unsigned char B;$/;"	m	struct:dmFrameSimple::__anon164
B	bmp.h	/^	unsigned char B; $/;"	m	struct:__anon114
B	bmp.h	/^    u8 B;\/\/$/;"	m	struct:tagRGBQUAD
B	opencv/include/cvaux.hpp	/^    CvMat* B;$/;"	m	class:cv::LevMarqSparse
B	vascript/ccg/ccg.h	/^				unsigned int B:1; \/\/Extension of the ModR\/M r\/m field, SIB base field, or Opcode reg field$/;"	m	struct:CCG::REX::__anon151::__anon152
BACKPROP	opencv/include/ml.h	/^    enum { BACKPROP=0, RPROP=1 };$/;"	e	enum:CvANN_MLP_TrainParams::__anon54
BASIC_PRESET	opencv/include/cv.hpp	/^        BASIC_PRESET=CV_STEREO_BM_BASIC,$/;"	e	enum:cv::StereoBM::__anon21
BEGIN	vascript/release/vaslexer.cpp	138;"	d	file:
BISON_YYLTYPE_ISDECLARED	vascript/release/vasparser.cpp	214;"	d	file:
BISON_YYLTYPE_ISDECLARED	vascript/release/vasparser.h	127;"	d
BITMAPINFOHEADER	opencv/include/cxcore.h	/^        typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;$/;"	t	typeref:struct:tagBITMAPINFOHEADER
BOOL	opencv/include/cxcore.h	/^        typedef int BOOL;$/;"	t
BOOST	opencv/include/cv.hpp	/^    enum { BOOST = 0 };$/;"	e	enum:cv::CascadeClassifier::__anon15
BORDER_CONSTANT	opencv/include/cv.hpp	/^enum { BORDER_REPLICATE=IPL_BORDER_REPLICATE, BORDER_CONSTANT=IPL_BORDER_CONSTANT,$/;"	e	enum:cv::__anon1
BORDER_DEFAULT	opencv/include/cv.hpp	/^       BORDER_TRANSPARENT, BORDER_DEFAULT=BORDER_REFLECT_101, BORDER_ISOLATED=16 };$/;"	e	enum:cv::__anon1
BORDER_ISOLATED	opencv/include/cv.hpp	/^       BORDER_TRANSPARENT, BORDER_DEFAULT=BORDER_REFLECT_101, BORDER_ISOLATED=16 };$/;"	e	enum:cv::__anon1
BORDER_REFLECT	opencv/include/cv.hpp	/^       BORDER_REFLECT=IPL_BORDER_REFLECT, BORDER_REFLECT_101=IPL_BORDER_REFLECT_101,$/;"	e	enum:cv::__anon1
BORDER_REFLECT101	opencv/include/cv.hpp	/^       BORDER_REFLECT101=BORDER_REFLECT_101, BORDER_WRAP=IPL_BORDER_WRAP,$/;"	e	enum:cv::__anon1
BORDER_REFLECT_101	opencv/include/cv.hpp	/^       BORDER_REFLECT=IPL_BORDER_REFLECT, BORDER_REFLECT_101=IPL_BORDER_REFLECT_101,$/;"	e	enum:cv::__anon1
BORDER_REPLICATE	opencv/include/cv.hpp	/^enum { BORDER_REPLICATE=IPL_BORDER_REPLICATE, BORDER_CONSTANT=IPL_BORDER_CONSTANT,$/;"	e	enum:cv::__anon1
BORDER_TRANSPARENT	opencv/include/cv.hpp	/^       BORDER_TRANSPARENT, BORDER_DEFAULT=BORDER_REFLECT_101, BORDER_ISOLATED=16 };$/;"	e	enum:cv::__anon1
BORDER_WRAP	opencv/include/cv.hpp	/^       BORDER_REFLECT101=BORDER_REFLECT_101, BORDER_WRAP=IPL_BORDER_WRAP,$/;"	e	enum:cv::__anon1
Base	vascript/ccg/ccg.h	/^				unsigned int Base:3;$/;"	m	struct:CCG::SIB::__anon156::__anon157
BaseColumnFilter	opencv/include/cv.hpp	/^class CV_EXPORTS BaseColumnFilter$/;"	c	namespace:cv
BaseFilter	opencv/include/cv.hpp	/^class CV_EXPORTS BaseFilter$/;"	c	namespace:cv
BaseRowFilter	opencv/include/cv.hpp	/^class CV_EXPORTS BaseRowFilter$/;"	c	namespace:cv
BaseType	opencv/include/cvwimage.h	/^    typedef T BaseType;$/;"	t	class:cv::WImage
BaseType	opencv/include/cvwimage.h	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageBuffer
BaseType	opencv/include/cvwimage.h	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageBufferC
BaseType	opencv/include/cvwimage.h	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageC
BaseType	opencv/include/cvwimage.h	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageView
BaseType	opencv/include/cvwimage.h	/^    typedef typename WImage<T>::BaseType BaseType;$/;"	t	class:cv::WImageViewC
Boost	opencv/include/ml.h	/^typedef CvBoost Boost;$/;"	t	namespace:cv
BoostParams	opencv/include/ml.h	/^typedef CvBoostParams BoostParams;$/;"	t	namespace:cv
BoostTree	opencv/include/ml.h	/^typedef CvBoostTree BoostTree;$/;"	t	namespace:cv
BorderConst	opencv/include/cxtypes.h	/^    int  BorderConst[4];    \/* Ditto.                                 *\/$/;"	m	struct:_IplImage
BorderMode	opencv/include/cxtypes.h	/^    int  BorderMode[4];     \/* Ignored by OpenCV.                     *\/$/;"	m	struct:_IplImage
Bpp	opencv/include/highgui.h	/^    int Bpp() { return m_img ? (m_img->depth & 255)*m_img->nChannels : 0; };$/;"	f	class:CvvImage
C	opencv/include/ml.h	/^    double      C;  \/\/ for CV_SVM_C_SVC, CV_SVM_EPS_SVR and CV_SVM_NU_SVR$/;"	m	struct:CvSVMParams
C	opencv/include/ml.h	/^    double C[2];  \/\/ C[0] == Cn, C[1] == Cp$/;"	m	class:CvSVMSolver
C	opencv/include/ml.h	/^    enum { C=0, GAMMA=1, P=2, NU=3, COEF=4, DEGREE=5 };$/;"	e	enum:CvSVM::__anon47
CALC_J	opencv/include/cv.hpp	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon22
CALIB_CB_ADAPTIVE_THRESH	opencv/include/cv.hpp	/^enum { CALIB_CB_ADAPTIVE_THRESH = CV_CALIB_CB_ADAPTIVE_THRESH,$/;"	e	enum:cv::__anon18
CALIB_CB_FILTER_QUADS	opencv/include/cv.hpp	/^       CALIB_CB_FILTER_QUADS = CV_CALIB_CB_FILTER_QUADS };$/;"	e	enum:cv::__anon18
CALIB_CB_NORMALIZE_IMAGE	opencv/include/cv.hpp	/^       CALIB_CB_NORMALIZE_IMAGE = CV_CALIB_CB_NORMALIZE_IMAGE,$/;"	e	enum:cv::__anon18
CALIB_FIX_ASPECT_RATIO	opencv/include/cv.hpp	/^    CALIB_FIX_ASPECT_RATIO = CV_CALIB_FIX_ASPECT_RATIO,$/;"	e	enum:cv::__anon19
CALIB_FIX_FOCAL_LENGTH	opencv/include/cv.hpp	/^    CALIB_FIX_FOCAL_LENGTH = CV_CALIB_FIX_FOCAL_LENGTH,$/;"	e	enum:cv::__anon19
CALIB_FIX_INTRINSIC	opencv/include/cv.hpp	/^    CALIB_FIX_INTRINSIC = CV_CALIB_FIX_INTRINSIC,$/;"	e	enum:cv::__anon19
CALIB_FIX_K1	opencv/include/cv.hpp	/^    CALIB_FIX_K1 = CV_CALIB_FIX_K1,$/;"	e	enum:cv::__anon19
CALIB_FIX_K2	opencv/include/cv.hpp	/^    CALIB_FIX_K2 = CV_CALIB_FIX_K2,$/;"	e	enum:cv::__anon19
CALIB_FIX_K3	opencv/include/cv.hpp	/^    CALIB_FIX_K3 = CV_CALIB_FIX_K3,$/;"	e	enum:cv::__anon19
CALIB_FIX_PRINCIPAL_POINT	opencv/include/cv.hpp	/^    CALIB_FIX_PRINCIPAL_POINT = CV_CALIB_FIX_PRINCIPAL_POINT,$/;"	e	enum:cv::__anon19
CALIB_SAME_FOCAL_LENGTH	opencv/include/cv.hpp	/^    CALIB_SAME_FOCAL_LENGTH = CV_CALIB_SAME_FOCAL_LENGTH,$/;"	e	enum:cv::__anon19
CALIB_USE_INTRINSIC_GUESS	opencv/include/cv.hpp	/^    CALIB_USE_INTRINSIC_GUESS = CV_CALIB_USE_INTRINSIC_GUESS,$/;"	e	enum:cv::__anon19
CALIB_ZERO_DISPARITY	opencv/include/cv.hpp	/^    CALIB_ZERO_DISPARITY = CV_CALIB_ZERO_DISPARITY$/;"	e	enum:cv::__anon19
CALIB_ZERO_TANGENT_DIST	opencv/include/cv.hpp	/^    CALIB_ZERO_TANGENT_DIST = CV_CALIB_ZERO_TANGENT_DIST,$/;"	e	enum:cv::__anon19
CCG	vascript/ccg/ccg.cpp	/^namespace CCG{$/;"	n	file:
CCG	vascript/ccg/ccg.h	/^namespace CCG{$/;"	n
CCG	vascript/ccg/opcodeDes.h	/^namespace CCG{$/;"	n
CCG	vascript/ccg/testccg.cpp	/^namespace CCG{$/;"	n	file:
CENTERS_GONZALES	opencv/include/cxflann.h	/^	CENTERS_GONZALES = 1,$/;"	e	enum:cv::flann::flann_centers_init_t
CENTERS_KMEANSPP	opencv/include/cxflann.h	/^	CENTERS_KMEANSPP = 2$/;"	e	enum:cv::flann::flann_centers_init_t
CENTERS_RANDOM	opencv/include/cxflann.h	/^	CENTERS_RANDOM = 0,$/;"	e	enum:cv::flann::flann_centers_init_t
CHAIN_APPROX_NONE	opencv/include/cv.hpp	/^enum { CHAIN_APPROX_NONE=CV_CHAIN_APPROX_NONE,$/;"	e	enum:cv::__anon13
CHAIN_APPROX_SIMPLE	opencv/include/cv.hpp	/^       CHAIN_APPROX_SIMPLE=CV_CHAIN_APPROX_SIMPLE,$/;"	e	enum:cv::__anon13
CHAIN_APPROX_TC89_KCOS	opencv/include/cv.hpp	/^       CHAIN_APPROX_TC89_KCOS=CV_CHAIN_APPROX_TC89_KCOS };$/;"	e	enum:cv::__anon13
CHAIN_APPROX_TC89_L1	opencv/include/cv.hpp	/^       CHAIN_APPROX_TC89_L1=CV_CHAIN_APPROX_TC89_L1,$/;"	e	enum:cv::__anon13
CHECK_ERR	opencv/include/cv.hpp	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon22
CImage	opencv/include/highgui.h	/^typedef CvvImage CImage;$/;"	t
CLIQUE_END	opencv/include/cvaux.h	340;"	d
CLIQUE_FOUND	opencv/include/cvaux.h	339;"	d
CLIQUE_TIME_OFF	opencv/include/cvaux.h	338;"	d
CMP_EQ	opencv/include/cxcore.hpp	/^enum { CMP_EQ=0, CMP_GT=1, CMP_GE=2, CMP_LT=3, CMP_LE=4, CMP_NE=5 };$/;"	e	enum:cv::__anon91
CMP_GE	opencv/include/cxcore.hpp	/^enum { CMP_EQ=0, CMP_GT=1, CMP_GE=2, CMP_LT=3, CMP_LE=4, CMP_NE=5 };$/;"	e	enum:cv::__anon91
CMP_GT	opencv/include/cxcore.hpp	/^enum { CMP_EQ=0, CMP_GT=1, CMP_GE=2, CMP_LT=3, CMP_LE=4, CMP_NE=5 };$/;"	e	enum:cv::__anon91
CMP_LE	opencv/include/cxcore.hpp	/^enum { CMP_EQ=0, CMP_GT=1, CMP_GE=2, CMP_LT=3, CMP_LE=4, CMP_NE=5 };$/;"	e	enum:cv::__anon91
CMP_LT	opencv/include/cxcore.hpp	/^enum { CMP_EQ=0, CMP_GT=1, CMP_GE=2, CMP_LT=3, CMP_LE=4, CMP_NE=5 };$/;"	e	enum:cv::__anon91
CMP_NE	opencv/include/cxcore.hpp	/^enum { CMP_EQ=0, CMP_GT=1, CMP_GE=2, CMP_LT=3, CMP_LE=4, CMP_NE=5 };$/;"	e	enum:cv::__anon91
COEF	opencv/include/ml.h	/^    enum { C=0, GAMMA=1, P=2, NU=3, COEF=4, DEGREE=5 };$/;"	e	enum:CvSVM::__anon47
COMPOSITE	opencv/include/cxflann.h	/^	COMPOSITE = 3,$/;"	e	enum:cv::flann::flann_algorithm_t
COMPRESSION_NONE	opencv/include/cvaux.hpp	/^        COMPRESSION_NONE = 0,$/;"	e	enum:cv::FernClassifier::__anon30
COMPRESSION_PCA	opencv/include/cvaux.hpp	/^        COMPRESSION_PCA = 2,$/;"	e	enum:cv::FernClassifier::__anon30
COMPRESSION_RANDOM_PROJ	opencv/include/cvaux.hpp	/^        COMPRESSION_RANDOM_PROJ = 1,$/;"	e	enum:cv::FernClassifier::__anon30
CONTINUOUS_FLAG	opencv/include/cxcore.hpp	/^        CONTINUOUS_FLAG=CV_MAT_CONT_FLAG, MAX_DIM=CV_MAX_DIM };$/;"	e	enum:cv::MatND::__anon100
CONTINUOUS_FLAG	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FF0000, AUTO_STEP=0, CONTINUOUS_FLAG=CV_MAT_CONT_FLAG };$/;"	e	enum:cv::Mat::__anon94
COUNT	opencv/include/cxcore.hpp	/^    enum { COUNT=1, MAX_ITER=COUNT, EPS=2 };$/;"	e	enum:cv::TermCriteria::__anon96
COV_MAT_DIAGONAL	opencv/include/ml.h	/^    enum { COV_MAT_SPHERICAL=0, COV_MAT_DIAGONAL=1, COV_MAT_GENERIC=2 };$/;"	e	enum:CvEM::__anon48
COV_MAT_GENERIC	opencv/include/ml.h	/^    enum { COV_MAT_SPHERICAL=0, COV_MAT_DIAGONAL=1, COV_MAT_GENERIC=2 };$/;"	e	enum:CvEM::__anon48
COV_MAT_SPHERICAL	opencv/include/ml.h	/^    enum { COV_MAT_SPHERICAL=0, COV_MAT_DIAGONAL=1, COV_MAT_GENERIC=2 };$/;"	e	enum:CvEM::__anon48
CP	opencv/include/cvtypes.h	/^    int CP;                     \/* number of control vector dimensions *\/$/;"	m	struct:CvKalman
CUR_FRAME	vascript/vacg.h	/^	ZERO=0, PRV_FRAME= -1, CUR_FRAME = 0, NXT_FRAME=1$/;"	e	enum:__anon119
CUTSIZE	cvKernel.h	65;"	d
CVAPI	opencv/include/cxtypes.h	154;"	d
CVAPI	opencv/include/highgui.h	97;"	d
CVAPI	opencv/include/ml.h	103;"	d
CVAUX_STR	opencv/include/cvver.h	55;"	d
CVAUX_STR_EXP	opencv/include/cvver.h	54;"	d
CVStatus	opencv/include/cxerror.h	/^typedef int CVStatus;$/;"	t
CV_16S	opencv/include/cxtypes.h	488;"	d
CV_16SC	opencv/include/cxtypes.h	522;"	d
CV_16SC1	opencv/include/cxtypes.h	518;"	d
CV_16SC2	opencv/include/cxtypes.h	519;"	d
CV_16SC3	opencv/include/cxtypes.h	520;"	d
CV_16SC4	opencv/include/cxtypes.h	521;"	d
CV_16U	opencv/include/cxtypes.h	487;"	d
CV_16UC	opencv/include/cxtypes.h	516;"	d
CV_16UC1	opencv/include/cxtypes.h	512;"	d
CV_16UC2	opencv/include/cxtypes.h	513;"	d
CV_16UC3	opencv/include/cxtypes.h	514;"	d
CV_16UC4	opencv/include/cxtypes.h	515;"	d
CV_1F	opencv/include/cxmisc.h	173;"	d
CV_32F	opencv/include/cxtypes.h	490;"	d
CV_32FC	opencv/include/cxtypes.h	534;"	d
CV_32FC1	opencv/include/cxtypes.h	530;"	d
CV_32FC2	opencv/include/cxtypes.h	531;"	d
CV_32FC3	opencv/include/cxtypes.h	532;"	d
CV_32FC4	opencv/include/cxtypes.h	533;"	d
CV_32S	opencv/include/cxtypes.h	489;"	d
CV_32SC	opencv/include/cxtypes.h	528;"	d
CV_32SC1	opencv/include/cxtypes.h	524;"	d
CV_32SC2	opencv/include/cxtypes.h	525;"	d
CV_32SC3	opencv/include/cxtypes.h	526;"	d
CV_32SC4	opencv/include/cxtypes.h	527;"	d
CV_64F	opencv/include/cxtypes.h	491;"	d
CV_64FC	opencv/include/cxtypes.h	540;"	d
CV_64FC1	opencv/include/cxtypes.h	536;"	d
CV_64FC2	opencv/include/cxtypes.h	537;"	d
CV_64FC3	opencv/include/cxtypes.h	538;"	d
CV_64FC4	opencv/include/cxtypes.h	539;"	d
CV_8S	opencv/include/cxtypes.h	486;"	d
CV_8SC	opencv/include/cxtypes.h	510;"	d
CV_8SC1	opencv/include/cxtypes.h	506;"	d
CV_8SC2	opencv/include/cxtypes.h	507;"	d
CV_8SC3	opencv/include/cxtypes.h	508;"	d
CV_8SC4	opencv/include/cxtypes.h	509;"	d
CV_8U	opencv/include/cxtypes.h	485;"	d
CV_8UC	opencv/include/cxtypes.h	504;"	d
CV_8UC1	opencv/include/cxtypes.h	500;"	d
CV_8UC2	opencv/include/cxtypes.h	501;"	d
CV_8UC3	opencv/include/cxtypes.h	502;"	d
CV_8UC4	opencv/include/cxtypes.h	503;"	d
CV_AA	opencv/include/cxcore.h	1292;"	d
CV_ADAPTIVE_THRESH_GAUSSIAN_C	opencv/include/cv.h	963;"	d
CV_ADAPTIVE_THRESH_MEAN_C	opencv/include/cv.h	962;"	d
CV_ADD	opencv/include/cxmisc.h	179;"	d
CV_AND	opencv/include/cxmisc.h	182;"	d
CV_ANDN	opencv/include/cxmisc.h	185;"	d
CV_ARE_CNS_EQ	opencv/include/cxtypes.h	614;"	d
CV_ARE_DEPTHS_EQ	opencv/include/cxtypes.h	617;"	d
CV_ARE_SIZES_EQ	opencv/include/cxtypes.h	620;"	d
CV_ARE_TYPES_EQ	opencv/include/cxtypes.h	611;"	d
CV_ARRAY	opencv/include/cv.h	920;"	d
CV_ASSERT	opencv/include/cxerror.h	177;"	d
CV_AUTOSTEP	opencv/include/cxcore.h	136;"	d
CV_AUTO_STEP	opencv/include/cxtypes.h	542;"	d
CV_Assert	opencv/include/cxcore.hpp	111;"	d
CV_Assert	opencv/include/cxcore.hpp	115;"	d
CV_BACK	opencv/include/cxcore.h	996;"	d
CV_BADARG_ERR	opencv/include/cxmisc.h	/^    CV_BADARG_ERR      = -49,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BADCHANNELS_ERR	opencv/include/cxmisc.h	/^    CV_BADCHANNELS_ERR = -47,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BADCOEF_ERR	opencv/include/cxmisc.h	/^    CV_BADCOEF_ERR     =  -10,$/;"	e	enum:CvStatus
CV_BADCONVERGENCE_ERR	opencv/include/cxmisc.h	/^    CV_BADCONVERGENCE_ERR       = -109,$/;"	e	enum:CvStatus
CV_BADDEPTH_ERR	opencv/include/cxmisc.h	/^    CV_BADDEPTH_ERR             = -107,$/;"	e	enum:CvStatus
CV_BADFACTOR_ERR	opencv/include/cxmisc.h	/^    CV_BADFACTOR_ERR   =  -7,$/;"	e	enum:CvStatus
CV_BADFLAG_ERR	opencv/include/cxmisc.h	/^    CV_BADFLAG_ERR     =  -12,$/;"	e	enum:CvStatus
CV_BADHEADER_ERR	opencv/include/cxmisc.h	/^    CV_BADHEADER_ERR            = -105,$/;"	e	enum:CvStatus
CV_BADMEMBLOCK_ERR	opencv/include/cxmisc.h	/^    CV_BADMEMBLOCK_ERR          = -113,$/;"	e	enum:CvStatus
CV_BADPOINT_ERR	opencv/include/cxmisc.h	/^    CV_BADPOINT_ERR    =  -6,$/;"	e	enum:CvStatus
CV_BADRANGE_ERR	opencv/include/cxmisc.h	/^    CV_BADRANGE_ERR    = -44,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BADROI_ERR	opencv/include/cxmisc.h	/^    CV_BADROI_ERR               = -106,$/;"	e	enum:CvStatus
CV_BADSCALE_ERR	opencv/include/cxmisc.h	/^    CV_BADSCALE_ERR    =  -4,$/;"	e	enum:CvStatus
CV_BADSIZE_ERR	opencv/include/cxmisc.h	/^    CV_BADSIZE_ERR     =  -1,$/;"	e	enum:CvStatus
CV_BADSTEP_ERR	opencv/include/cxmisc.h	/^    CV_BADSTEP_ERR     = -29,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_BGFG_FGD_ALPHA_1	opencv/include/cvaux.h	1217;"	d
CV_BGFG_FGD_ALPHA_2	opencv/include/cvaux.h	1222;"	d
CV_BGFG_FGD_ALPHA_3	opencv/include/cvaux.h	1225;"	d
CV_BGFG_FGD_BG_UPDATE_TRESH	opencv/include/cvaux.h	1233;"	d
CV_BGFG_FGD_DELTA	opencv/include/cvaux.h	1227;"	d
CV_BGFG_FGD_LC	opencv/include/cvaux.h	1208;"	d
CV_BGFG_FGD_LCC	opencv/include/cvaux.h	1212;"	d
CV_BGFG_FGD_MINAREA	opencv/include/cvaux.h	1231;"	d
CV_BGFG_FGD_N1C	opencv/include/cvaux.h	1209;"	d
CV_BGFG_FGD_N1CC	opencv/include/cvaux.h	1213;"	d
CV_BGFG_FGD_N2C	opencv/include/cvaux.h	1210;"	d
CV_BGFG_FGD_N2CC	opencv/include/cvaux.h	1214;"	d
CV_BGFG_FGD_T	opencv/include/cvaux.h	1229;"	d
CV_BGFG_MOG_BACKGROUND_THRESHOLD	opencv/include/cvaux.h	1329;"	d
CV_BGFG_MOG_MAX_NGAUSSIANS	opencv/include/cvaux.h	1326;"	d
CV_BGFG_MOG_MINAREA	opencv/include/cvaux.h	1335;"	d
CV_BGFG_MOG_NCOLORS	opencv/include/cvaux.h	1338;"	d
CV_BGFG_MOG_NGAUSSIANS	opencv/include/cvaux.h	1332;"	d
CV_BGFG_MOG_SIGMA_INIT	opencv/include/cvaux.h	1334;"	d
CV_BGFG_MOG_STD_THRESHOLD	opencv/include/cvaux.h	1330;"	d
CV_BGFG_MOG_WEIGHT_INIT	opencv/include/cvaux.h	1333;"	d
CV_BGFG_MOG_WINDOW_SIZE	opencv/include/cvaux.h	1331;"	d
CV_BGR2BGR555	opencv/include/cv.h	202;"	d
CV_BGR2BGR565	opencv/include/cv.h	190;"	d
CV_BGR2BGRA	opencv/include/cv.h	163;"	d
CV_BGR2GRAY	opencv/include/cv.h	181;"	d
CV_BGR2HLS	opencv/include/cv.h	242;"	d
CV_BGR2HSV	opencv/include/cv.h	224;"	d
CV_BGR2Lab	opencv/include/cv.h	227;"	d
CV_BGR2Luv	opencv/include/cv.h	240;"	d
CV_BGR2RGB	opencv/include/cv.h	175;"	d
CV_BGR2RGBA	opencv/include/cv.h	169;"	d
CV_BGR2XYZ	opencv/include/cv.h	214;"	d
CV_BGR2YCrCb	opencv/include/cv.h	219;"	d
CV_BGR5552BGR	opencv/include/cv.h	204;"	d
CV_BGR5552BGRA	opencv/include/cv.h	208;"	d
CV_BGR5552GRAY	opencv/include/cv.h	212;"	d
CV_BGR5552RGB	opencv/include/cv.h	205;"	d
CV_BGR5552RGBA	opencv/include/cv.h	209;"	d
CV_BGR5652BGR	opencv/include/cv.h	192;"	d
CV_BGR5652BGRA	opencv/include/cv.h	196;"	d
CV_BGR5652GRAY	opencv/include/cv.h	200;"	d
CV_BGR5652RGB	opencv/include/cv.h	193;"	d
CV_BGR5652RGBA	opencv/include/cv.h	197;"	d
CV_BGRA2BGR	opencv/include/cv.h	166;"	d
CV_BGRA2BGR555	opencv/include/cv.h	206;"	d
CV_BGRA2BGR565	opencv/include/cv.h	194;"	d
CV_BGRA2GRAY	opencv/include/cv.h	187;"	d
CV_BGRA2RGB	opencv/include/cv.h	173;"	d
CV_BGRA2RGBA	opencv/include/cv.h	178;"	d
CV_BG_MODEL_FGD	opencv/include/cvaux.h	1150;"	d
CV_BG_MODEL_FGD_SIMPLE	opencv/include/cvaux.h	1152;"	d
CV_BG_MODEL_MOG	opencv/include/cvaux.h	1151;"	d
CV_BG_STAT_MODEL_FIELDS	opencv/include/cvaux.h	1159;"	d
CV_BIG_INT	opencv/include/cxmisc.h	149;"	d
CV_BIG_INT	opencv/include/cxmisc.h	152;"	d
CV_BIG_UINT	opencv/include/cxmisc.h	150;"	d
CV_BIG_UINT	opencv/include/cxmisc.h	153;"	d
CV_BILATERAL	opencv/include/cv.h	78;"	d
CV_BLOB_CENTER	opencv/include/cvvidsurv.hpp	447;"	d
CV_BLOB_ID	opencv/include/cvvidsurv.hpp	446;"	d
CV_BLOB_MINH	opencv/include/cvvidsurv.hpp	445;"	d
CV_BLOB_MINW	opencv/include/cvvidsurv.hpp	444;"	d
CV_BLOB_RECT	opencv/include/cvvidsurv.hpp	454;"	d
CV_BLOB_RX	opencv/include/cvvidsurv.hpp	452;"	d
CV_BLOB_RY	opencv/include/cvvidsurv.hpp	453;"	d
CV_BLOB_WX	opencv/include/cvvidsurv.hpp	450;"	d
CV_BLOB_WY	opencv/include/cvvidsurv.hpp	451;"	d
CV_BLOB_X	opencv/include/cvvidsurv.hpp	448;"	d
CV_BLOB_Y	opencv/include/cvvidsurv.hpp	449;"	d
CV_BLUR	opencv/include/cv.h	75;"	d
CV_BLUR_NO_SCALE	opencv/include/cv.h	74;"	d
CV_BT_HIST_TYPE_H	opencv/include/cvvidsurv.hpp	1262;"	d
CV_BT_HIST_TYPE_MG	opencv/include/cvvidsurv.hpp	1260;"	d
CV_BT_HIST_TYPE_MG2	opencv/include/cvvidsurv.hpp	1261;"	d
CV_BT_HIST_TYPE_S	opencv/include/cvvidsurv.hpp	1259;"	d
CV_BadAlign	opencv/include/cxerror.h	74;"	d
CV_BadAlphaChannel	opencv/include/cxerror.h	71;"	d
CV_BadCOI	opencv/include/cxerror.h	77;"	d
CV_BadCallBack	opencv/include/cxerror.h	75;"	d
CV_BadDataPtr	opencv/include/cxerror.h	65;"	d
CV_BadDepth	opencv/include/cxerror.h	70;"	d
CV_BadImageSize	opencv/include/cxerror.h	63;"	d
CV_BadModelOrChSeq	opencv/include/cxerror.h	67;"	d
CV_BadNumChannel1U	opencv/include/cxerror.h	69;"	d
CV_BadNumChannels	opencv/include/cxerror.h	68;"	d
CV_BadOffset	opencv/include/cxerror.h	64;"	d
CV_BadOrder	opencv/include/cxerror.h	72;"	d
CV_BadOrigin	opencv/include/cxerror.h	73;"	d
CV_BadROISize	opencv/include/cxerror.h	78;"	d
CV_BadStep	opencv/include/cxerror.h	66;"	d
CV_BadTileSize	opencv/include/cxerror.h	76;"	d
CV_BayerBG2BGR	opencv/include/cv.h	230;"	d
CV_BayerBG2RGB	opencv/include/cv.h	235;"	d
CV_BayerGB2BGR	opencv/include/cv.h	231;"	d
CV_BayerGB2RGB	opencv/include/cv.h	236;"	d
CV_BayerGR2BGR	opencv/include/cv.h	233;"	d
CV_BayerGR2RGB	opencv/include/cv.h	238;"	d
CV_BayerRG2BGR	opencv/include/cv.h	232;"	d
CV_BayerRG2RGB	opencv/include/cv.h	237;"	d
CV_C	opencv/include/cxcore.h	864;"	d
CV_CALIB_CB_ADAPTIVE_THRESH	opencv/include/cv.h	1376;"	d
CV_CALIB_CB_FILTER_QUADS	opencv/include/cv.h	1378;"	d
CV_CALIB_CB_NORMALIZE_IMAGE	opencv/include/cv.h	1377;"	d
CV_CALIB_ETALON_CHECKERBOARD	opencv/include/cvaux.h	/^    CV_CALIB_ETALON_CHECKERBOARD = CV_CALIB_ETALON_CHESSBOARD$/;"	e	enum:CvCalibEtalonType
CV_CALIB_ETALON_CHESSBOARD	opencv/include/cvaux.h	/^    CV_CALIB_ETALON_CHESSBOARD = 0,$/;"	e	enum:CvCalibEtalonType
CV_CALIB_ETALON_USER	opencv/include/cvaux.h	/^    CV_CALIB_ETALON_USER = -1,$/;"	e	enum:CvCalibEtalonType
CV_CALIB_FIX_ASPECT_RATIO	opencv/include/cv.h	1393;"	d
CV_CALIB_FIX_FOCAL_LENGTH	opencv/include/cv.h	1396;"	d
CV_CALIB_FIX_INTRINSIC	opencv/include/cv.h	1425;"	d
CV_CALIB_FIX_K1	opencv/include/cv.h	1397;"	d
CV_CALIB_FIX_K2	opencv/include/cv.h	1398;"	d
CV_CALIB_FIX_K3	opencv/include/cv.h	1399;"	d
CV_CALIB_FIX_PRINCIPAL_POINT	opencv/include/cv.h	1394;"	d
CV_CALIB_SAME_FOCAL_LENGTH	opencv/include/cv.h	1426;"	d
CV_CALIB_USE_INTRINSIC_GUESS	opencv/include/cv.h	1392;"	d
CV_CALIB_ZERO_DISPARITY	opencv/include/cv.h	1441;"	d
CV_CALIB_ZERO_TANGENT_DIST	opencv/include/cv.h	1395;"	d
CV_CALL	opencv/include/cxerror.h	169;"	d
CV_CAMERA_TO_WARP	opencv/include/cvaux.h	550;"	d
CV_CANNY_L2_GRADIENT	opencv/include/cv.h	991;"	d
CV_CAP_ANY	opencv/include/highgui.h	240;"	d
CV_CAP_CMU1394	opencv/include/highgui.h	252;"	d
CV_CAP_DC1394	opencv/include/highgui.h	251;"	d
CV_CAP_DSHOW	opencv/include/highgui.h	265;"	d
CV_CAP_FIREWARE	opencv/include/highgui.h	248;"	d
CV_CAP_FIREWIRE	opencv/include/highgui.h	249;"	d
CV_CAP_IEEE1394	opencv/include/highgui.h	250;"	d
CV_CAP_MIL	opencv/include/highgui.h	242;"	d
CV_CAP_PROP_BRIGHTNESS	opencv/include/highgui.h	297;"	d
CV_CAP_PROP_CONTRAST	opencv/include/highgui.h	298;"	d
CV_CAP_PROP_CONVERT_RGB	opencv/include/highgui.h	303;"	d
CV_CAP_PROP_EXPOSURE	opencv/include/highgui.h	302;"	d
CV_CAP_PROP_FORMAT	opencv/include/highgui.h	295;"	d
CV_CAP_PROP_FOURCC	opencv/include/highgui.h	293;"	d
CV_CAP_PROP_FPS	opencv/include/highgui.h	292;"	d
CV_CAP_PROP_FRAME_COUNT	opencv/include/highgui.h	294;"	d
CV_CAP_PROP_FRAME_HEIGHT	opencv/include/highgui.h	291;"	d
CV_CAP_PROP_FRAME_WIDTH	opencv/include/highgui.h	290;"	d
CV_CAP_PROP_GAIN	opencv/include/highgui.h	301;"	d
CV_CAP_PROP_HUE	opencv/include/highgui.h	300;"	d
CV_CAP_PROP_MODE	opencv/include/highgui.h	296;"	d
CV_CAP_PROP_POS_AVI_RATIO	opencv/include/highgui.h	289;"	d
CV_CAP_PROP_POS_FRAMES	opencv/include/highgui.h	288;"	d
CV_CAP_PROP_POS_MSEC	opencv/include/highgui.h	287;"	d
CV_CAP_PROP_RECTIFICATION	opencv/include/highgui.h	305;"	d
CV_CAP_PROP_SATURATION	opencv/include/highgui.h	299;"	d
CV_CAP_PROP_WHITE_BALANCE	opencv/include/highgui.h	304;"	d
CV_CAP_QT	opencv/include/highgui.h	261;"	d
CV_CAP_STEREO	opencv/include/highgui.h	254;"	d
CV_CAP_TYZX	opencv/include/highgui.h	255;"	d
CV_CAP_UNICAP	opencv/include/highgui.h	263;"	d
CV_CAP_V4L	opencv/include/highgui.h	245;"	d
CV_CAP_V4L2	opencv/include/highgui.h	246;"	d
CV_CAP_VFW	opencv/include/highgui.h	244;"	d
CV_CAST_16S	opencv/include/cxmisc.h	203;"	d
CV_CAST_16U	opencv/include/cxmisc.h	202;"	d
CV_CAST_32F	opencv/include/cxmisc.h	206;"	d
CV_CAST_32S	opencv/include/cxmisc.h	204;"	d
CV_CAST_64F	opencv/include/cxmisc.h	207;"	d
CV_CAST_64S	opencv/include/cxmisc.h	205;"	d
CV_CAST_8S	opencv/include/cxmisc.h	201;"	d
CV_CAST_8U	opencv/include/cxmisc.h	200;"	d
CV_CDECL	opencv/include/cxtypes.h	112;"	d
CV_CDECL	opencv/include/cxtypes.h	115;"	d
CV_CDECL	opencv/include/highgui.h	55;"	d
CV_CDECL	opencv/include/highgui.h	58;"	d
CV_CDECL	opencv/include/ml.h	61;"	d
CV_CDECL	opencv/include/ml.h	64;"	d
CV_CHAIN_APPROX_NONE	opencv/include/cvtypes.h	92;"	d
CV_CHAIN_APPROX_SIMPLE	opencv/include/cvtypes.h	93;"	d
CV_CHAIN_APPROX_TC89_KCOS	opencv/include/cvtypes.h	95;"	d
CV_CHAIN_APPROX_TC89_L1	opencv/include/cvtypes.h	94;"	d
CV_CHAIN_CODE	opencv/include/cvtypes.h	91;"	d
CV_CHECK	opencv/include/cxerror.h	157;"	d
CV_CHECK_NANS	opencv/include/cxmisc.h	115;"	d
CV_CHECK_QUIET	opencv/include/cxcore.h	667;"	d
CV_CHECK_RANGE	opencv/include/cxcore.h	666;"	d
CV_CHOLESKY	opencv/include/cxcore.h	765;"	d
CV_CLOCKWISE	opencv/include/cv.h	786;"	d
CV_CMP	opencv/include/cxtypes.h	223;"	d
CV_CMP_EQ	opencv/include/cxcore.h	590;"	d
CV_CMP_GE	opencv/include/cxcore.h	592;"	d
CV_CMP_GT	opencv/include/cxcore.h	591;"	d
CV_CMP_LE	opencv/include/cxcore.h	594;"	d
CV_CMP_LT	opencv/include/cxcore.h	593;"	d
CV_CMP_NE	opencv/include/cxcore.h	595;"	d
CV_CN_MAX	opencv/include/cxtypes.h	481;"	d
CV_CN_SHIFT	opencv/include/cxtypes.h	482;"	d
CV_COLORCVT_MAX	opencv/include/cv.h	255;"	d
CV_COL_SAMPLE	opencv/include/ml.h	125;"	d
CV_COMP_BHATTACHARYYA	opencv/include/cv.h	867;"	d
CV_COMP_CHISQR	opencv/include/cv.h	865;"	d
CV_COMP_CORREL	opencv/include/cv.h	864;"	d
CV_COMP_INTERSECT	opencv/include/cv.h	866;"	d
CV_CONTOURS_MATCH_I1	opencv/include/cv.h	758;"	d
CV_CONTOURS_MATCH_I2	opencv/include/cv.h	759;"	d
CV_CONTOURS_MATCH_I3	opencv/include/cv.h	760;"	d
CV_CONTOUR_FIELDS	opencv/include/cxtypes.h	1359;"	d
CV_CONTOUR_TREES_MATCH_I1	opencv/include/cv.h	777;"	d
CV_COUNT	opencv/include/ml.h	1811;"	d
CV_COUNTER_CLOCKWISE	opencv/include/cv.h	787;"	d
CV_COUNT_OBS	opencv/include/cvaux.h	174;"	d
CV_COVAR_COLS	opencv/include/cxcore.h	819;"	d
CV_COVAR_NORMAL	opencv/include/cxcore.h	806;"	d
CV_COVAR_ROWS	opencv/include/cxcore.h	816;"	d
CV_COVAR_SCALE	opencv/include/cxcore.h	813;"	d
CV_COVAR_SCRAMBLED	opencv/include/cxcore.h	803;"	d
CV_COVAR_USE_AVG	opencv/include/cxcore.h	810;"	d
CV_CURRENT_INT	opencv/include/cvaux.h	276;"	d
CV_CURRENT_POINT	opencv/include/cxtypes.h	1619;"	d
CV_CVTIMG_FLIP	opencv/include/highgui.h	221;"	d
CV_CVTIMG_SWAP_RB	opencv/include/highgui.h	222;"	d
CV_DBG_BREAK	opencv/include/cxmisc.h	158;"	d
CV_DECL_ALIGNED	opencv/include/cxmisc.h	138;"	d
CV_DECL_ALIGNED	opencv/include/cxmisc.h	140;"	d
CV_DECL_ALIGNED	opencv/include/cxmisc.h	142;"	d
CV_DEFAULT	opencv/include/cxtypes.h	122;"	d
CV_DEFAULT	opencv/include/cxtypes.h	125;"	d
CV_DEFAULT	opencv/include/highgui.h	65;"	d
CV_DEFAULT	opencv/include/highgui.h	68;"	d
CV_DEFAULT	opencv/include/ml.h	71;"	d
CV_DEFAULT	opencv/include/ml.h	74;"	d
CV_DEFAULT_IMAGE_ROW_ALIGN	opencv/include/cxmisc.h	75;"	d
CV_DEFAULT_MAT_ROW_ALIGN	opencv/include/cxmisc.h	78;"	d
CV_DEPTH_MAX	opencv/include/cxtypes.h	483;"	d
CV_DESCALE	opencv/include/cxmisc.h	241;"	d
CV_DIFF	opencv/include/cxcore.h	869;"	d
CV_DIFF_C	opencv/include/cxcore.h	872;"	d
CV_DIFF_L1	opencv/include/cxcore.h	873;"	d
CV_DIFF_L2	opencv/include/cxcore.h	874;"	d
CV_DIM	opencv/include/cxmisc.h	217;"	d
CV_DISPARITY_BIRCHFIELD	opencv/include/cvaux.h	453;"	d
CV_DIST_C	opencv/include/cvtypes.h	208;"	d
CV_DIST_FAIR	opencv/include/cvtypes.h	210;"	d
CV_DIST_HUBER	opencv/include/cvtypes.h	212;"	d
CV_DIST_L1	opencv/include/cvtypes.h	206;"	d
CV_DIST_L12	opencv/include/cvtypes.h	209;"	d
CV_DIST_L2	opencv/include/cvtypes.h	207;"	d
CV_DIST_MASK_3	opencv/include/cv.h	933;"	d
CV_DIST_MASK_5	opencv/include/cv.h	934;"	d
CV_DIST_MASK_PRECISE	opencv/include/cv.h	935;"	d
CV_DIST_USER	opencv/include/cvtypes.h	205;"	d
CV_DIST_WELSCH	opencv/include/cvtypes.h	211;"	d
CV_DIV_BY_ZERO_ERR	opencv/include/cxmisc.h	/^    CV_DIV_BY_ZERO_ERR =  -11, \/\/ipp comp$/;"	e	enum:CvStatus
CV_DOMINANT_IPAN	opencv/include/cv.h	726;"	d
CV_DTREE_CAT_DIR	opencv/include/ml.h	716;"	d
CV_DXT_FORWARD	opencv/include/cxcore.h	902;"	d
CV_DXT_INVERSE	opencv/include/cxcore.h	903;"	d
CV_DXT_INVERSE_SCALE	opencv/include/cxcore.h	906;"	d
CV_DXT_INV_SCALE	opencv/include/cxcore.h	905;"	d
CV_DXT_MUL_CONJ	opencv/include/cxcore.h	908;"	d
CV_DXT_ROWS	opencv/include/cxcore.h	907;"	d
CV_DXT_SCALE	opencv/include/cxcore.h	904;"	d
CV_DbgAssert	opencv/include/cxcore.hpp	119;"	d
CV_DbgAssert	opencv/include/cxcore.hpp	121;"	d
CV_EIGOBJ_BOTH_CALLBACK	opencv/include/cvaux.h	71;"	d
CV_EIGOBJ_INPUT_CALLBACK	opencv/include/cvaux.h	69;"	d
CV_EIGOBJ_NO_CALLBACK	opencv/include/cvaux.h	68;"	d
CV_EIGOBJ_OUTPUT_CALLBACK	opencv/include/cvaux.h	70;"	d
CV_ELEM_SIZE	opencv/include/cxtypes.h	632;"	d
CV_ELEM_SIZE1	opencv/include/cxtypes.h	628;"	d
CV_EMPTY	opencv/include/cxmisc.h	212;"	d
CV_EQ	opencv/include/cxmisc.h	191;"	d
CV_ERROR	opencv/include/cxerror.h	142;"	d
CV_ERROR_FROM_CODE	opencv/include/cxerror.h	149;"	d
CV_EVENT_FLAG_ALTKEY	opencv/include/highgui.h	177;"	d
CV_EVENT_FLAG_CTRLKEY	opencv/include/highgui.h	175;"	d
CV_EVENT_FLAG_LBUTTON	opencv/include/highgui.h	172;"	d
CV_EVENT_FLAG_MBUTTON	opencv/include/highgui.h	174;"	d
CV_EVENT_FLAG_RBUTTON	opencv/include/highgui.h	173;"	d
CV_EVENT_FLAG_SHIFTKEY	opencv/include/highgui.h	176;"	d
CV_EVENT_LBUTTONDBLCLK	opencv/include/highgui.h	168;"	d
CV_EVENT_LBUTTONDOWN	opencv/include/highgui.h	162;"	d
CV_EVENT_LBUTTONUP	opencv/include/highgui.h	165;"	d
CV_EVENT_MBUTTONDBLCLK	opencv/include/highgui.h	170;"	d
CV_EVENT_MBUTTONDOWN	opencv/include/highgui.h	164;"	d
CV_EVENT_MBUTTONUP	opencv/include/highgui.h	167;"	d
CV_EVENT_MOUSEMOVE	opencv/include/highgui.h	161;"	d
CV_EVENT_RBUTTONDBLCLK	opencv/include/highgui.h	169;"	d
CV_EVENT_RBUTTONDOWN	opencv/include/highgui.h	163;"	d
CV_EVENT_RBUTTONUP	opencv/include/highgui.h	166;"	d
CV_EXPORTS	opencv/include/cxtypes.h	148;"	d
CV_EXPORTS	opencv/include/cxtypes.h	150;"	d
CV_EXPORTS	opencv/include/highgui.h	91;"	d
CV_EXPORTS	opencv/include/highgui.h	93;"	d
CV_EXPORTS	opencv/include/ml.h	97;"	d
CV_EXPORTS	opencv/include/ml.h	99;"	d
CV_EXTERN_C	opencv/include/cxtypes.h	121;"	d
CV_EXTERN_C	opencv/include/cxtypes.h	124;"	d
CV_EXTERN_C	opencv/include/highgui.h	64;"	d
CV_EXTERN_C	opencv/include/highgui.h	67;"	d
CV_EXTERN_C	opencv/include/ml.h	70;"	d
CV_EXTERN_C	opencv/include/ml.h	73;"	d
CV_EXTERN_C_FUNCPTR	opencv/include/cxtypes.h	131;"	d
CV_EXTERN_C_FUNCPTR	opencv/include/cxtypes.h	133;"	d
CV_EXTERN_C_FUNCPTR	opencv/include/highgui.h	74;"	d
CV_EXTERN_C_FUNCPTR	opencv/include/highgui.h	76;"	d
CV_EXTERN_C_FUNCPTR	opencv/include/ml.h	80;"	d
CV_EXTERN_C_FUNCPTR	opencv/include/ml.h	82;"	d
CV_ErrModeLeaf	opencv/include/cxcore.h	1511;"	d
CV_ErrModeParent	opencv/include/cxcore.h	1512;"	d
CV_ErrModeSilent	opencv/include/cxcore.h	1513;"	d
CV_Error	opencv/include/cxcore.hpp	109;"	d
CV_Error	opencv/include/cxcore.hpp	113;"	d
CV_Error_	opencv/include/cxcore.hpp	110;"	d
CV_Error_	opencv/include/cxcore.hpp	114;"	d
CV_FACE_ELEMENTS	opencv/include/cvaux.h	/^enum CV_FACE_ELEMENTS$/;"	g
CV_FACE_LEFT_EYE	opencv/include/cvaux.h	/^    CV_FACE_LEFT_EYE = 1,$/;"	e	enum:CV_FACE_ELEMENTS
CV_FACE_MOUTH	opencv/include/cvaux.h	/^    CV_FACE_MOUTH = 0,$/;"	e	enum:CV_FACE_ELEMENTS
CV_FACE_RIGHT_EYE	opencv/include/cvaux.h	/^    CV_FACE_RIGHT_EYE = 2$/;"	e	enum:CV_FACE_ELEMENTS
CV_FILLED	opencv/include/cxcore.h	1290;"	d
CV_FIRST_VORONOIEDGE2D	opencv/include/cvaux.h	934;"	d
CV_FLOODFILL_FIXED_RANGE	opencv/include/cv.h	976;"	d
CV_FLOODFILL_MASK_ONLY	opencv/include/cv.h	977;"	d
CV_FLT_TO_FIX	opencv/include/cxmisc.h	242;"	d
CV_FM_7POINT	opencv/include/cv.h	1481;"	d
CV_FM_8POINT	opencv/include/cv.h	1482;"	d
CV_FM_LMEDS	opencv/include/cv.h	1485;"	d
CV_FM_LMEDS_ONLY	opencv/include/cv.h	1483;"	d
CV_FM_RANSAC	opencv/include/cv.h	1486;"	d
CV_FM_RANSAC_ONLY	opencv/include/cv.h	1484;"	d
CV_FONT_HERSHEY_COMPLEX	opencv/include/cxcore.h	1380;"	d
CV_FONT_HERSHEY_COMPLEX_SMALL	opencv/include/cxcore.h	1382;"	d
CV_FONT_HERSHEY_DUPLEX	opencv/include/cxcore.h	1379;"	d
CV_FONT_HERSHEY_PLAIN	opencv/include/cxcore.h	1378;"	d
CV_FONT_HERSHEY_SCRIPT_COMPLEX	opencv/include/cxcore.h	1384;"	d
CV_FONT_HERSHEY_SCRIPT_SIMPLEX	opencv/include/cxcore.h	1383;"	d
CV_FONT_HERSHEY_SIMPLEX	opencv/include/cxcore.h	1377;"	d
CV_FONT_HERSHEY_TRIPLEX	opencv/include/cxcore.h	1381;"	d
CV_FONT_ITALIC	opencv/include/cxcore.h	1387;"	d
CV_FONT_VECTOR0	opencv/include/cxcore.h	1389;"	d
CV_FOURCC	opencv/include/highgui.h	318;"	d
CV_FOURCC_DEFAULT	opencv/include/highgui.h	326;"	d
CV_FOURCC_PROMPT	opencv/include/highgui.h	325;"	d
CV_FRONT	opencv/include/cxcore.h	995;"	d
CV_FUNCNAME	opencv/include/cxerror.h	130;"	d
CV_FUNCNAME	opencv/include/cxerror.h	133;"	d
CV_GAUSSIAN	opencv/include/cv.h	76;"	d
CV_GAUSSIAN_5x5	opencv/include/cvtypes.h	/^    CV_GAUSSIAN_5x5 = 7$/;"	e	enum:CvFilter
CV_GE	opencv/include/cxmisc.h	194;"	d
CV_GEMM_A_T	opencv/include/cxcore.h	707;"	d
CV_GEMM_B_T	opencv/include/cxcore.h	708;"	d
CV_GEMM_C_T	opencv/include/cxcore.h	709;"	d
CV_GET_CURRENT	opencv/include/cvcompat.h	975;"	d
CV_GET_SEQ_ELEM	opencv/include/cxtypes.h	1545;"	d
CV_GLCMDESC_CLUSTERSHADE	opencv/include/cvaux.h	783;"	d
CV_GLCMDESC_CLUSTERTENDENCY	opencv/include/cvaux.h	782;"	d
CV_GLCMDESC_CONTRAST	opencv/include/cvaux.h	781;"	d
CV_GLCMDESC_CORRELATION	opencv/include/cvaux.h	784;"	d
CV_GLCMDESC_CORRELATIONINFO1	opencv/include/cvaux.h	785;"	d
CV_GLCMDESC_CORRELATIONINFO2	opencv/include/cvaux.h	786;"	d
CV_GLCMDESC_ENERGY	opencv/include/cvaux.h	779;"	d
CV_GLCMDESC_ENTROPY	opencv/include/cvaux.h	778;"	d
CV_GLCMDESC_HOMOGENITY	opencv/include/cvaux.h	780;"	d
CV_GLCMDESC_MAXIMUMPROBABILITY	opencv/include/cvaux.h	787;"	d
CV_GLCMDESC_OPTIMIZATION_ALLOWDOUBLENEST	opencv/include/cvaux.h	774;"	d
CV_GLCMDESC_OPTIMIZATION_ALLOWTRIPLENEST	opencv/include/cvaux.h	775;"	d
CV_GLCMDESC_OPTIMIZATION_HISTOGRAM	opencv/include/cvaux.h	776;"	d
CV_GLCM_ALL	opencv/include/cvaux.h	789;"	d
CV_GLCM_DESC	opencv/include/cvaux.h	791;"	d
CV_GLCM_GLCM	opencv/include/cvaux.h	790;"	d
CV_GLCM_OPTIMIZATION_HISTOGRAM	opencv/include/cvaux.h	772;"	d
CV_GLCM_OPTIMIZATION_LUT	opencv/include/cvaux.h	771;"	d
CV_GLCM_OPTIMIZATION_NONE	opencv/include/cvaux.h	770;"	d
CV_GRAPH	opencv/include/cxtypes.h	1424;"	d
CV_GRAPH_ALL_ITEMS	opencv/include/cxcore.h	1237;"	d
CV_GRAPH_ANY_EDGE	opencv/include/cxcore.h	1232;"	d
CV_GRAPH_BACKTRACKING	opencv/include/cxcore.h	1234;"	d
CV_GRAPH_BACK_EDGE	opencv/include/cxcore.h	1229;"	d
CV_GRAPH_CROSS_EDGE	opencv/include/cxcore.h	1231;"	d
CV_GRAPH_EDGE_FIELDS	opencv/include/cxtypes.h	1303;"	d
CV_GRAPH_FIELDS	opencv/include/cxtypes.h	1338;"	d
CV_GRAPH_FLAG_ORIENTED	opencv/include/cxtypes.h	1422;"	d
CV_GRAPH_FORWARD_EDGE	opencv/include/cxcore.h	1230;"	d
CV_GRAPH_FORWARD_EDGE_FLAG	opencv/include/cxcore.h	1246;"	d
CV_GRAPH_ITEM_VISITED_FLAG	opencv/include/cxcore.h	1240;"	d
CV_GRAPH_NEW_TREE	opencv/include/cxcore.h	1233;"	d
CV_GRAPH_OVER	opencv/include/cxcore.h	1235;"	d
CV_GRAPH_SEARCH_TREE_NODE_FLAG	opencv/include/cxcore.h	1245;"	d
CV_GRAPH_TREE_EDGE	opencv/include/cxcore.h	1228;"	d
CV_GRAPH_VERTEX	opencv/include/cxcore.h	1227;"	d
CV_GRAPH_VERTEX_FIELDS	opencv/include/cxtypes.h	1310;"	d
CV_GRAPH_WEIGHTED_EDGE_FIELDS	opencv/include/cvaux.h	282;"	d
CV_GRAPH_WEIGHTED_VERTEX_FIELDS	opencv/include/cvaux.h	279;"	d
CV_GRAY2BGR	opencv/include/cv.h	183;"	d
CV_GRAY2BGR555	opencv/include/cv.h	211;"	d
CV_GRAY2BGR565	opencv/include/cv.h	199;"	d
CV_GRAY2BGRA	opencv/include/cv.h	185;"	d
CV_GRAY2RGB	opencv/include/cv.h	184;"	d
CV_GRAY2RGBA	opencv/include/cv.h	186;"	d
CV_GT	opencv/include/cxmisc.h	193;"	d
CV_HAAR_DO_CANNY_PRUNING	opencv/include/cv.h	1256;"	d
CV_HAAR_DO_ROUGH_SEARCH	opencv/include/cv.h	1259;"	d
CV_HAAR_FEATURE_MAX	opencv/include/cvtypes.h	325;"	d
CV_HAAR_FIND_BIGGEST_OBJECT	opencv/include/cv.h	1258;"	d
CV_HAAR_MAGIC_VAL	opencv/include/cvtypes.h	318;"	d
CV_HAAR_SCALE_IMAGE	opencv/include/cv.h	1257;"	d
CV_HIST_ARRAY	opencv/include/cxtypes.h	819;"	d
CV_HIST_HAS_RANGES	opencv/include/cxtypes.h	848;"	d
CV_HIST_MAGIC_VAL	opencv/include/cxtypes.h	813;"	d
CV_HIST_RANGES_FLAG	opencv/include/cxtypes.h	817;"	d
CV_HIST_SPARSE	opencv/include/cxtypes.h	820;"	d
CV_HIST_TREE	opencv/include/cxtypes.h	821;"	d
CV_HIST_UNIFORM	opencv/include/cxtypes.h	825;"	d
CV_HIST_UNIFORM_FLAG	opencv/include/cxtypes.h	814;"	d
CV_HLS2BGR	opencv/include/cv.h	252;"	d
CV_HLS2RGB	opencv/include/cv.h	253;"	d
CV_HOUGH_GRADIENT	opencv/include/cv.h	1038;"	d
CV_HOUGH_MULTI_SCALE	opencv/include/cv.h	1037;"	d
CV_HOUGH_PROBABILISTIC	opencv/include/cv.h	1036;"	d
CV_HOUGH_STANDARD	opencv/include/cv.h	1035;"	d
CV_HSV2BGR	opencv/include/cv.h	245;"	d
CV_HSV2RGB	opencv/include/cv.h	246;"	d
CV_HeaderIsNull	opencv/include/cxerror.h	62;"	d
CV_IABS	opencv/include/cxtypes.h	219;"	d
CV_IABS	opencv/include/cxtypes.h	221;"	d
CV_ICC	opencv/include/cxtypes.h	70;"	d
CV_ICC	opencv/include/cxtypes.h	72;"	d
CV_ICC	opencv/include/cxtypes.h	74;"	d
CV_ICC	opencv/include/cxtypes.h	76;"	d
CV_IDP_BIRCHFIELD_PARAM1	opencv/include/cvaux.h	446;"	d
CV_IDP_BIRCHFIELD_PARAM2	opencv/include/cvaux.h	447;"	d
CV_IDP_BIRCHFIELD_PARAM3	opencv/include/cvaux.h	448;"	d
CV_IDP_BIRCHFIELD_PARAM4	opencv/include/cvaux.h	449;"	d
CV_IDP_BIRCHFIELD_PARAM5	opencv/include/cvaux.h	450;"	d
CV_IMAGE_ELEM	opencv/include/cxtypes.h	474;"	d
CV_IMAX	opencv/include/cxtypes.h	215;"	d
CV_IMIN	opencv/include/cxtypes.h	213;"	d
CV_IMPL	opencv/include/cxmisc.h	156;"	d
CV_IMPLEMENT_QSORT	opencv/include/cxmisc.h	470;"	d
CV_IMPLEMENT_QSORT_EX	opencv/include/cxmisc.h	306;"	d
CV_IMWRITE_JPEG_QUALITY	opencv/include/highgui.h	205;"	d
CV_IMWRITE_PNG_COMPRESSION	opencv/include/highgui.h	206;"	d
CV_IMWRITE_PXM_BINARY	opencv/include/highgui.h	207;"	d
CV_INIT_3X3_DELTAS	opencv/include/cvtypes.h	109;"	d
CV_INIT_FUNC_TAB	opencv/include/cxmisc.h	533;"	d
CV_INIT_PIXEL_POS	opencv/include/cvcompat.h	949;"	d
CV_INLINE	opencv/include/cxtypes.h	139;"	d
CV_INLINE	opencv/include/cxtypes.h	141;"	d
CV_INLINE	opencv/include/cxtypes.h	143;"	d
CV_INLINE	opencv/include/highgui.h	82;"	d
CV_INLINE	opencv/include/highgui.h	84;"	d
CV_INLINE	opencv/include/highgui.h	86;"	d
CV_INLINE	opencv/include/ml.h	88;"	d
CV_INLINE	opencv/include/ml.h	90;"	d
CV_INLINE	opencv/include/ml.h	92;"	d
CV_INPAINT_NS	opencv/include/cv.h	141;"	d
CV_INPAINT_TELEA	opencv/include/cv.h	142;"	d
CV_INPLACE_NOT_SUPPORTED_ERR	opencv/include/cxmisc.h	/^    CV_INPLACE_NOT_SUPPORTED_ERR= -112,$/;"	e	enum:CvStatus
CV_INTER_AREA	opencv/include/cv.h	263;"	d
CV_INTER_CUBIC	opencv/include/cv.h	262;"	d
CV_INTER_LINEAR	opencv/include/cv.h	261;"	d
CV_INTER_NN	opencv/include/cv.h	260;"	d
CV_IS_CONT_MAT	opencv/include/cxtypes.h	552;"	d
CV_IS_GRAPH	opencv/include/cxtypes.h	1488;"	d
CV_IS_GRAPH_EDGE_VISITED	opencv/include/cxcore.h	1243;"	d
CV_IS_GRAPH_ORIENTED	opencv/include/cxtypes.h	1491;"	d
CV_IS_GRAPH_VERTEX_VISITED	opencv/include/cxcore.h	1241;"	d
CV_IS_HAAR_CLASSIFIER	opencv/include/cvtypes.h	321;"	d
CV_IS_HIST	opencv/include/cxtypes.h	837;"	d
CV_IS_IMAGE	opencv/include/cxtypes.h	465;"	d
CV_IS_IMAGE_HDR	opencv/include/cxtypes.h	462;"	d
CV_IS_MASK_ARR	opencv/include/cxtypes.h	608;"	d
CV_IS_MAT	opencv/include/cxtypes.h	605;"	d
CV_IS_MATND	opencv/include/cxtypes.h	751;"	d
CV_IS_MATND_HDR	opencv/include/cxtypes.h	748;"	d
CV_IS_MAT_CONST	opencv/include/cxtypes.h	623;"	d
CV_IS_MAT_CONT	opencv/include/cxtypes.h	551;"	d
CV_IS_MAT_HDR	opencv/include/cxtypes.h	600;"	d
CV_IS_ROW_SAMPLE	opencv/include/ml.h	130;"	d
CV_IS_SEQ	opencv/include/cxtypes.h	1379;"	d
CV_IS_SEQ_CHAIN	opencv/include/cxtypes.h	1475;"	d
CV_IS_SEQ_CHAIN_CONTOUR	opencv/include/cxtypes.h	1481;"	d
CV_IS_SEQ_CLOSED	opencv/include/cxtypes.h	1456;"	d
CV_IS_SEQ_CONTOUR	opencv/include/cxtypes.h	1478;"	d
CV_IS_SEQ_CONVEX	opencv/include/cxtypes.h	1457;"	d
CV_IS_SEQ_CURVE	opencv/include/cxtypes.h	1455;"	d
CV_IS_SEQ_HOLE	opencv/include/cxtypes.h	1458;"	d
CV_IS_SEQ_INDEX	opencv/include/cxtypes.h	1452;"	d
CV_IS_SEQ_POINT_SET	opencv/include/cxtypes.h	1463;"	d
CV_IS_SEQ_POINT_SUBSET	opencv/include/cxtypes.h	1466;"	d
CV_IS_SEQ_POLYGON	opencv/include/cxtypes.h	1472;"	d
CV_IS_SEQ_POLYGON_TREE	opencv/include/cxtypes.h	1484;"	d
CV_IS_SEQ_POLYLINE	opencv/include/cxtypes.h	1469;"	d
CV_IS_SEQ_SIMPLE	opencv/include/cxtypes.h	1459;"	d
CV_IS_SET	opencv/include/cxtypes.h	1383;"	d
CV_IS_SET_ELEM	opencv/include/cxtypes.h	1281;"	d
CV_IS_SET_ELEM_EXISTS	opencv/include/cvcompat.h	500;"	d
CV_IS_SPARSE_HIST	opencv/include/cxtypes.h	845;"	d
CV_IS_SPARSE_MAT	opencv/include/cxtypes.h	784;"	d
CV_IS_SPARSE_MAT_HDR	opencv/include/cxtypes.h	780;"	d
CV_IS_STORAGE	opencv/include/cxtypes.h	1189;"	d
CV_IS_SUBDIV2D	opencv/include/cxtypes.h	1494;"	d
CV_IS_TEMP_MAT	opencv/include/cxtypes.h	555;"	d
CV_IS_UNIFORM_HIST	opencv/include/cxtypes.h	842;"	d
CV_KMEANS_USE_INITIAL_LABELS	opencv/include/cxcore.h	1484;"	d
CV_L1	opencv/include/cxcore.h	865;"	d
CV_L2	opencv/include/cxcore.h	866;"	d
CV_LAST_VORONOIEDGE2D	opencv/include/cvaux.h	935;"	d
CV_LE	opencv/include/cxmisc.h	190;"	d
CV_LEE_AUTO	opencv/include/cvaux.h	/^    CV_LEE_AUTO = -1,$/;"	e	enum:CvLeeParameters
CV_LEE_DOUBLE	opencv/include/cvaux.h	/^    CV_LEE_DOUBLE = 2,$/;"	e	enum:CvLeeParameters
CV_LEE_ERODE	opencv/include/cvaux.h	/^    CV_LEE_ERODE = 0,$/;"	e	enum:CvLeeParameters
CV_LEE_FLOAT	opencv/include/cvaux.h	/^    CV_LEE_FLOAT = 1,$/;"	e	enum:CvLeeParameters
CV_LEE_INT	opencv/include/cvaux.h	/^    CV_LEE_INT = 0,$/;"	e	enum:CvLeeParameters
CV_LEE_NON	opencv/include/cvaux.h	/^    CV_LEE_NON = 2$/;"	e	enum:CvLeeParameters
CV_LEE_ZOOM	opencv/include/cvaux.h	/^    CV_LEE_ZOOM = 1,$/;"	e	enum:CvLeeParameters
CV_LINK_RUNS	opencv/include/cvtypes.h	96;"	d
CV_LKFLOW_GET_MIN_EIGENVALS	opencv/include/cv.h	486;"	d
CV_LKFLOW_INITIAL_GUESSES	opencv/include/cv.h	485;"	d
CV_LKFLOW_PYR_A_READY	opencv/include/cv.h	483;"	d
CV_LKFLOW_PYR_B_READY	opencv/include/cv.h	484;"	d
CV_LMEDS	opencv/include/cv.h	1309;"	d
CV_LOAD_IMAGE_ANYCOLOR	opencv/include/highgui.h	194;"	d
CV_LOAD_IMAGE_ANYDEPTH	opencv/include/highgui.h	192;"	d
CV_LOAD_IMAGE_COLOR	opencv/include/highgui.h	190;"	d
CV_LOAD_IMAGE_GRAYSCALE	opencv/include/highgui.h	188;"	d
CV_LOAD_IMAGE_UNCHANGED	opencv/include/highgui.h	186;"	d
CV_LOG2	opencv/include/cxtypes.h	200;"	d
CV_LOG2PI	opencv/include/ml.h	122;"	d
CV_LT	opencv/include/cxmisc.h	189;"	d
CV_LU	opencv/include/cxcore.h	762;"	d
CV_Lab2BGR	opencv/include/cv.h	248;"	d
CV_Lab2RGB	opencv/include/cv.h	249;"	d
CV_Luv2BGR	opencv/include/cv.h	250;"	d
CV_Luv2RGB	opencv/include/cv.h	251;"	d
CV_MAGIC_MASK	opencv/include/cxtypes.h	557;"	d
CV_MAJOR_VERSION	opencv/include/cvver.h	50;"	d
CV_MAKETYPE	opencv/include/cxtypes.h	497;"	d
CV_MAKE_STR	opencv/include/cxmisc.h	213;"	d
CV_MAKE_TYPE	opencv/include/cxtypes.h	498;"	d
CV_MALLOC_ALIGN	opencv/include/cxmisc.h	85;"	d
CV_MAT32F	opencv/include/cvcompat.h	81;"	d
CV_MAT3x1_32F	opencv/include/cvcompat.h	82;"	d
CV_MAT3x1_64D	opencv/include/cvcompat.h	88;"	d
CV_MAT3x3_32F	opencv/include/cvcompat.h	84;"	d
CV_MAT3x3_64D	opencv/include/cvcompat.h	90;"	d
CV_MAT4x1_32F	opencv/include/cvcompat.h	83;"	d
CV_MAT4x1_64D	opencv/include/cvcompat.h	89;"	d
CV_MAT4x4_32F	opencv/include/cvcompat.h	85;"	d
CV_MAT4x4_64D	opencv/include/cvcompat.h	91;"	d
CV_MAT64D	opencv/include/cvcompat.h	87;"	d
CV_MATND_MAGIC_VAL	opencv/include/cxtypes.h	716;"	d
CV_MAT_CN	opencv/include/cxtypes.h	546;"	d
CV_MAT_CN_MASK	opencv/include/cxtypes.h	545;"	d
CV_MAT_CONT_FLAG	opencv/include/cxtypes.h	550;"	d
CV_MAT_CONT_FLAG_SHIFT	opencv/include/cxtypes.h	549;"	d
CV_MAT_DEPTH	opencv/include/cxtypes.h	495;"	d
CV_MAT_DEPTH_MASK	opencv/include/cxtypes.h	494;"	d
CV_MAT_ELEM	opencv/include/cxtypes.h	665;"	d
CV_MAT_ELEM_PTR	opencv/include/cxtypes.h	662;"	d
CV_MAT_ELEM_PTR_FAST	opencv/include/cxtypes.h	657;"	d
CV_MAT_MAGIC_VAL	opencv/include/cxtypes.h	558;"	d
CV_MAT_TEMP_FLAG	opencv/include/cxtypes.h	554;"	d
CV_MAT_TEMP_FLAG_SHIFT	opencv/include/cxtypes.h	553;"	d
CV_MAT_TYPE	opencv/include/cxtypes.h	548;"	d
CV_MAT_TYPE_MASK	opencv/include/cxtypes.h	547;"	d
CV_MAX_ALLOC_SIZE	opencv/include/cxmisc.h	82;"	d
CV_MAX_ARR	opencv/include/cxcore.h	292;"	d
CV_MAX_DIM	opencv/include/cxtypes.h	719;"	d
CV_MAX_DIM_HEAP	opencv/include/cxtypes.h	720;"	d
CV_MAX_INLINE_MAT_OP_SIZE	opencv/include/cxmisc.h	65;"	d
CV_MAX_LOCAL_MAT_SIZE	opencv/include/cxmisc.h	68;"	d
CV_MAX_LOCAL_SIZE	opencv/include/cxmisc.h	71;"	d
CV_MAX_SOBEL_KSIZE	opencv/include/cv.h	149;"	d
CV_MAX_STRLEN	opencv/include/cxmisc.h	103;"	d
CV_MAX_THREADS	opencv/include/cxmisc.h	107;"	d
CV_MAX_THREADS	opencv/include/cxmisc.h	109;"	d
CV_MEDIAN	opencv/include/cv.h	77;"	d
CV_MINMAX	opencv/include/cxcore.h	870;"	d
CV_MINOR_VERSION	opencv/include/cvver.h	51;"	d
CV_MOP_BLACKHAT	opencv/include/cv.h	345;"	d
CV_MOP_CLOSE	opencv/include/cv.h	342;"	d
CV_MOP_GRADIENT	opencv/include/cv.h	343;"	d
CV_MOP_OPEN	opencv/include/cv.h	341;"	d
CV_MOP_TOPHAT	opencv/include/cv.h	344;"	d
CV_MOVE_DOWN	opencv/include/cvcompat.h	994;"	d
CV_MOVE_DOWN_WRAP	opencv/include/cvcompat.h	1030;"	d
CV_MOVE_LD	opencv/include/cvcompat.h	1004;"	d
CV_MOVE_LD_WRAP	opencv/include/cvcompat.h	1039;"	d
CV_MOVE_LEFT	opencv/include/cvcompat.h	982;"	d
CV_MOVE_LEFT_WRAP	opencv/include/cvcompat.h	1017;"	d
CV_MOVE_LU	opencv/include/cvcompat.h	998;"	d
CV_MOVE_LU_WRAP	opencv/include/cvcompat.h	1035;"	d
CV_MOVE_PARAM	opencv/include/cvcompat.h	1058;"	d
CV_MOVE_PARAM_WRAP	opencv/include/cvcompat.h	1068;"	d
CV_MOVE_RD	opencv/include/cvcompat.h	1007;"	d
CV_MOVE_RD_WRAP	opencv/include/cvcompat.h	1041;"	d
CV_MOVE_RIGHT	opencv/include/cvcompat.h	986;"	d
CV_MOVE_RIGHT_WRAP	opencv/include/cvcompat.h	1021;"	d
CV_MOVE_RU	opencv/include/cvcompat.h	1001;"	d
CV_MOVE_RU_WRAP	opencv/include/cvcompat.h	1037;"	d
CV_MOVE_TO	opencv/include/cvcompat.h	967;"	d
CV_MOVE_UP	opencv/include/cvcompat.h	990;"	d
CV_MOVE_UP_WRAP	opencv/include/cvcompat.h	1025;"	d
CV_MUL	opencv/include/cxmisc.h	181;"	d
CV_MaskIsTiled	opencv/include/cxerror.h	80;"	d
CV_NE	opencv/include/cxmisc.h	192;"	d
CV_NEG_INF	opencv/include/cxmisc.h	172;"	d
CV_NEXT_AROUND_DST	opencv/include/cvtypes.h	/^    CV_NEXT_AROUND_DST   = 0x22,$/;"	e	enum:CvNextEdgeType
CV_NEXT_AROUND_LEFT	opencv/include/cvtypes.h	/^    CV_NEXT_AROUND_LEFT  = 0x13,$/;"	e	enum:CvNextEdgeType
CV_NEXT_AROUND_ORG	opencv/include/cvtypes.h	/^    CV_NEXT_AROUND_ORG   = 0x00,$/;"	e	enum:CvNextEdgeType
CV_NEXT_AROUND_RIGHT	opencv/include/cvtypes.h	/^    CV_NEXT_AROUND_RIGHT = 0x31,$/;"	e	enum:CvNextEdgeType
CV_NEXT_GRAPH_EDGE	opencv/include/cxtypes.h	1636;"	d
CV_NEXT_LINE_POINT	opencv/include/cxcore.h	1366;"	d
CV_NEXT_SEQ_ELEM	opencv/include/cxtypes.h	1572;"	d
CV_NEXT_VORONOIEDGE2D	opencv/include/cvaux.h	936;"	d
CV_NEXT_VORONOISITE2D	opencv/include/cvaux.h	932;"	d
CV_NODE_EMPTY	opencv/include/cxtypes.h	1693;"	d
CV_NODE_FLOAT	opencv/include/cxtypes.h	1680;"	d
CV_NODE_FLOW	opencv/include/cxtypes.h	1691;"	d
CV_NODE_HAS_NAME	opencv/include/cxtypes.h	1705;"	d
CV_NODE_IDX	opencv/include/cxtypes.h	805;"	d
CV_NODE_INT	opencv/include/cxtypes.h	1677;"	d
CV_NODE_INTEGER	opencv/include/cxtypes.h	1678;"	d
CV_NODE_IS_COLLECTION	opencv/include/cxtypes.h	1701;"	d
CV_NODE_IS_EMPTY	opencv/include/cxtypes.h	1703;"	d
CV_NODE_IS_FLOW	opencv/include/cxtypes.h	1702;"	d
CV_NODE_IS_INT	opencv/include/cxtypes.h	1696;"	d
CV_NODE_IS_MAP	opencv/include/cxtypes.h	1700;"	d
CV_NODE_IS_REAL	opencv/include/cxtypes.h	1697;"	d
CV_NODE_IS_SEQ	opencv/include/cxtypes.h	1699;"	d
CV_NODE_IS_STRING	opencv/include/cxtypes.h	1698;"	d
CV_NODE_IS_USER	opencv/include/cxtypes.h	1704;"	d
CV_NODE_MAP	opencv/include/cxtypes.h	1685;"	d
CV_NODE_NAMED	opencv/include/cxtypes.h	1694;"	d
CV_NODE_NONE	opencv/include/cxtypes.h	1676;"	d
CV_NODE_REAL	opencv/include/cxtypes.h	1679;"	d
CV_NODE_REF	opencv/include/cxtypes.h	1683;"	d
CV_NODE_SEQ	opencv/include/cxtypes.h	1684;"	d
CV_NODE_SEQ_IS_SIMPLE	opencv/include/cxtypes.h	1708;"	d
CV_NODE_SEQ_SIMPLE	opencv/include/cxtypes.h	1707;"	d
CV_NODE_STR	opencv/include/cxtypes.h	1681;"	d
CV_NODE_STRING	opencv/include/cxtypes.h	1682;"	d
CV_NODE_TYPE	opencv/include/cxtypes.h	1688;"	d
CV_NODE_TYPE_MASK	opencv/include/cxtypes.h	1686;"	d
CV_NODE_USER	opencv/include/cxtypes.h	1692;"	d
CV_NODE_VAL	opencv/include/cxtypes.h	804;"	d
CV_NOISE_GAUSSIAN	opencv/include/cvvidsurv.hpp	1276;"	d
CV_NOISE_NONE	opencv/include/cvvidsurv.hpp	1275;"	d
CV_NOISE_SALT_AND_PEPPER	opencv/include/cvvidsurv.hpp	1279;"	d
CV_NOISE_SPECKLE	opencv/include/cvvidsurv.hpp	1278;"	d
CV_NOISE_UNIFORM	opencv/include/cvvidsurv.hpp	1277;"	d
CV_NONZERO	opencv/include/cxmisc.h	196;"	d
CV_NONZERO_FLT	opencv/include/cxmisc.h	197;"	d
CV_NOP	opencv/include/cxmisc.h	178;"	d
CV_NORMAL	opencv/include/cxcore.h	767;"	d
CV_NORM_MASK	opencv/include/cxcore.h	867;"	d
CV_NOTDEFINED_ERR	opencv/include/cxmisc.h	/^    CV_NOTDEFINED_ERR  = -48,  \/\/ipp comp$/;"	e	enum:CvStatus
CV_NOTFOUND_ERR	opencv/include/cxmisc.h	/^    CV_NOTFOUND_ERR             = -110,$/;"	e	enum:CvStatus
CV_NOTHROW	opencv/include/cxmisc.h	519;"	d
CV_NOT_WEIGHTED	opencv/include/cvaux.h	/^    CV_NOT_WEIGHTED,$/;"	e	enum:CvGraphWeightType
CV_NO_BACKWARD_COMPATIBILITY	mouse.cpp	5;"	d	file:
CV_NO_CN_CHECK	opencv/include/cxcore.h	307;"	d
CV_NO_DEPTH_CHECK	opencv/include/cxcore.h	306;"	d
CV_NO_ERR	opencv/include/cxmisc.h	/^    CV_NO_ERR          =   0,$/;"	e	enum:CvStatus
CV_NO_SIZE_CHECK	opencv/include/cxcore.h	308;"	d
CV_NULLPTR_ERR	opencv/include/cxmisc.h	/^    CV_NULLPTR_ERR     =  -2,$/;"	e	enum:CvStatus
CV_NUM_FACE_ELEMENTS	opencv/include/cvaux.h	821;"	d
CV_OK	opencv/include/cxmisc.h	/^    CV_OK              =   CV_NO_ERR$/;"	e	enum:CvStatus
CV_OR	opencv/include/cxmisc.h	183;"	d
CV_ORIENTED_GRAPH	opencv/include/cxtypes.h	1425;"	d
CV_ORIGIN_BL	opencv/include/cxmisc.h	168;"	d
CV_ORIGIN_TL	opencv/include/cxmisc.h	167;"	d
CV_ORN	opencv/include/cxmisc.h	186;"	d
CV_OUTOFMEM_ERR	opencv/include/cxmisc.h	/^    CV_OUTOFMEM_ERR    =  -3,$/;"	e	enum:CvStatus
CV_PASTE	opencv/include/cxmisc.h	210;"	d
CV_PASTE2	opencv/include/cxmisc.h	209;"	d
CV_PCA_DATA_AS_COL	opencv/include/cxcore.h	825;"	d
CV_PCA_DATA_AS_ROW	opencv/include/cxcore.h	824;"	d
CV_PCA_USE_AVG	opencv/include/cxcore.h	826;"	d
CV_PI	opencv/include/cxtypes.h	199;"	d
CV_POLY_APPROX_DP	opencv/include/cv.h	717;"	d
CV_PORTION	opencv/include/ml.h	1812;"	d
CV_POS_INF	opencv/include/cxmisc.h	171;"	d
CV_PRETEND_WINDOWS	opencv/include/cxcore.h	54;"	d
CV_PREV_AROUND_DST	opencv/include/cvtypes.h	/^    CV_PREV_AROUND_DST   = 0x33,$/;"	e	enum:CvNextEdgeType
CV_PREV_AROUND_LEFT	opencv/include/cvtypes.h	/^    CV_PREV_AROUND_LEFT  = 0x20,$/;"	e	enum:CvNextEdgeType
CV_PREV_AROUND_ORG	opencv/include/cvtypes.h	/^    CV_PREV_AROUND_ORG   = 0x11,$/;"	e	enum:CvNextEdgeType
CV_PREV_AROUND_RIGHT	opencv/include/cvtypes.h	/^    CV_PREV_AROUND_RIGHT = 0x02$/;"	e	enum:CvNextEdgeType
CV_PREV_INT	opencv/include/cvaux.h	277;"	d
CV_PREV_POINT	opencv/include/cxtypes.h	1620;"	d
CV_PREV_SEQ_ELEM	opencv/include/cxtypes.h	1582;"	d
CV_PREV_VORONOIEDGE2D	opencv/include/cvaux.h	937;"	d
CV_PREV_VORONOISITE2D	opencv/include/cvaux.h	933;"	d
CV_PTLOC_ERROR	opencv/include/cvtypes.h	/^    CV_PTLOC_ERROR = -2,$/;"	e	enum:CvSubdiv2DPointLocation
CV_PTLOC_INSIDE	opencv/include/cvtypes.h	/^    CV_PTLOC_INSIDE = 0,$/;"	e	enum:CvSubdiv2DPointLocation
CV_PTLOC_ON_EDGE	opencv/include/cvtypes.h	/^    CV_PTLOC_ON_EDGE = 2$/;"	e	enum:CvSubdiv2DPointLocation
CV_PTLOC_OUTSIDE_RECT	opencv/include/cvtypes.h	/^    CV_PTLOC_OUTSIDE_RECT = -1,$/;"	e	enum:CvSubdiv2DPointLocation
CV_PTLOC_VERTEX	opencv/include/cvtypes.h	/^    CV_PTLOC_VERTEX = 1,$/;"	e	enum:CvSubdiv2DPointLocation
CV_QR	opencv/include/cxcore.h	766;"	d
CV_QUADEDGE2D_FIELDS	opencv/include/cvtypes.h	138;"	d
CV_RAND_NORMAL	opencv/include/cxcore.h	673;"	d
CV_RAND_UNI	opencv/include/cxcore.h	672;"	d
CV_RANSAC	opencv/include/cv.h	1310;"	d
CV_READ_CHAIN_POINT	opencv/include/cxtypes.h	1607;"	d
CV_READ_EDGE	opencv/include/cxtypes.h	1622;"	d
CV_READ_SEQ_ELEM	opencv/include/cxtypes.h	1591;"	d
CV_REDUCE_AVG	opencv/include/cxcore.h	891;"	d
CV_REDUCE_MAX	opencv/include/cxcore.h	892;"	d
CV_REDUCE_MIN	opencv/include/cxcore.h	893;"	d
CV_REDUCE_SUM	opencv/include/cxcore.h	890;"	d
CV_RELATIVE	opencv/include/cxcore.h	868;"	d
CV_RELATIVE_C	opencv/include/cxcore.h	875;"	d
CV_RELATIVE_L1	opencv/include/cxcore.h	876;"	d
CV_RELATIVE_L2	opencv/include/cxcore.h	877;"	d
CV_RETR_CCOMP	opencv/include/cvtypes.h	87;"	d
CV_RETR_EXTERNAL	opencv/include/cvtypes.h	85;"	d
CV_RETR_LIST	opencv/include/cvtypes.h	86;"	d
CV_RETR_TREE	opencv/include/cvtypes.h	88;"	d
CV_REV_READ_SEQ_ELEM	opencv/include/cxtypes.h	1599;"	d
CV_RGB	opencv/include/cxcore.h	1289;"	d
CV_RGB2BGR	opencv/include/cv.h	176;"	d
CV_RGB2BGR555	opencv/include/cv.h	203;"	d
CV_RGB2BGR565	opencv/include/cv.h	191;"	d
CV_RGB2BGRA	opencv/include/cv.h	170;"	d
CV_RGB2GRAY	opencv/include/cv.h	182;"	d
CV_RGB2HLS	opencv/include/cv.h	243;"	d
CV_RGB2HSV	opencv/include/cv.h	225;"	d
CV_RGB2Lab	opencv/include/cv.h	228;"	d
CV_RGB2Luv	opencv/include/cv.h	241;"	d
CV_RGB2RGBA	opencv/include/cv.h	164;"	d
CV_RGB2XYZ	opencv/include/cv.h	215;"	d
CV_RGB2YCrCb	opencv/include/cv.h	220;"	d
CV_RGBA2BGR	opencv/include/cv.h	172;"	d
CV_RGBA2BGR555	opencv/include/cv.h	207;"	d
CV_RGBA2BGR565	opencv/include/cv.h	195;"	d
CV_RGBA2BGRA	opencv/include/cv.h	179;"	d
CV_RGBA2GRAY	opencv/include/cv.h	188;"	d
CV_RGBA2RGB	opencv/include/cv.h	167;"	d
CV_RODRIGUES_M2V	opencv/include/cvcompat.h	687;"	d
CV_RODRIGUES_V2M	opencv/include/cvcompat.h	688;"	d
CV_ROW_SAMPLE	opencv/include/ml.h	128;"	d
CV_SCHARR	opencv/include/cv.h	148;"	d
CV_SEQUENCE_FIELDS	opencv/include/cxtypes.h	1228;"	d
CV_SEQ_CHAIN	opencv/include/cxtypes.h	1436;"	d
CV_SEQ_CHAIN_CONTOUR	opencv/include/cxtypes.h	1437;"	d
CV_SEQ_CONNECTED_COMP	opencv/include/cxtypes.h	1443;"	d
CV_SEQ_CONTOUR	opencv/include/cxtypes.h	1432;"	d
CV_SEQ_ELEM	opencv/include/cxtypes.h	1537;"	d
CV_SEQ_ELTYPE	opencv/include/cxtypes.h	1448;"	d
CV_SEQ_ELTYPE_BITS	opencv/include/cxtypes.h	1386;"	d
CV_SEQ_ELTYPE_CODE	opencv/include/cxtypes.h	1390;"	d
CV_SEQ_ELTYPE_CONNECTED_COMP	opencv/include/cxtypes.h	1398;"	d
CV_SEQ_ELTYPE_GENERIC	opencv/include/cxtypes.h	1391;"	d
CV_SEQ_ELTYPE_GRAPH_EDGE	opencv/include/cxtypes.h	1395;"	d
CV_SEQ_ELTYPE_GRAPH_VERTEX	opencv/include/cxtypes.h	1396;"	d
CV_SEQ_ELTYPE_INDEX	opencv/include/cxtypes.h	1394;"	d
CV_SEQ_ELTYPE_MASK	opencv/include/cxtypes.h	1387;"	d
CV_SEQ_ELTYPE_POINT	opencv/include/cxtypes.h	1389;"	d
CV_SEQ_ELTYPE_POINT3D	opencv/include/cxtypes.h	1399;"	d
CV_SEQ_ELTYPE_PPOINT	opencv/include/cxtypes.h	1393;"	d
CV_SEQ_ELTYPE_PTR	opencv/include/cxtypes.h	1392;"	d
CV_SEQ_ELTYPE_TRIAN_ATR	opencv/include/cxtypes.h	1397;"	d
CV_SEQ_FLAG_CLOSED	opencv/include/cxtypes.h	1416;"	d
CV_SEQ_FLAG_CONVEX	opencv/include/cxtypes.h	1418;"	d
CV_SEQ_FLAG_HOLE	opencv/include/cxtypes.h	1419;"	d
CV_SEQ_FLAG_SHIFT	opencv/include/cxtypes.h	1413;"	d
CV_SEQ_FLAG_SIMPLE	opencv/include/cxtypes.h	1417;"	d
CV_SEQ_INDEX	opencv/include/cxtypes.h	1446;"	d
CV_SEQ_KIND	opencv/include/cxtypes.h	1449;"	d
CV_SEQ_KIND_BIN_TREE	opencv/include/cxtypes.h	1407;"	d
CV_SEQ_KIND_BITS	opencv/include/cxtypes.h	1401;"	d
CV_SEQ_KIND_CURVE	opencv/include/cxtypes.h	1406;"	d
CV_SEQ_KIND_GENERIC	opencv/include/cxtypes.h	1405;"	d
CV_SEQ_KIND_GRAPH	opencv/include/cxtypes.h	1410;"	d
CV_SEQ_KIND_MASK	opencv/include/cxtypes.h	1402;"	d
CV_SEQ_KIND_SUBDIV2D	opencv/include/cxtypes.h	1411;"	d
CV_SEQ_MAGIC_VAL	opencv/include/cxtypes.h	1377;"	d
CV_SEQ_POINT3D_SET	opencv/include/cxtypes.h	1429;"	d
CV_SEQ_POINT_SET	opencv/include/cxtypes.h	1428;"	d
CV_SEQ_POLYGON	opencv/include/cxtypes.h	1431;"	d
CV_SEQ_POLYGON_TREE	opencv/include/cxtypes.h	1440;"	d
CV_SEQ_POLYLINE	opencv/include/cxtypes.h	1430;"	d
CV_SEQ_READER_FIELDS	opencv/include/cxtypes.h	1516;"	d
CV_SEQ_SIMPLE_POLYGON	opencv/include/cxtypes.h	1433;"	d
CV_SEQ_WRITER_FIELDS	opencv/include/cxtypes.h	1501;"	d
CV_SET_ELEM_FIELDS	opencv/include/cxtypes.h	1255;"	d
CV_SET_ELEM_FREE_FLAG	opencv/include/cxtypes.h	1278;"	d
CV_SET_ELEM_IDX_MASK	opencv/include/cxtypes.h	1277;"	d
CV_SET_FIELDS	opencv/include/cxtypes.h	1265;"	d
CV_SET_IMAGE_IO_FUNCTIONS	opencv/include/cxcore.h	1785;"	d
CV_SET_MAGIC_VAL	opencv/include/cxtypes.h	1382;"	d
CV_SHAPE_CROSS	opencv/include/cv.h	317;"	d
CV_SHAPE_CUSTOM	opencv/include/cv.h	319;"	d
CV_SHAPE_ELLIPSE	opencv/include/cv.h	318;"	d
CV_SHAPE_RECT	opencv/include/cv.h	316;"	d
CV_SHIFT_DOWN	opencv/include/cvcompat.h	1048;"	d
CV_SHIFT_LD	opencv/include/cvcompat.h	1051;"	d
CV_SHIFT_LEFT	opencv/include/cvcompat.h	1045;"	d
CV_SHIFT_LU	opencv/include/cvcompat.h	1049;"	d
CV_SHIFT_NONE	opencv/include/cvcompat.h	1044;"	d
CV_SHIFT_RD	opencv/include/cvcompat.h	1052;"	d
CV_SHIFT_RIGHT	opencv/include/cvcompat.h	1046;"	d
CV_SHIFT_RU	opencv/include/cvcompat.h	1050;"	d
CV_SHIFT_UP	opencv/include/cvcompat.h	1047;"	d
CV_SIGN	opencv/include/cxtypes.h	224;"	d
CV_SIZEOF_FLOAT	opencv/include/cxmisc.h	164;"	d
CV_SIZEOF_SHORT	opencv/include/cxmisc.h	165;"	d
CV_SORT_ASCENDING	opencv/include/cxcore.h	682;"	d
CV_SORT_DESCENDING	opencv/include/cxcore.h	683;"	d
CV_SORT_EVERY_COLUMN	opencv/include/cxcore.h	681;"	d
CV_SORT_EVERY_ROW	opencv/include/cxcore.h	680;"	d
CV_SPARSE_HASH_RATIO	opencv/include/cxmisc.h	100;"	d
CV_SPARSE_HASH_SIZE0	opencv/include/cxmisc.h	97;"	d
CV_SPARSE_MAT_BLOCK	opencv/include/cxmisc.h	94;"	d
CV_SPARSE_MAT_MAGIC_VAL	opencv/include/cxtypes.h	759;"	d
CV_SQR	opencv/include/cxmisc.h	187;"	d
CV_SSE2	opencv/include/cxtypes.h	83;"	d
CV_SSE2	opencv/include/cxtypes.h	85;"	d
CV_STDCALL	opencv/include/cxtypes.h	113;"	d
CV_STDCALL	opencv/include/cxtypes.h	116;"	d
CV_STDCALL	opencv/include/highgui.h	56;"	d
CV_STDCALL	opencv/include/highgui.h	59;"	d
CV_STDCALL	opencv/include/ml.h	62;"	d
CV_STDCALL	opencv/include/ml.h	65;"	d
CV_STEREO_BM_BASIC	opencv/include/cv.h	1548;"	d
CV_STEREO_BM_FISH_EYE	opencv/include/cv.h	1549;"	d
CV_STEREO_BM_NARROW	opencv/include/cv.h	1550;"	d
CV_STEREO_BM_NORMALIZED_RESPONSE	opencv/include/cv.h	1512;"	d
CV_STEREO_GC_OCCLUDED	opencv/include/cv.h	1561;"	d
CV_STORAGE_APPEND	opencv/include/cxtypes.h	1654;"	d
CV_STORAGE_BLOCK_SIZE	opencv/include/cxmisc.h	91;"	d
CV_STORAGE_MAGIC_VAL	opencv/include/cxtypes.h	1176;"	d
CV_STORAGE_READ	opencv/include/cxtypes.h	1650;"	d
CV_STORAGE_WRITE	opencv/include/cxtypes.h	1651;"	d
CV_STORAGE_WRITE_BINARY	opencv/include/cxtypes.h	1653;"	d
CV_STORAGE_WRITE_TEXT	opencv/include/cxtypes.h	1652;"	d
CV_STRUCT_ALIGN	opencv/include/cxmisc.h	88;"	d
CV_STUB_STEP	opencv/include/cxmisc.h	162;"	d
CV_SUB	opencv/include/cxmisc.h	180;"	d
CV_SUBDIV2D_FIELDS	opencv/include/cvtypes.h	162;"	d
CV_SUBDIV2D_NEXT_EDGE	opencv/include/cvtypes.h	201;"	d
CV_SUBDIV2D_POINT_FIELDS	opencv/include/cvtypes.h	143;"	d
CV_SUBDIV2D_VIRTUAL_POINT_FLAG	opencv/include/cvtypes.h	148;"	d
CV_SUBMINOR_VERSION	opencv/include/cvver.h	52;"	d
CV_SVD	opencv/include/cxcore.h	763;"	d
CV_SVD_MODIFY_A	opencv/include/cxcore.h	748;"	d
CV_SVD_SYM	opencv/include/cxcore.h	764;"	d
CV_SVD_U_T	opencv/include/cxcore.h	749;"	d
CV_SVD_V_T	opencv/include/cxcore.h	750;"	d
CV_SWAP	opencv/include/cxtypes.h	202;"	d
CV_StsAssert	opencv/include/cxerror.h	103;"	d
CV_StsAutoTrace	opencv/include/cxerror.h	60;"	d
CV_StsBackTrace	opencv/include/cxerror.h	53;"	d
CV_StsBadArg	opencv/include/cxerror.h	57;"	d
CV_StsBadFlag	opencv/include/cxerror.h	94;"	d
CV_StsBadFunc	opencv/include/cxerror.h	58;"	d
CV_StsBadMask	opencv/include/cxerror.h	96;"	d
CV_StsBadMemBlock	opencv/include/cxerror.h	102;"	d
CV_StsBadPoint	opencv/include/cxerror.h	95;"	d
CV_StsBadSize	opencv/include/cxerror.h	89;"	d
CV_StsDivByZero	opencv/include/cxerror.h	90;"	d
CV_StsError	opencv/include/cxerror.h	54;"	d
CV_StsFilterOffsetErr	opencv/include/cxerror.h	86;"	d
CV_StsFilterStructContentErr	opencv/include/cxerror.h	84;"	d
CV_StsInplaceNotSupported	opencv/include/cxerror.h	91;"	d
CV_StsInternal	opencv/include/cxerror.h	55;"	d
CV_StsKernelStructContentErr	opencv/include/cxerror.h	85;"	d
CV_StsNoConv	opencv/include/cxerror.h	59;"	d
CV_StsNoMem	opencv/include/cxerror.h	56;"	d
CV_StsNotImplemented	opencv/include/cxerror.h	101;"	d
CV_StsNullPtr	opencv/include/cxerror.h	82;"	d
CV_StsObjectNotFound	opencv/include/cxerror.h	92;"	d
CV_StsOk	opencv/include/cxerror.h	52;"	d
CV_StsOutOfRange	opencv/include/cxerror.h	99;"	d
CV_StsParseError	opencv/include/cxerror.h	100;"	d
CV_StsUnmatchedFormats	opencv/include/cxerror.h	93;"	d
CV_StsUnmatchedSizes	opencv/include/cxerror.h	97;"	d
CV_StsUnsupportedFormat	opencv/include/cxerror.h	98;"	d
CV_StsVecLengthErr	opencv/include/cxerror.h	83;"	d
CV_TERMCRIT_EPS	opencv/include/cxtypes.h	901;"	d
CV_TERMCRIT_ITER	opencv/include/cxtypes.h	899;"	d
CV_TERMCRIT_NUMBER	opencv/include/cxtypes.h	900;"	d
CV_TEST_ERROR	opencv/include/ml.h	190;"	d
CV_THRESH_BINARY	opencv/include/cv.h	946;"	d
CV_THRESH_BINARY_INV	opencv/include/cv.h	947;"	d
CV_THRESH_MASK	opencv/include/cv.h	951;"	d
CV_THRESH_OTSU	opencv/include/cv.h	953;"	d
CV_THRESH_TOZERO	opencv/include/cv.h	949;"	d
CV_THRESH_TOZERO_INV	opencv/include/cv.h	950;"	d
CV_THRESH_TRUNC	opencv/include/cv.h	948;"	d
CV_TM_CCOEFF	opencv/include/cv.h	390;"	d
CV_TM_CCOEFF_NORMED	opencv/include/cv.h	391;"	d
CV_TM_CCORR	opencv/include/cv.h	388;"	d
CV_TM_CCORR_NORMED	opencv/include/cv.h	389;"	d
CV_TM_SQDIFF	opencv/include/cv.h	386;"	d
CV_TM_SQDIFF_NORMED	opencv/include/cv.h	387;"	d
CV_TOGGLE_DBL	opencv/include/cxmisc.h	175;"	d
CV_TOGGLE_FLT	opencv/include/cxmisc.h	174;"	d
CV_TRAIN_ERROR	opencv/include/ml.h	189;"	d
CV_TREE_NODE_FIELDS	opencv/include/cxtypes.h	1216;"	d
CV_TS_CONCENTRIC_SPHERES	opencv/include/ml.h	1790;"	d
CV_TURN_ON_IPL_COMPATIBILITY	opencv/include/cxcore.h	1585;"	d
CV_TWIN_VORONOISITE2D	opencv/include/cvaux.h	940;"	d
CV_TYPE_NAME_GRAPH	opencv/include/cxtypes.h	1348;"	d
CV_TYPE_NAME_HAAR	opencv/include/cvtypes.h	319;"	d
CV_TYPE_NAME_IMAGE	opencv/include/cxtypes.h	460;"	d
CV_TYPE_NAME_MAT	opencv/include/cxtypes.h	559;"	d
CV_TYPE_NAME_MATND	opencv/include/cxtypes.h	717;"	d
CV_TYPE_NAME_ML_ANN_MLP	opencv/include/ml.h	185;"	d
CV_TYPE_NAME_ML_BOOSTING	opencv/include/ml.h	183;"	d
CV_TYPE_NAME_ML_CNN	opencv/include/ml.h	186;"	d
CV_TYPE_NAME_ML_EM	opencv/include/ml.h	182;"	d
CV_TYPE_NAME_ML_KNN	opencv/include/ml.h	180;"	d
CV_TYPE_NAME_ML_NBAYES	opencv/include/ml.h	181;"	d
CV_TYPE_NAME_ML_RTREES	opencv/include/ml.h	187;"	d
CV_TYPE_NAME_ML_SVM	opencv/include/ml.h	179;"	d
CV_TYPE_NAME_ML_TREE	opencv/include/ml.h	184;"	d
CV_TYPE_NAME_SEQ	opencv/include/cxtypes.h	1245;"	d
CV_TYPE_NAME_SEQ_TREE	opencv/include/cxtypes.h	1246;"	d
CV_TYPE_NAME_SPARSE_MAT	opencv/include/cxtypes.h	760;"	d
CV_TYZX_COLOR	opencv/include/highgui.h	258;"	d
CV_TYZX_LEFT	opencv/include/highgui.h	256;"	d
CV_TYZX_RIGHT	opencv/include/highgui.h	257;"	d
CV_TYZX_Z	opencv/include/highgui.h	259;"	d
CV_UNDEF_SC_PARAM	opencv/include/cvaux.h	444;"	d
CV_UNMATCHED_FORMATS_ERR	opencv/include/cxmisc.h	/^    CV_UNMATCHED_FORMATS_ERR    = -104,$/;"	e	enum:CvStatus
CV_UNMATCHED_ROI_ERR	opencv/include/cxmisc.h	/^    CV_UNMATCHED_ROI_ERR        = -111,$/;"	e	enum:CvStatus
CV_UNREFERENCED	opencv/include/cvcompat.h	/^                                int CV_UNREFERENCED(interpolate) )$/;"	f
CV_UNREFERENCED	opencv/include/cvcompat.h	56;"	d
CV_UNREFERENCED	opencv/include/cvcompat.h	58;"	d
CV_UNSUPPORTED_CHANNELS_ERR	opencv/include/cxmisc.h	/^    CV_UNSUPPORTED_CHANNELS_ERR = -102,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_COI_ERR	opencv/include/cxmisc.h	/^    CV_UNSUPPORTED_COI_ERR      = -103,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_DEPTH_ERR	opencv/include/cxmisc.h	/^    CV_UNSUPPORTED_DEPTH_ERR    = -101,$/;"	e	enum:CvStatus
CV_UNSUPPORTED_FORMAT_ERR	opencv/include/cxmisc.h	/^    CV_UNSUPPORTED_FORMAT_ERR   = -100,$/;"	e	enum:CvStatus
CV_USRTYPE1	opencv/include/cxtypes.h	492;"	d
CV_VALUE	opencv/include/cv.h	919;"	d
CV_VAR_CATEGORICAL	opencv/include/ml.h	177;"	d
CV_VAR_NUMERICAL	opencv/include/ml.h	175;"	d
CV_VAR_ORDERED	opencv/include/ml.h	176;"	d
CV_VERSION	opencv/include/cvver.h	56;"	d
CV_VORONOIDIAGRAM2D_FIELDS	opencv/include/cvaux.h	972;"	d
CV_VORONOIEDGE2D_BEGINNODE	opencv/include/cvaux.h	938;"	d
CV_VORONOIEDGE2D_ENDNODE	opencv/include/cvaux.h	939;"	d
CV_VORONOIEDGE2D_FIELDS	opencv/include/cvaux.h	952;"	d
CV_VORONOINODE2D_FIELDS	opencv/include/cvaux.h	962;"	d
CV_VORONOISITE2D_FIELDS	opencv/include/cvaux.h	942;"	d
CV_WARP_FILL_OUTLIERS	opencv/include/cv.h	265;"	d
CV_WARP_INVERSE_MAP	opencv/include/cv.h	266;"	d
CV_WARP_TO_CAMERA	opencv/include/cvaux.h	551;"	d
CV_WEIGHTED_ALL	opencv/include/cvaux.h	/^    CV_WEIGHTED_ALL$/;"	e	enum:CvGraphWeightType
CV_WEIGHTED_EDGE	opencv/include/cvaux.h	/^    CV_WEIGHTED_EDGE,$/;"	e	enum:CvGraphWeightType
CV_WEIGHTED_VTX	opencv/include/cvaux.h	/^    CV_WEIGHTED_VTX,$/;"	e	enum:CvGraphWeightType
CV_WHOLE_ARR	opencv/include/cxtypes.h	543;"	d
CV_WHOLE_SEQ	opencv/include/cxtypes.h	1124;"	d
CV_WHOLE_SEQ_END_INDEX	opencv/include/cxtypes.h	1123;"	d
CV_WINDOW_AUTOSIZE	opencv/include/highgui.h	121;"	d
CV_WRITE_SEQ_ELEM	opencv/include/cxtypes.h	1558;"	d
CV_WRITE_SEQ_ELEM_VAR	opencv/include/cxtypes.h	1548;"	d
CV_XADD	opencv/include/cxoperations.hpp	/^    static inline int CV_XADD( int* addr, int delta )$/;"	f
CV_XADD	opencv/include/cxoperations.hpp	/^  template<typename _Tp> static inline _Tp CV_XADD(_Tp* addr, _Tp delta)$/;"	f
CV_XADD	opencv/include/cxoperations.hpp	60;"	d
CV_XADD	opencv/include/cxoperations.hpp	63;"	d
CV_XADD	opencv/include/cxoperations.hpp	69;"	d
CV_XADD	opencv/include/cxoperations.hpp	71;"	d
CV_XADD	opencv/include/cxoperations.hpp	94;"	d
CV_XOR	opencv/include/cxmisc.h	184;"	d
CV_XYZ2BGR	opencv/include/cv.h	216;"	d
CV_XYZ2RGB	opencv/include/cv.h	217;"	d
CV_YCrCb2BGR	opencv/include/cv.h	221;"	d
CV_YCrCb2RGB	opencv/include/cv.h	222;"	d
CV_ZERO_OBJ	opencv/include/cxmisc.h	215;"	d
CXFLANN_H_	opencv/include/cxflann.h	44;"	d
C_SVC	opencv/include/ml.h	/^    enum { C_SVC=100, NU_SVC=101, ONE_CLASS=102, EPS_SVR=103, NU_SVR=104 };$/;"	e	enum:CvSVM::__anon45
Calc	opencv/include/ml.h	/^    typedef void (CvSVMKernel::*Calc)( int vec_count, int vec_size, const float** vecs,$/;"	t	struct:CvSVMKernel
CalcRho	opencv/include/ml.h	/^    typedef void (CvSVMSolver::*CalcRho)( double& rho, double& r );$/;"	t	class:CvSVMSolver
CascadeClassifier	opencv/include/cv.hpp	/^class CV_EXPORTS CascadeClassifier$/;"	c	namespace:cv
ChannelSize	opencv/include/cvwimage.h	/^    int ChannelSize() const {return sizeof(T); }  \/\/ number of bytes per channel$/;"	f	class:cv::WImage
Channels	opencv/include/cvwimage.h	/^    int Channels() const {return C; }$/;"	f	class:cv::WImageC
Channels	opencv/include/cvwimage.h	/^    int Channels() const {return image_->nChannels; }$/;"	f	class:cv::WImage
Ckxx	vascript/ccg/ccg.h	818;"	d
Ckxx	vascript/ccg/ccg.h	918;"	d
Clear	opencv/include/cvvidsurv.hpp	/^    virtual void Clear()$/;"	f	class:CvBlobSeq
Clear	opencv/include/cvvidsurv.hpp	/^    virtual void Clear()$/;"	f	class:CvBlobTrackSeq
CloneFrom	opencv/include/cvwimage.h	/^    void CloneFrom(const WImage<T>& src) {$/;"	f	class:cv::WImageBuffer
CloneFrom	opencv/include/cvwimage.h	/^    void CloneFrom(const WImageC<T, C>& src) {$/;"	f	class:cv::WImageBufferC
CodeOneByte	vascript/ccg/opcodeDes.h	/^CodeOneByte=0xFD,$/;"	e	enum:CCG::__anon133
CodeOrdinary	vascript/ccg/opcodeDes.h	/^CodeOrdinary=0,$/;"	e	enum:CCG::__anon133
CodeType	vascript/ccg/opcodeDes.h	/^} CodeType;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon133
CommentParam	opencv/include/cvvidsurv.hpp	/^    void CommentParam(const char* name, const char* pComment)$/;"	f	class:CvVSModule
Complex	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Complex$/;"	c	namespace:cv
Complex	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Complex<_Tp>::Complex( _Tp _re, _Tp _im ) : re(_re), im(_im) {}$/;"	f	class:cv::Complex
Complex	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Complex<_Tp>::Complex() : re(0), im(0) {}$/;"	f	class:cv::Complex
Complexd	opencv/include/cxcore.hpp	/^typedef Complex<double> Complexd;$/;"	t	namespace:cv
Complexf	opencv/include/cxcore.hpp	/^typedef Complex<float> Complexf;$/;"	t	namespace:cv
CompositeIndexParams	opencv/include/cxflann.h	/^	CompositeIndexParams(int trees_ = 4, int branching_ = 32, int iterations_ = 11,$/;"	f	struct:cv::flann::CompositeIndexParams
CompositeIndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS CompositeIndexParams : public IndexParams {$/;"	s	namespace:cv::flann
ConvertData	opencv/include/cxcore.hpp	/^typedef void (*ConvertData)(const void* from, void* to, int cn);$/;"	t	namespace:cv
ConvertScaleData	opencv/include/cxcore.hpp	/^typedef void (*ConvertScaleData)(const void* from, void* to, int cn, double alpha, double beta);$/;"	t	namespace:cv
CopyFrame	transforKernel.cpp	/^void CopyFrame(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
CopyFrom	opencv/include/cvwimage.h	/^    void CopyFrom(const WImage<T>& src) { cvCopy(src.Ipl(), image_); }$/;"	f	class:cv::WImage
CopyFrom	opencv/include/cvwimage.h	/^    void CopyFrom(const WImageC<T, C>& src) {$/;"	f	class:cv::WImageC
Cur	global.cpp	/^int Prv = 0, Cur = 1, Nxt =2;$/;"	v
Cv1DObsInfo	opencv/include/cvaux.h	/^typedef CvImgObsInfo Cv1DObsInfo;$/;"	t
Cv32suf	opencv/include/cxtypes.h	/^Cv32suf;$/;"	t	typeref:union:Cv32suf
Cv32suf	opencv/include/cxtypes.h	/^typedef union Cv32suf$/;"	u
Cv3dTracker2dTrackedObject	opencv/include/cvaux.h	/^} Cv3dTracker2dTrackedObject;$/;"	t	typeref:struct:__anon107
Cv3dTrackerCameraInfo	opencv/include/cvaux.h	/^} Cv3dTrackerCameraInfo;$/;"	t	typeref:struct:__anon109
Cv3dTrackerCameraIntrinsics	opencv/include/cvaux.h	/^} Cv3dTrackerCameraIntrinsics;$/;"	t	typeref:struct:__anon110
Cv3dTrackerTrackedObject	opencv/include/cvaux.h	/^} Cv3dTrackerTrackedObject;$/;"	t	typeref:struct:__anon108
Cv64suf	opencv/include/cxtypes.h	/^Cv64suf;$/;"	t	typeref:union:Cv64suf
Cv64suf	opencv/include/cxtypes.h	/^typedef union Cv64suf$/;"	u
CvANN_MLP	opencv/include/ml.h	/^class CV_EXPORTS CvANN_MLP : public CvStatModel$/;"	c
CvANN_MLP_TrainParams	opencv/include/ml.h	/^struct CV_EXPORTS CvANN_MLP_TrainParams$/;"	s
CvAdaptiveSkinDetector	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvAdaptiveSkinDetector$/;"	c
CvAdaptiveThreshMethod	opencv/include/cvcompat.h	66;"	d
CvAllocFunc	opencv/include/cxcore.h	/^typedef void* (CV_CDECL *CvAllocFunc)(size_t size, void* userdata);$/;"	t
CvArr	opencv/include/cxtypes.h	/^typedef void CvArr;$/;"	t
CvAttrList	opencv/include/cxtypes.h	/^CvAttrList;$/;"	t	typeref:struct:CvAttrList
CvAttrList	opencv/include/cxtypes.h	/^typedef struct CvAttrList$/;"	s
CvAvgComp	opencv/include/cvtypes.h	/^CvAvgComp;$/;"	t	typeref:struct:CvAvgComp
CvAvgComp	opencv/include/cvtypes.h	/^typedef struct CvAvgComp$/;"	s
CvBGCodeBookElem	opencv/include/cvaux.h	/^CvBGCodeBookElem;$/;"	t	typeref:struct:CvBGCodeBookElem
CvBGCodeBookElem	opencv/include/cvaux.h	/^typedef struct CvBGCodeBookElem$/;"	s
CvBGCodeBookModel	opencv/include/cvaux.h	/^CvBGCodeBookModel;$/;"	t	typeref:struct:CvBGCodeBookModel
CvBGCodeBookModel	opencv/include/cvaux.h	/^typedef struct CvBGCodeBookModel$/;"	s
CvBGPixelCCStatTable	opencv/include/cvaux.h	/^CvBGPixelCCStatTable;$/;"	t	typeref:struct:CvBGPixelCCStatTable
CvBGPixelCCStatTable	opencv/include/cvaux.h	/^typedef struct CvBGPixelCCStatTable$/;"	s
CvBGPixelCStatTable	opencv/include/cvaux.h	/^CvBGPixelCStatTable;$/;"	t	typeref:struct:CvBGPixelCStatTable
CvBGPixelCStatTable	opencv/include/cvaux.h	/^typedef struct CvBGPixelCStatTable$/;"	s
CvBGPixelStat	opencv/include/cvaux.h	/^CvBGPixelStat;$/;"	t	typeref:struct:CvBGPixelStat
CvBGPixelStat	opencv/include/cvaux.h	/^typedef struct CvBGPixelStat$/;"	s
CvBGStatModel	opencv/include/cvaux.h	/^CvBGStatModel;$/;"	t	typeref:struct:CvBGStatModel
CvBGStatModel	opencv/include/cvaux.h	/^typedef struct CvBGStatModel$/;"	s
CvBigFuncTable	opencv/include/cxmisc.h	/^CvBigFuncTable;$/;"	t	typeref:struct:CvBigFuncTable
CvBigFuncTable	opencv/include/cxmisc.h	/^typedef struct CvBigFuncTable$/;"	s
CvBlob	opencv/include/cvvidsurv.hpp	/^struct CvBlob$/;"	s
CvBlobDetector	opencv/include/cvvidsurv.hpp	/^	CvBlobDetector(){SetTypeName("BlobDetector");};$/;"	f	class:CvBlobDetector
CvBlobDetector	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobDetector: public CvVSModule$/;"	c
CvBlobSeq	opencv/include/cvvidsurv.hpp	/^    CvBlobSeq(int BlobSize = sizeof(CvBlob))$/;"	f	class:CvBlobSeq
CvBlobSeq	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobSeq$/;"	c
CvBlobTrack	opencv/include/cvvidsurv.hpp	/^struct CvBlobTrack$/;"	s
CvBlobTrackAnalysis	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackAnalysis(){SetTypeName("BlobTrackAnalysis");};$/;"	f	class:CvBlobTrackAnalysis
CvBlobTrackAnalysis	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackAnalysis: public CvVSModule$/;"	c
CvBlobTrackAnalysisHeight	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackAnalysisHeight: public CvBlobTrackAnalysis$/;"	c
CvBlobTrackAnalysisOne	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackAnalysisOne$/;"	c
CvBlobTrackFVGen	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackFVGen(){SetTypeName("BlobTrackFVGen");};$/;"	f	class:CvBlobTrackFVGen
CvBlobTrackFVGen	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackFVGen : public CvVSModule$/;"	c
CvBlobTrackGen	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackGen(){SetTypeName("BlobTrackGen");};$/;"	f	class:CvBlobTrackGen
CvBlobTrackGen	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackGen: public CvVSModule$/;"	c
CvBlobTrackPostProc	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackPostProc(){SetTypeName("BlobTrackPostProc");};$/;"	f	class:CvBlobTrackPostProc
CvBlobTrackPostProc	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackPostProc: public CvVSModule$/;"	c
CvBlobTrackPostProcOne	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackPostProcOne(){SetTypeName("BlobTrackPostOne");};$/;"	f	class:CvBlobTrackPostProcOne
CvBlobTrackPostProcOne	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackPostProcOne: public CvVSModule$/;"	c
CvBlobTrackPredictor	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackPredictor(){SetTypeName("BlobTrackPredictor");};$/;"	f	class:CvBlobTrackPredictor
CvBlobTrackPredictor	opencv/include/cvvidsurv.hpp	/^class CvBlobTrackPredictor: public CvVSModule$/;"	c
CvBlobTrackSeq	opencv/include/cvvidsurv.hpp	/^    CvBlobTrackSeq(int TrackSize = sizeof(CvBlobTrack))$/;"	f	class:CvBlobTrackSeq
CvBlobTrackSeq	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackSeq$/;"	c
CvBlobTracker	opencv/include/cvvidsurv.hpp	/^    CvBlobTracker(){SetTypeName("BlobTracker");};$/;"	f	class:CvBlobTracker
CvBlobTracker	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTracker: public CvVSModule$/;"	c
CvBlobTrackerAuto	opencv/include/cvvidsurv.hpp	/^	CvBlobTrackerAuto(){SetTypeName("BlobTrackerAuto");};$/;"	f	class:CvBlobTrackerAuto
CvBlobTrackerAuto	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackerAuto: public CvVSModule$/;"	c
CvBlobTrackerAutoParam1	opencv/include/cvvidsurv.hpp	/^struct CvBlobTrackerAutoParam1$/;"	s
CvBlobTrackerOne	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvBlobTrackerOne:public CvVSModule$/;"	c
CvBlobTrackerParamLH	opencv/include/cvvidsurv.hpp	/^struct CvBlobTrackerParamLH$/;"	s
CvBlobTrackerParamMS	opencv/include/cvvidsurv.hpp	/^struct CvBlobTrackerParamMS$/;"	s
CvBool	opencv/include/cvaux.h	/^typedef unsigned char CvBool;$/;"	t
CvBoost	opencv/include/ml.h	/^class CV_EXPORTS CvBoost : public CvStatModel$/;"	c
CvBoostParams	opencv/include/ml.h	/^struct CV_EXPORTS CvBoostParams : public CvDTreeParams$/;"	s
CvBoostTree	opencv/include/ml.h	/^class CV_EXPORTS CvBoostTree: public CvDTree$/;"	c
CvBox2D	opencv/include/cxtypes.h	/^CvBox2D;$/;"	t	typeref:struct:CvBox2D
CvBox2D	opencv/include/cxtypes.h	/^typedef struct CvBox2D$/;"	s
CvBox2D32f	opencv/include/cvcompat.h	94;"	d
CvCalibEtalonType	opencv/include/cvaux.h	/^CvCalibEtalonType;$/;"	t	typeref:enum:CvCalibEtalonType
CvCalibEtalonType	opencv/include/cvaux.h	/^typedef enum CvCalibEtalonType$/;"	g
CvCalibFilter	opencv/include/cvaux.h	/^class CV_EXPORTS CvCalibFilter$/;"	c
CvCallback	opencv/include/cvaux.h	/^typedef int (CV_CDECL * CvCallback)(int index, void* buffer, void* user_data);$/;"	t
CvCamShiftTracker	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvCamShiftTracker$/;"	c
CvCamera	opencv/include/cvaux.h	/^CvCamera;$/;"	t	typeref:struct:CvCamera
CvCamera	opencv/include/cvaux.h	/^typedef struct CvCamera$/;"	s
CvCapture	opencv/include/highgui.h	/^typedef struct CvCapture CvCapture;$/;"	t	typeref:struct:CvCapture
CvChain	opencv/include/cxtypes.h	/^CvChain;$/;"	t	typeref:struct:CvChain
CvChain	opencv/include/cxtypes.h	/^typedef struct CvChain$/;"	s
CvChainApproxMethod	opencv/include/cvcompat.h	/^typedef int CvChainApproxMethod;$/;"	t
CvChainPtReader	opencv/include/cvtypes.h	/^CvChainPtReader;$/;"	t	typeref:struct:CvChainPtReader
CvChainPtReader	opencv/include/cvtypes.h	/^typedef struct CvChainPtReader$/;"	s
CvCliqueFinder	opencv/include/cvaux.h	/^typedef struct CvCliqueFinder$/;"	s
CvCliqueFinder	opencv/include/cvaux.h	/^} CvCliqueFinder;$/;"	t	typeref:struct:CvCliqueFinder
CvCloneFunc	opencv/include/cxtypes.h	/^typedef void* (CV_CDECL *CvCloneFunc)( const void* struct_ptr );$/;"	t
CvCmpFunc	opencv/include/cxcore.h	/^typedef int (CV_CDECL* CvCmpFunc)(const void* a, const void* b, void* userdata );$/;"	t
CvCoeffType	opencv/include/cvcompat.h	72;"	d
CvCompareMethod	opencv/include/cvcompat.h	67;"	d
CvConDensation	opencv/include/cvtypes.h	/^CvConDensation;$/;"	t	typeref:struct:CvConDensation
CvConDensation	opencv/include/cvtypes.h	/^typedef struct CvConDensation$/;"	s
CvConnectedComp	opencv/include/cvtypes.h	/^CvConnectedComp;$/;"	t	typeref:struct:CvConnectedComp
CvConnectedComp	opencv/include/cvtypes.h	/^typedef struct CvConnectedComp$/;"	s
CvContour	opencv/include/cxtypes.h	/^CvContour;$/;"	t	typeref:struct:CvContour
CvContour	opencv/include/cxtypes.h	/^typedef struct CvContour$/;"	s
CvContourOrientation	opencv/include/cvaux.h	/^typedef struct CvContourOrientation$/;"	s
CvContourOrientation	opencv/include/cvaux.h	/^} CvContourOrientation;$/;"	t	typeref:struct:CvContourOrientation
CvContourRetrievalMode	opencv/include/cvcompat.h	/^typedef int CvContourRetrievalMode;$/;"	t
CvContourScanner	opencv/include/cvtypes.h	/^typedef struct _CvContourScanner* CvContourScanner;$/;"	t	typeref:struct:_CvContourScanner
CvContourTree	opencv/include/cvtypes.h	/^CvContourTree;$/;"	t	typeref:struct:CvContourTree
CvContourTree	opencv/include/cvtypes.h	/^typedef struct CvContourTree$/;"	s
CvContourTreesMatchMethod	opencv/include/cvcompat.h	71;"	d
CvContoursMatchMethod	opencv/include/cvcompat.h	70;"	d
CvConvexityDefect	opencv/include/cvtypes.h	/^CvConvexityDefect;$/;"	t	typeref:struct:CvConvexityDefect
CvConvexityDefect	opencv/include/cvtypes.h	/^typedef struct CvConvexityDefect$/;"	s
CvDTree	opencv/include/ml.h	/^class CV_EXPORTS CvDTree : public CvStatModel$/;"	c
CvDTreeNode	opencv/include/ml.h	/^struct CvDTreeNode$/;"	s
CvDTreeParams	opencv/include/ml.h	/^    CvDTreeParams( int _max_depth, int _min_sample_count,$/;"	f	struct:CvDTreeParams
CvDTreeParams	opencv/include/ml.h	/^    CvDTreeParams() : max_categories(10), max_depth(INT_MAX), min_sample_count(10),$/;"	f	struct:CvDTreeParams
CvDTreeParams	opencv/include/ml.h	/^struct CV_EXPORTS CvDTreeParams$/;"	s
CvDTreeSplit	opencv/include/ml.h	/^struct CvDTreeSplit$/;"	s
CvDTreeTrainData	opencv/include/ml.h	/^struct CV_EXPORTS CvDTreeTrainData$/;"	s
CvDefParam	opencv/include/cvvidsurv.hpp	/^struct CvDefParam$/;"	s
CvDetectedBlob	opencv/include/cvvidsurv.hpp	/^struct CV_EXPORTS CvDetectedBlob : public CvBlob$/;"	s
CvDisMaskType	opencv/include/cvcompat.h	62;"	d
CvDisType	opencv/include/cvcompat.h	/^typedef int CvDisType;$/;"	t
CvDistanceFunction	opencv/include/cvtypes.h	/^typedef float (CV_CDECL * CvDistanceFunction)( const float* a, const float* b, void* user_param );$/;"	t
CvDrawShape	opencv/include/cvvidsurv.hpp	/^struct CvDrawShape$/;"	s
CvEHMM	opencv/include/cvaux.h	/^CvEHMM;$/;"	t	typeref:struct:CvEHMM
CvEHMM	opencv/include/cvaux.h	/^typedef struct CvEHMM$/;"	s
CvEHMMState	opencv/include/cvaux.h	/^CvEHMMState;$/;"	t	typeref:struct:CvEHMMState
CvEHMMState	opencv/include/cvaux.h	/^typedef struct CvEHMMState$/;"	s
CvEM	opencv/include/ml.h	/^class CV_EXPORTS CvEM : public CvStatModel$/;"	c
CvEMParams	opencv/include/ml.h	/^    CvEMParams( int _nclusters, int _cov_mat_type=1\/*CvEM::COV_MAT_DIAGONAL*\/,$/;"	f	struct:CvEMParams
CvEMParams	opencv/include/ml.h	/^    CvEMParams() : nclusters(10), cov_mat_type(1\/*CvEM::COV_MAT_DIAGONAL*\/),$/;"	f	struct:CvEMParams
CvEMParams	opencv/include/ml.h	/^struct CV_EXPORTS CvEMParams$/;"	s
CvERTreeTrainData	opencv/include/ml.h	/^struct CV_EXPORTS CvERTreeTrainData : public CvDTreeTrainData$/;"	s
CvERTrees	opencv/include/ml.h	/^class CV_EXPORTS CvERTrees : public CvRTrees$/;"	c
CvElementShape	opencv/include/cvcompat.h	74;"	d
CvErrorCallback	opencv/include/cxcore.h	/^typedef int (CV_CDECL *CvErrorCallback)( int status, const char* func_name,$/;"	t
CvFGDStatModel	opencv/include/cvaux.h	/^CvFGDStatModel;$/;"	t	typeref:struct:CvFGDStatModel
CvFGDStatModel	opencv/include/cvaux.h	/^typedef struct CvFGDStatModel$/;"	s
CvFGDStatModelParams	opencv/include/cvaux.h	/^CvFGDStatModelParams;$/;"	t	typeref:struct:CvFGDStatModelParams
CvFGDStatModelParams	opencv/include/cvaux.h	/^typedef struct CvFGDStatModelParams$/;"	s
CvFGDetector	opencv/include/cvvidsurv.hpp	/^	CvFGDetector(){SetTypeName("FGDetector");};$/;"	f	class:CvFGDetector
CvFGDetector	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvFGDetector: public CvVSModule$/;"	c
CvFace	opencv/include/cvaux.h	/^typedef struct CvFace$/;"	s
CvFaceData	opencv/include/cvaux.h	/^} CvFaceData;$/;"	t	typeref:struct:CvFace
CvFaceTracker	opencv/include/cvaux.h	/^typedef struct CvFaceTracker CvFaceTracker;$/;"	t	typeref:struct:CvFaceTracker
CvFileNode	opencv/include/cxtypes.h	/^CvFileNode;$/;"	t	typeref:struct:CvFileNode
CvFileNode	opencv/include/cxtypes.h	/^typedef struct CvFileNode$/;"	s
CvFileNodeHash	opencv/include/cxtypes.h	/^typedef struct CvGenericHash CvFileNodeHash;$/;"	t	typeref:struct:CvGenericHash
CvFileStorage	opencv/include/cxtypes.h	/^typedef struct CvFileStorage CvFileStorage;$/;"	t	typeref:struct:CvFileStorage
CvFilter	opencv/include/cvtypes.h	/^CvFilter;$/;"	t	typeref:enum:CvFilter
CvFilter	opencv/include/cvtypes.h	/^typedef enum CvFilter$/;"	g
CvFont	opencv/include/cxcore.h	/^CvFont;$/;"	t	typeref:struct:CvFont
CvFont	opencv/include/cxcore.h	/^typedef struct CvFont$/;"	s
CvFontFace	opencv/include/cvcompat.h	68;"	d
CvForestERTree	opencv/include/ml.h	/^class CV_EXPORTS CvForestERTree : public CvForestTree$/;"	c
CvForestTree	opencv/include/ml.h	/^class CV_EXPORTS CvForestTree: public CvDTree$/;"	c
CvFreeFunc	opencv/include/cxcore.h	/^typedef int (CV_CDECL *CvFreeFunc)(void* pptr, void* userdata);$/;"	t
CvFuncTable	opencv/include/cxmisc.h	/^CvFuncTable;$/;"	t	typeref:struct:CvFuncTable
CvFuncTable	opencv/include/cxmisc.h	/^typedef struct CvFuncTable$/;"	s
CvFuzzyController	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvFuzzyController {$/;"	c
CvFuzzyCurve	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvFuzzyCurve {$/;"	c
CvFuzzyFunction	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvFuzzyFunction {$/;"	c
CvFuzzyMeanShiftTracker	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvFuzzyMeanShiftTracker$/;"	c
CvFuzzyPoint	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvFuzzyPoint {$/;"	c
CvFuzzyRule	opencv/include/cvaux.hpp	/^class CV_EXPORTS CvFuzzyRule {$/;"	c
CvGLCM	opencv/include/cvaux.h	/^typedef struct CvGLCM CvGLCM;$/;"	t	typeref:struct:CvGLCM
CvGaussBGModel	opencv/include/cvaux.h	/^CvGaussBGModel;$/;"	t	typeref:struct:CvGaussBGModel
CvGaussBGModel	opencv/include/cvaux.h	/^typedef struct CvGaussBGModel$/;"	s
CvGaussBGPoint	opencv/include/cvaux.h	/^CvGaussBGPoint;$/;"	t	typeref:struct:CvGaussBGPoint
CvGaussBGPoint	opencv/include/cvaux.h	/^typedef struct CvGaussBGPoint$/;"	s
CvGaussBGStatModelParams	opencv/include/cvaux.h	/^typedef struct CvGaussBGStatModelParams$/;"	s
CvGaussBGStatModelParams	opencv/include/cvaux.h	/^}CvGaussBGStatModelParams;$/;"	t	typeref:struct:CvGaussBGStatModelParams
CvGaussBGValues	opencv/include/cvaux.h	/^CvGaussBGValues;$/;"	t	typeref:struct:CvGaussBGValues
CvGaussBGValues	opencv/include/cvaux.h	/^typedef struct CvGaussBGValues$/;"	s
CvGraph	opencv/include/cxtypes.h	/^CvGraph;$/;"	t	typeref:struct:CvGraph
CvGraph	opencv/include/cxtypes.h	/^typedef struct CvGraph$/;"	s
CvGraphEdge	opencv/include/cxtypes.h	/^CvGraphEdge;$/;"	t	typeref:struct:CvGraphEdge
CvGraphEdge	opencv/include/cxtypes.h	/^typedef struct CvGraphEdge$/;"	s
CvGraphScanner	opencv/include/cxcore.h	/^CvGraphScanner;$/;"	t	typeref:struct:CvGraphScanner
CvGraphScanner	opencv/include/cxcore.h	/^typedef struct CvGraphScanner$/;"	s
CvGraphVtx	opencv/include/cxtypes.h	/^CvGraphVtx;$/;"	t	typeref:struct:CvGraphVtx
CvGraphVtx	opencv/include/cxtypes.h	/^typedef struct CvGraphVtx$/;"	s
CvGraphVtx2D	opencv/include/cxtypes.h	/^CvGraphVtx2D;$/;"	t	typeref:struct:CvGraphVtx2D
CvGraphVtx2D	opencv/include/cxtypes.h	/^typedef struct CvGraphVtx2D$/;"	s
CvGraphWeightType	opencv/include/cvaux.h	/^typedef enum CvGraphWeightType$/;"	g
CvGraphWeightType	opencv/include/cvaux.h	/^} CvGraphWeightType;$/;"	t	typeref:enum:CvGraphWeightType
CvGraphWeightedEdge	opencv/include/cvaux.h	/^CvGraphWeightedEdge;$/;"	t	typeref:struct:CvGraphWeightedEdge
CvGraphWeightedEdge	opencv/include/cvaux.h	/^typedef struct CvGraphWeightedEdge$/;"	s
CvGraphWeightedVtx	opencv/include/cvaux.h	/^CvGraphWeightedVtx;$/;"	t	typeref:struct:CvGraphWeightedVtx
CvGraphWeightedVtx	opencv/include/cvaux.h	/^typedef struct CvGraphWeightedVtx$/;"	s
CvHaarClassifier	opencv/include/cvtypes.h	/^CvHaarClassifier;$/;"	t	typeref:struct:CvHaarClassifier
CvHaarClassifier	opencv/include/cvtypes.h	/^typedef struct CvHaarClassifier$/;"	s
CvHaarClassifierCascade	opencv/include/cvtypes.h	/^CvHaarClassifierCascade;$/;"	t	typeref:struct:CvHaarClassifierCascade
CvHaarClassifierCascade	opencv/include/cvtypes.h	/^typedef struct CvHaarClassifierCascade$/;"	s
CvHaarFeature	opencv/include/cvtypes.h	/^CvHaarFeature;$/;"	t	typeref:struct:CvHaarFeature
CvHaarFeature	opencv/include/cvtypes.h	/^typedef struct CvHaarFeature$/;"	s
CvHaarStageClassifier	opencv/include/cvtypes.h	/^CvHaarStageClassifier;$/;"	t	typeref:struct:CvHaarStageClassifier
CvHaarStageClassifier	opencv/include/cvtypes.h	/^typedef struct CvHaarStageClassifier$/;"	s
CvHidHaarClassifierCascade	opencv/include/cvtypes.h	/^typedef struct CvHidHaarClassifierCascade CvHidHaarClassifierCascade;$/;"	t	typeref:struct:CvHidHaarClassifierCascade
CvHistType	opencv/include/cxtypes.h	/^typedef int CvHistType;$/;"	t
CvHistogram	opencv/include/cxtypes.h	/^CvHistogram;$/;"	t	typeref:struct:CvHistogram
CvHistogram	opencv/include/cxtypes.h	/^typedef struct CvHistogram$/;"	s
CvHuMoments	opencv/include/cvtypes.h	/^CvHuMoments;$/;"	t	typeref:struct:CvHuMoments
CvHuMoments	opencv/include/cvtypes.h	/^typedef struct CvHuMoments$/;"	s
CvImage	opencv/include/cxcore.h	/^    CvImage( CvFileStorage* fs, const char* mapname, const char* imgname ) : image(0), refcount(0)$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^    CvImage( CvFileStorage* fs, const char* seqname, int idx ) : image(0), refcount(0)$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^    CvImage( CvSize size, int depth, int channels )$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^    CvImage( IplImage* img ) : image(img)$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^    CvImage( const CvImage& img ) : image(img.image), refcount(img.refcount)$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^    CvImage( const char* filename, const char* imgname=0, int color=-1 ) : image(0), refcount(0)$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^    CvImage() : image(0), refcount(0) {}$/;"	f	class:CvImage
CvImage	opencv/include/cxcore.h	/^class CV_EXPORTS CvImage$/;"	c
CvImageDrawer	opencv/include/cvvidsurv.hpp	/^    CvImageDrawer() : m_image(0) {}$/;"	f	class:CvImageDrawer
CvImageDrawer	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvImageDrawer$/;"	c
CvImgObsInfo	opencv/include/cvaux.h	/^CvImgObsInfo;\/*struct for 1 image*\/$/;"	t	typeref:struct:CvImgObsInfo
CvImgObsInfo	opencv/include/cvaux.h	/^typedef struct CvImgObsInfo$/;"	s
CvInput	opencv/include/cvaux.h	/^CvInput;$/;"	t	typeref:union:__anon105
CvIsInstanceFunc	opencv/include/cxtypes.h	/^typedef int (CV_CDECL *CvIsInstanceFunc)( const void* struct_ptr );$/;"	t
CvKNearest	opencv/include/ml.h	/^class CV_EXPORTS CvKNearest : public CvStatModel$/;"	c
CvKalman	opencv/include/cvtypes.h	/^CvKalman;$/;"	t	typeref:struct:CvKalman
CvKalman	opencv/include/cvtypes.h	/^typedef struct CvKalman$/;"	s
CvLCMEdge	opencv/include/cvaux.h	/^typedef struct CvLCMEdge$/;"	s
CvLCMEdge	opencv/include/cvaux.h	/^} CvLCMEdge;$/;"	t	typeref:struct:CvLCMEdge
CvLCMNode	opencv/include/cvaux.h	/^typedef struct CvLCMNode$/;"	s
CvLCMNode	opencv/include/cvaux.h	/^} CvLCMNode;$/;"	t	typeref:struct:CvLCMNode
CvLSHOperations	opencv/include/cv.hpp	/^struct CvLSHOperations$/;"	s
CvLeeParameters	opencv/include/cvaux.h	/^typedef enum CvLeeParameters$/;"	g
CvLeeParameters	opencv/include/cvaux.h	/^} CvLeeParameters;$/;"	t	typeref:enum:CvLeeParameters
CvLevMarq	opencv/include/cv.hpp	/^class CV_EXPORTS CvLevMarq$/;"	c
CvLineIterator	opencv/include/cxtypes.h	/^CvLineIterator;$/;"	t	typeref:struct:CvLineIterator
CvLineIterator	opencv/include/cxtypes.h	/^typedef struct CvLineIterator$/;"	s
CvLoadImageFunc	opencv/include/cxcore.h	/^typedef IplImage* (CV_CDECL * CvLoadImageFunc)( const char* filename, int colorness );$/;"	t
CvLoadImageMFunc	opencv/include/cxcore.h	/^typedef CvMat* (CV_CDECL * CvLoadImageMFunc)( const char* filename, int colorness );$/;"	t
CvMLData	opencv/include/ml.h	/^class CV_EXPORTS CvMLData$/;"	c
CvMSERParams	opencv/include/cv.h	/^CvMSERParams;$/;"	t	typeref:struct:CvMSERParams
CvMSERParams	opencv/include/cv.h	/^typedef struct CvMSERParams$/;"	s
CvMat	opencv/include/cxtypes.h	/^CvMat;$/;"	t	typeref:struct:CvMat
CvMat	opencv/include/cxtypes.h	/^typedef struct CvMat$/;"	s
CvMatArray	opencv/include/cvcompat.h	63;"	d
CvMatND	opencv/include/cxtypes.h	/^CvMatND;$/;"	t	typeref:struct:CvMatND
CvMatND	opencv/include/cxtypes.h	/^typedef struct CvMatND$/;"	s
CvMatType	opencv/include/cvcompat.h	61;"	d
CvMatr32f	opencv/include/cvtypes.h	/^typedef float*   CvMatr32f;$/;"	t
CvMatr64d	opencv/include/cvtypes.h	/^typedef double*  CvMatr64d;$/;"	t
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( CvFileStorage* fs, const char* mapname, const char* matname ) : matrix(0)$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( CvFileStorage* fs, const char* seqname, int idx ) : matrix(0)$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( CvMat* m )$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( const CvMatrix& m )$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( const char* filename, const char* matname=0, int color=-1 ) : matrix(0)$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( int rows, int cols, int type )$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( int rows, int cols, int type, CvMat* hdr,$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix( int rows, int cols, int type, void* data, int step=CV_AUTOSTEP )$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^    CvMatrix() : matrix(0) {}$/;"	f	class:CvMatrix
CvMatrix	opencv/include/cxcore.h	/^class CV_EXPORTS CvMatrix$/;"	c
CvMatrix3	opencv/include/cvtypes.h	/^CvMatrix3;$/;"	t	typeref:struct:CvMatrix3
CvMatrix3	opencv/include/cvtypes.h	/^typedef struct CvMatrix3$/;"	s
CvMemBlock	opencv/include/cxtypes.h	/^CvMemBlock;$/;"	t	typeref:struct:CvMemBlock
CvMemBlock	opencv/include/cxtypes.h	/^typedef struct CvMemBlock$/;"	s
CvMemStorage	opencv/include/cxtypes.h	/^CvMemStorage;$/;"	t	typeref:struct:CvMemStorage
CvMemStorage	opencv/include/cxtypes.h	/^typedef struct CvMemStorage$/;"	s
CvMemStoragePos	opencv/include/cxtypes.h	/^CvMemStoragePos;$/;"	t	typeref:struct:CvMemStoragePos
CvMemStoragePos	opencv/include/cxtypes.h	/^typedef struct CvMemStoragePos$/;"	s
CvModule	opencv/include/cxcore.h	/^struct CV_EXPORTS CvModule$/;"	s
CvModuleInfo	opencv/include/cxtypes.h	/^CvModuleInfo;$/;"	t	typeref:struct:CvModuleInfo
CvModuleInfo	opencv/include/cxtypes.h	/^typedef struct CvModuleInfo$/;"	s
CvMoments	opencv/include/cvtypes.h	/^CvMoments;$/;"	t	typeref:struct:CvMoments
CvMoments	opencv/include/cvtypes.h	/^typedef struct CvMoments$/;"	s
CvMorphOp	opencv/include/cvcompat.h	75;"	d
CvMouseCallback	opencv/include/highgui.h	/^typedef void (CV_CDECL *CvMouseCallback )(int event, int x, int y, int flags, void* param);$/;"	t
CvNArrayIterator	opencv/include/cxcore.h	/^CvNArrayIterator;$/;"	t	typeref:struct:CvNArrayIterator
CvNArrayIterator	opencv/include/cxcore.h	/^typedef struct CvNArrayIterator$/;"	s
CvNextEdgeType	opencv/include/cvtypes.h	/^CvNextEdgeType;$/;"	t	typeref:enum:CvNextEdgeType
CvNextEdgeType	opencv/include/cvtypes.h	/^typedef enum CvNextEdgeType$/;"	g
CvNormalBayesClassifier	opencv/include/ml.h	/^class CV_EXPORTS CvNormalBayesClassifier : public CvStatModel$/;"	c
CvObjectDetector	opencv/include/cvvidsurv.hpp	/^    CvObjectDetector( const char* \/*detector_file_name*\/ = 0 ) {};$/;"	f	class:CvObjectDetector
CvObjectDetector	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvObjectDetector$/;"	c
CvPOSITObject	opencv/include/cv.h	/^typedef struct CvPOSITObject CvPOSITObject;$/;"	t	typeref:struct:CvPOSITObject
CvPair16u32s	opencv/include/ml.h	/^struct CvPair16u32s$/;"	s
CvParamGrid	opencv/include/ml.h	/^    CvParamGrid( double _min_val, double _max_val, double log_step )$/;"	f	struct:CvParamGrid
CvParamGrid	opencv/include/ml.h	/^    CvParamGrid()$/;"	f	struct:CvParamGrid
CvParamGrid	opencv/include/ml.h	/^struct CV_EXPORTS CvParamGrid$/;"	s
CvPixelPosition32f	opencv/include/cvcompat.h	/^} CvPixelPosition32f;$/;"	t	typeref:struct:_CvPixelPosition32f
CvPixelPosition8s	opencv/include/cvcompat.h	/^} CvPixelPosition8s;$/;"	t	typeref:struct:_CvPixelPosition8s
CvPixelPosition8u	opencv/include/cvcompat.h	/^} CvPixelPosition8u;$/;"	t	typeref:struct:_CvPixelPosition8u
CvPluginFuncInfo	opencv/include/cxtypes.h	/^CvPluginFuncInfo;$/;"	t	typeref:struct:CvPluginFuncInfo
CvPluginFuncInfo	opencv/include/cxtypes.h	/^typedef struct CvPluginFuncInfo$/;"	s
CvPoint	opencv/include/cxtypes.h	/^CvPoint;$/;"	t	typeref:struct:CvPoint
CvPoint	opencv/include/cxtypes.h	/^typedef struct CvPoint$/;"	s
CvPoint2D32f	opencv/include/cxtypes.h	/^CvPoint2D32f;$/;"	t	typeref:struct:CvPoint2D32f
CvPoint2D32f	opencv/include/cxtypes.h	/^typedef struct CvPoint2D32f$/;"	s
CvPoint2D64d	opencv/include/cvcompat.h	78;"	d
CvPoint2D64f	opencv/include/cxtypes.h	/^CvPoint2D64f;$/;"	t	typeref:struct:CvPoint2D64f
CvPoint2D64f	opencv/include/cxtypes.h	/^typedef struct CvPoint2D64f$/;"	s
CvPoint2DSeq	opencv/include/cxtypes.h	/^typedef CvContour CvPoint2DSeq;$/;"	t
CvPoint3D32f	opencv/include/cxtypes.h	/^CvPoint3D32f;$/;"	t	typeref:struct:CvPoint3D32f
CvPoint3D32f	opencv/include/cxtypes.h	/^typedef struct CvPoint3D32f$/;"	s
CvPoint3D64d	opencv/include/cvcompat.h	79;"	d
CvPoint3D64f	opencv/include/cxtypes.h	/^CvPoint3D64f;$/;"	t	typeref:struct:CvPoint3D64f
CvPoint3D64f	opencv/include/cxtypes.h	/^typedef struct CvPoint3D64f$/;"	s
CvPolyApproxMethod	opencv/include/cvcompat.h	69;"	d
CvProb	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvProb$/;"	c
CvQuadEdge2D	opencv/include/cvtypes.h	/^CvQuadEdge2D;$/;"	t	typeref:struct:CvQuadEdge2D
CvQuadEdge2D	opencv/include/cvtypes.h	/^typedef struct CvQuadEdge2D$/;"	s
CvRNG	opencv/include/cxtypes.h	/^typedef uint64 CvRNG;$/;"	t
CvRTParams	opencv/include/ml.h	/^    CvRTParams( int _max_depth, int _min_sample_count,$/;"	f	struct:CvRTParams
CvRTParams	opencv/include/ml.h	/^    CvRTParams() : CvDTreeParams( 5, 10, 0, false, 10, 0, false, false, 0 ),$/;"	f	struct:CvRTParams
CvRTParams	opencv/include/ml.h	/^struct CV_EXPORTS CvRTParams : public CvDTreeParams$/;"	s
CvRTrees	opencv/include/ml.h	/^class CV_EXPORTS CvRTrees : public CvStatModel$/;"	c
CvRandState	opencv/include/cvcompat.h	/^CvRandState;$/;"	t	typeref:struct:CvRandState
CvRandState	opencv/include/cvcompat.h	/^typedef struct CvRandState$/;"	s
CvReadFunc	opencv/include/cxtypes.h	/^typedef void* (CV_CDECL *CvReadFunc)( CvFileStorage* storage, CvFileNode* node );$/;"	t
CvRect	opencv/include/cxtypes.h	/^CvRect;$/;"	t	typeref:struct:CvRect
CvRect	opencv/include/cxtypes.h	/^typedef struct CvRect$/;"	s
CvRectToRect	opencv/include/highgui.h	/^CV_INLINE RECT CvRectToRect( CvRect sr )$/;"	f
CvReleaseBGStatModel	opencv/include/cvaux.h	/^typedef void (CV_CDECL * CvReleaseBGStatModel)( struct CvBGStatModel** bg_model );$/;"	t
CvReleaseFunc	opencv/include/cxtypes.h	/^typedef void (CV_CDECL *CvReleaseFunc)( void** struct_dblptr );$/;"	t
CvRodriguesType	opencv/include/cvcompat.h	73;"	d
CvSURFParams	opencv/include/cv.h	/^CvSURFParams;$/;"	t	typeref:struct:CvSURFParams
CvSURFParams	opencv/include/cv.h	/^typedef struct CvSURFParams$/;"	s
CvSURFPoint	opencv/include/cv.h	/^typedef struct CvSURFPoint$/;"	s
CvSURFPoint	opencv/include/cv.h	/^} CvSURFPoint;$/;"	t	typeref:struct:CvSURFPoint
CvSVM	opencv/include/ml.h	/^class CV_EXPORTS CvSVM : public CvStatModel$/;"	c
CvSVMDecisionFunc	opencv/include/ml.h	/^struct CvSVMDecisionFunc$/;"	s
CvSVMKernel	opencv/include/ml.h	/^struct CV_EXPORTS CvSVMKernel$/;"	s
CvSVMKernelRow	opencv/include/ml.h	/^struct CvSVMKernelRow$/;"	s
CvSVMParams	opencv/include/ml.h	/^struct CV_EXPORTS CvSVMParams$/;"	s
CvSVMSolutionInfo	opencv/include/ml.h	/^struct CvSVMSolutionInfo$/;"	s
CvSVMSolver	opencv/include/ml.h	/^class CV_EXPORTS CvSVMSolver$/;"	c
CvSaveImageFunc	opencv/include/cxcore.h	/^typedef int (CV_CDECL * CvSaveImageFunc)( const char* filename, const CvArr* image,$/;"	t
CvScalar	opencv/include/cxtypes.h	/^CvScalar;$/;"	t	typeref:struct:CvScalar
CvScalar	opencv/include/cxtypes.h	/^typedef struct CvScalar$/;"	s
CvSeq	opencv/include/cxtypes.h	/^CvSeq;$/;"	t	typeref:struct:CvSeq
CvSeq	opencv/include/cxtypes.h	/^typedef struct CvSeq$/;"	s
CvSeqBlock	opencv/include/cxtypes.h	/^CvSeqBlock;$/;"	t	typeref:struct:CvSeqBlock
CvSeqBlock	opencv/include/cxtypes.h	/^typedef struct CvSeqBlock$/;"	s
CvSeqReader	opencv/include/cxtypes.h	/^CvSeqReader;$/;"	t	typeref:struct:CvSeqReader
CvSeqReader	opencv/include/cxtypes.h	/^typedef struct CvSeqReader$/;"	s
CvSeqWriter	opencv/include/cxtypes.h	/^CvSeqWriter;$/;"	t	typeref:struct:CvSeqWriter
CvSeqWriter	opencv/include/cxtypes.h	/^typedef struct CvSeqWriter$/;"	s
CvSet	opencv/include/cxtypes.h	/^CvSet;$/;"	t	typeref:struct:CvSet
CvSet	opencv/include/cxtypes.h	/^typedef struct CvSet$/;"	s
CvSetElem	opencv/include/cxtypes.h	/^CvSetElem;$/;"	t	typeref:struct:CvSetElem
CvSetElem	opencv/include/cxtypes.h	/^typedef struct CvSetElem$/;"	s
CvShowImageFunc	opencv/include/cxcore.h	/^typedef void (CV_CDECL * CvShowImageFunc)( const char* windowname, const CvArr* image );$/;"	t
CvSize	opencv/include/cxtypes.h	/^CvSize;$/;"	t	typeref:struct:__anon36
CvSize2D32f	opencv/include/cxtypes.h	/^CvSize2D32f;$/;"	t	typeref:struct:CvSize2D32f
CvSize2D32f	opencv/include/cxtypes.h	/^typedef struct CvSize2D32f$/;"	s
CvSlice	opencv/include/cxtypes.h	/^CvSlice;$/;"	t	typeref:struct:CvSlice
CvSlice	opencv/include/cxtypes.h	/^typedef struct CvSlice$/;"	s
CvSparseMat	opencv/include/cxtypes.h	/^CvSparseMat;$/;"	t	typeref:struct:CvSparseMat
CvSparseMat	opencv/include/cxtypes.h	/^typedef struct CvSparseMat$/;"	s
CvSparseMatIterator	opencv/include/cxtypes.h	/^CvSparseMatIterator;$/;"	t	typeref:struct:CvSparseMatIterator
CvSparseMatIterator	opencv/include/cxtypes.h	/^typedef struct CvSparseMatIterator$/;"	s
CvSparseNode	opencv/include/cxtypes.h	/^CvSparseNode;$/;"	t	typeref:struct:CvSparseNode
CvSparseNode	opencv/include/cxtypes.h	/^typedef struct CvSparseNode$/;"	s
CvStarDetectorParams	opencv/include/cv.h	/^CvStarDetectorParams;$/;"	t	typeref:struct:CvStarDetectorParams
CvStarDetectorParams	opencv/include/cv.h	/^typedef struct CvStarDetectorParams$/;"	s
CvStarKeypoint	opencv/include/cv.h	/^CvStarKeypoint;$/;"	t	typeref:struct:CvStarKeypoint
CvStarKeypoint	opencv/include/cv.h	/^typedef struct CvStarKeypoint$/;"	s
CvStatModel	opencv/include/ml.h	/^class CV_EXPORTS CvStatModel$/;"	c
CvStatus	opencv/include/cxmisc.h	/^CvStatus;$/;"	t	typeref:enum:CvStatus
CvStatus	opencv/include/cxmisc.h	/^typedef enum CvStatus$/;"	g
CvStereoBMState	opencv/include/cv.h	/^CvStereoBMState;$/;"	t	typeref:struct:CvStereoBMState
CvStereoBMState	opencv/include/cv.h	/^typedef struct CvStereoBMState$/;"	s
CvStereoCamera	opencv/include/cvaux.h	/^CvStereoCamera;$/;"	t	typeref:struct:CvStereoCamera
CvStereoCamera	opencv/include/cvaux.h	/^typedef struct CvStereoCamera$/;"	s
CvStereoGCState	opencv/include/cv.h	/^CvStereoGCState;$/;"	t	typeref:struct:CvStereoGCState
CvStereoGCState	opencv/include/cv.h	/^typedef struct CvStereoGCState$/;"	s
CvStereoLineCoeff	opencv/include/cvaux.h	/^typedef struct CvStereoLineCoeff$/;"	s
CvStereoLineCoeff	opencv/include/cvaux.h	/^}CvStereoLineCoeff;$/;"	t	typeref:struct:CvStereoLineCoeff
CvString	opencv/include/cxtypes.h	/^CvString;$/;"	t	typeref:struct:CvString
CvString	opencv/include/cxtypes.h	/^typedef struct CvString$/;"	s
CvStringHashNode	opencv/include/cxtypes.h	/^CvStringHashNode;$/;"	t	typeref:struct:CvStringHashNode
CvStringHashNode	opencv/include/cxtypes.h	/^typedef struct CvStringHashNode$/;"	s
CvSubdiv2D	opencv/include/cvtypes.h	/^CvSubdiv2D;$/;"	t	typeref:struct:CvSubdiv2D
CvSubdiv2D	opencv/include/cvtypes.h	/^typedef struct CvSubdiv2D$/;"	s
CvSubdiv2DEdge	opencv/include/cvtypes.h	/^typedef size_t CvSubdiv2DEdge;$/;"	t
CvSubdiv2DPoint	opencv/include/cvtypes.h	/^CvSubdiv2DPoint;$/;"	t	typeref:struct:CvSubdiv2DPoint
CvSubdiv2DPoint	opencv/include/cvtypes.h	/^typedef struct CvSubdiv2DPoint$/;"	s
CvSubdiv2DPointLocation	opencv/include/cvtypes.h	/^CvSubdiv2DPointLocation;$/;"	t	typeref:enum:CvSubdiv2DPointLocation
CvSubdiv2DPointLocation	opencv/include/cvtypes.h	/^typedef enum CvSubdiv2DPointLocation$/;"	g
CvTemplMatchMethod	opencv/include/cvcompat.h	76;"	d
CvTermCriteria	opencv/include/cxtypes.h	/^CvTermCriteria;$/;"	t	typeref:struct:CvTermCriteria
CvTermCriteria	opencv/include/cxtypes.h	/^typedef struct CvTermCriteria$/;"	s
CvTestSeq	opencv/include/cvvidsurv.hpp	/^typedef void CvTestSeq;$/;"	t
CvThreshType	opencv/include/cvcompat.h	65;"	d
CvTrackbarCallback	opencv/include/highgui.h	/^typedef void (CV_CDECL *CvTrackbarCallback)(int pos);$/;"	t
CvTrackbarCallback2	opencv/include/highgui.h	/^typedef void (CV_CDECL *CvTrackbarCallback2)(int pos, void* userdata);$/;"	t
CvTracksTimePos	opencv/include/cvvidsurv.hpp	/^struct CvTracksTimePos$/;"	s
CvTrainTestSplit	opencv/include/ml.h	/^struct CV_EXPORTS CvTrainTestSplit$/;"	s
CvTreeNodeIterator	opencv/include/cxcore.h	/^CvTreeNodeIterator;$/;"	t	typeref:struct:CvTreeNodeIterator
CvTreeNodeIterator	opencv/include/cxcore.h	/^typedef struct CvTreeNodeIterator$/;"	s
CvType	opencv/include/cxcore.h	/^struct CV_EXPORTS CvType$/;"	s
CvTypeInfo	opencv/include/cxtypes.h	/^CvTypeInfo;$/;"	t	typeref:struct:CvTypeInfo
CvTypeInfo	opencv/include/cxtypes.h	/^typedef struct CvTypeInfo$/;"	s
CvUpdateBGStatModel	opencv/include/cvaux.h	/^typedef int (CV_CDECL * CvUpdateBGStatModel)( IplImage* curr_frame, struct CvBGStatModel* bg_model );$/;"	t
CvVSModule	opencv/include/cvvidsurv.hpp	/^    CvVSModule()$/;"	f	class:CvVSModule
CvVSModule	opencv/include/cvvidsurv.hpp	/^class CV_EXPORTS CvVSModule$/;"	c
CvVect32f	opencv/include/cvtypes.h	/^typedef float*   CvVect32f;$/;"	t
CvVect64d	opencv/include/cvtypes.h	/^typedef double*  CvVect64d;$/;"	t
CvVectors	opencv/include/ml.h	/^struct CvVectors$/;"	s
CvVideoWriter	opencv/include/highgui.h	/^typedef struct CvVideoWriter CvVideoWriter;$/;"	t	typeref:struct:CvVideoWriter
CvVoronoiDiagram2D	opencv/include/cvaux.h	/^typedef struct CvVoronoiDiagram2D$/;"	s
CvVoronoiDiagram2D	opencv/include/cvaux.h	/^} CvVoronoiDiagram2D;$/;"	t	typeref:struct:CvVoronoiDiagram2D
CvVoronoiEdge2D	opencv/include/cvaux.h	/^typedef struct CvVoronoiEdge2D$/;"	s
CvVoronoiEdge2D	opencv/include/cvaux.h	/^} CvVoronoiEdge2D;$/;"	t	typeref:struct:CvVoronoiEdge2D
CvVoronoiNode2D	opencv/include/cvaux.h	/^typedef struct CvVoronoiNode2D$/;"	s
CvVoronoiNode2D	opencv/include/cvaux.h	/^} CvVoronoiNode2D;$/;"	t	typeref:struct:CvVoronoiNode2D
CvVoronoiSite2D	opencv/include/cvaux.h	/^typedef struct CvVoronoiSite2D$/;"	s
CvVoronoiSite2D	opencv/include/cvaux.h	/^} CvVoronoiSite2D;$/;"	t	typeref:struct:CvVoronoiSite2D
CvWin32WindowCallback	opencv/include/highgui.h	/^typedef int (CV_CDECL * CvWin32WindowCallback)(HWND, UINT, WPARAM, LPARAM, int*);$/;"	t
CvWriteFunc	opencv/include/cxtypes.h	/^typedef void (CV_CDECL *CvWriteFunc)( CvFileStorage* storage, const char* name,$/;"	t
Cv_iplAllocateImageData	opencv/include/cxcore.h	/^typedef void (CV_STDCALL* Cv_iplAllocateImageData)(IplImage*,int,int);$/;"	t
Cv_iplCloneImage	opencv/include/cxcore.h	/^typedef IplImage* (CV_STDCALL* Cv_iplCloneImage)(const IplImage*);$/;"	t
Cv_iplCreateImageHeader	opencv/include/cxcore.h	/^typedef IplImage* (CV_STDCALL* Cv_iplCreateImageHeader)$/;"	t
Cv_iplCreateROI	opencv/include/cxcore.h	/^typedef IplROI* (CV_STDCALL* Cv_iplCreateROI)(int,int,int,int,int);$/;"	t
Cv_iplDeallocate	opencv/include/cxcore.h	/^typedef void (CV_STDCALL* Cv_iplDeallocate)(IplImage*,int);$/;"	t
CvvImage	opencv/include/highgui.h	/^class CV_EXPORTS CvvImage$/;"	c
DCT_INVERSE	opencv/include/cxcore.hpp	/^    DCT_INVERSE = DFT_INVERSE, DCT_ROWS=DFT_ROWS };$/;"	e	enum:cv::__anon93
DCT_ROWS	opencv/include/cxcore.hpp	/^    DCT_INVERSE = DFT_INVERSE, DCT_ROWS=DFT_ROWS };$/;"	e	enum:cv::__anon93
DEBprintf	vascript/debprintf.h	17;"	d
DECOMP_CHOLESKY	opencv/include/cxcore.hpp	/^enum { DECOMP_LU=0, DECOMP_SVD=1, DECOMP_EIG=2, DECOMP_CHOLESKY=3, DECOMP_QR=4, DECOMP_NORMAL=16 };$/;"	e	enum:cv::__anon89
DECOMP_EIG	opencv/include/cxcore.hpp	/^enum { DECOMP_LU=0, DECOMP_SVD=1, DECOMP_EIG=2, DECOMP_CHOLESKY=3, DECOMP_QR=4, DECOMP_NORMAL=16 };$/;"	e	enum:cv::__anon89
DECOMP_LU	opencv/include/cxcore.hpp	/^enum { DECOMP_LU=0, DECOMP_SVD=1, DECOMP_EIG=2, DECOMP_CHOLESKY=3, DECOMP_QR=4, DECOMP_NORMAL=16 };$/;"	e	enum:cv::__anon89
DECOMP_NORMAL	opencv/include/cxcore.hpp	/^enum { DECOMP_LU=0, DECOMP_SVD=1, DECOMP_EIG=2, DECOMP_CHOLESKY=3, DECOMP_QR=4, DECOMP_NORMAL=16 };$/;"	e	enum:cv::__anon89
DECOMP_QR	opencv/include/cxcore.hpp	/^enum { DECOMP_LU=0, DECOMP_SVD=1, DECOMP_EIG=2, DECOMP_CHOLESKY=3, DECOMP_QR=4, DECOMP_NORMAL=16 };$/;"	e	enum:cv::__anon89
DECOMP_SVD	opencv/include/cxcore.hpp	/^enum { DECOMP_LU=0, DECOMP_SVD=1, DECOMP_EIG=2, DECOMP_CHOLESKY=3, DECOMP_QR=4, DECOMP_NORMAL=16 };$/;"	e	enum:cv::__anon89
DEFAULT	opencv/include/ml.h	/^    enum { DEFAULT=0, GINI=1, MISCLASS=3, SQERR=4 };$/;"	e	enum:CvBoost::__anon53
DEFAULT_ARG	cvKernel.h	9;"	d
DEFAULT_COMPRESSION_METHOD	opencv/include/cvaux.hpp	/^        DEFAULT_COMPRESSION_METHOD = COMPRESSION_NONE$/;"	e	enum:cv::FernClassifier::__anon30
DEFAULT_LARGE_SIZE	opencv/include/cvaux.hpp	/^    enum { DEFAULT_SMALL_SIZE = 5, DEFAULT_LARGE_SIZE = 41,$/;"	e	enum:cv::SelfSimDescriptor::__anon29
DEFAULT_NUM_ANGLES	opencv/include/cvaux.hpp	/^        DEFAULT_NUM_ANGLES = 20, DEFAULT_START_DISTANCE_BUCKET = 3,$/;"	e	enum:cv::SelfSimDescriptor::__anon29
DEFAULT_NUM_DISTANCE_BUCKETS	opencv/include/cvaux.hpp	/^        DEFAULT_NUM_DISTANCE_BUCKETS = 7 };$/;"	e	enum:cv::SelfSimDescriptor::__anon29
DEFAULT_SIGNATURE_SIZE	opencv/include/cvaux.hpp	/^        DEFAULT_SIGNATURE_SIZE = 176,$/;"	e	enum:cv::FernClassifier::__anon30
DEFAULT_SMALL_SIZE	opencv/include/cvaux.hpp	/^    enum { DEFAULT_SMALL_SIZE = 5, DEFAULT_LARGE_SIZE = 41,$/;"	e	enum:cv::SelfSimDescriptor::__anon29
DEFAULT_START_DISTANCE_BUCKET	opencv/include/cvaux.hpp	/^        DEFAULT_NUM_ANGLES = 20, DEFAULT_START_DISTANCE_BUCKET = 3,$/;"	e	enum:cv::SelfSimDescriptor::__anon29
DEFAULT_STRUCTS	opencv/include/cvaux.hpp	/^        DEFAULT_STRUCTS = 50,$/;"	e	enum:cv::FernClassifier::__anon30
DEFAULT_STRUCT_SIZE	opencv/include/cvaux.hpp	/^        DEFAULT_STRUCT_SIZE = 9,$/;"	e	enum:cv::FernClassifier::__anon30
DEFAULT_VIEWS	opencv/include/cvaux.hpp	/^        DEFAULT_VIEWS = 5000,$/;"	e	enum:cv::FernClassifier::__anon30
DEFINE_KEYWD	vascript/token.h	/^    DEFINE_KEYWD(DEFINE_KEYENUM)$/;"	e	enum:__anon128
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(AH, 4)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(AL, 0)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(AX, 8)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(BH, 7)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(BL, 3)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(BP, 13)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(BX, 11)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(CH, 5)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(CL, 1)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(CX, 9)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(DH, 6)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(DI, 15)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(DL, 2)$/;"	e	enum:CCG::__anon141
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(DX, 10)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(EAX, 16)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(EBP, 21)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(EBX, 19)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(ECX, 17)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(EDI, 23)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(EDX, 18)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(ESI, 22)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(ESP, 20)$/;"	e	enum:CCG::__anon143
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R10, 34)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R11, 35)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R12, 36)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R13, 37)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R14, 38)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R15, 39)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R8 , 32)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(R9 , 33)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RAX, 24)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RBP, 29)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RBX, 27)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RCX, 25)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RDI, 31)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RDX, 26)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RSI, 30)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(RSP, 28)$/;"	e	enum:CCG::__anon144
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(SI, 14)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	/^DEF_REG(SP, 12)$/;"	e	enum:CCG::__anon142
DEF_REG	vascript/ccg/ccg.h	410;"	d
DEGREE	opencv/include/ml.h	/^    enum { C=0, GAMMA=1, P=2, NU=3, COEF=4, DEGREE=5 };$/;"	e	enum:CvSVM::__anon47
DEPTH_MASK	opencv/include/cxcore.hpp	/^enum { MAGIC_MASK=0xFFFF0000, TYPE_MASK=0x00000FFF, DEPTH_MASK=7 };$/;"	e	enum:cv::__anon88
DFT_COMPLEX_OUTPUT	opencv/include/cxcore.hpp	/^enum { DFT_INVERSE=1, DFT_SCALE=2, DFT_ROWS=4, DFT_COMPLEX_OUTPUT=16, DFT_REAL_OUTPUT=32,$/;"	e	enum:cv::__anon93
DFT_INVERSE	opencv/include/cxcore.hpp	/^enum { DFT_INVERSE=1, DFT_SCALE=2, DFT_ROWS=4, DFT_COMPLEX_OUTPUT=16, DFT_REAL_OUTPUT=32,$/;"	e	enum:cv::__anon93
DFT_REAL_OUTPUT	opencv/include/cxcore.hpp	/^enum { DFT_INVERSE=1, DFT_SCALE=2, DFT_ROWS=4, DFT_COMPLEX_OUTPUT=16, DFT_REAL_OUTPUT=32,$/;"	e	enum:cv::__anon93
DFT_ROWS	opencv/include/cxcore.hpp	/^enum { DFT_INVERSE=1, DFT_SCALE=2, DFT_ROWS=4, DFT_COMPLEX_OUTPUT=16, DFT_REAL_OUTPUT=32,$/;"	e	enum:cv::__anon93
DFT_SCALE	opencv/include/cxcore.hpp	/^enum { DFT_INVERSE=1, DFT_SCALE=2, DFT_ROWS=4, DFT_COMPLEX_OUTPUT=16, DFT_REAL_OUTPUT=32,$/;"	e	enum:cv::__anon93
DISCRETE	opencv/include/ml.h	/^    enum { DISCRETE=0, REAL=1, LOGIT=2, GENTLE=3 };$/;"	e	enum:CvBoost::__anon52
DMFLEXLEXER_INC	vascript/vasFlexLexer.h	20;"	d
DM_SUCCESS	vascript/ccg/ccg.h	/^enum{DM_SUCCESS = 0};$/;"	e	enum:CCG::__anon134
DONE	opencv/include/cv.hpp	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon22
DO_CANNY_PRUNING	opencv/include/cv.hpp	/^    enum { DO_CANNY_PRUNING = CV_HAAR_DO_CANNY_PRUNING,$/;"	e	enum:cv::CascadeClassifier::__anon16
DO_ROUGH_SEARCH	opencv/include/cv.hpp	/^           DO_ROUGH_SEARCH = CV_HAAR_DO_ROUGH_SEARCH };$/;"	e	enum:cv::CascadeClassifier::__anon16
DP	opencv/include/cvtypes.h	/^    int DP;                     \/* number of state vector dimensions *\/$/;"	m	struct:CvKalman
DP	opencv/include/cvtypes.h	/^    int DP;$/;"	m	struct:CvConDensation
DTree	opencv/include/cv.hpp	/^    struct CV_EXPORTS DTree$/;"	s	class:cv::CascadeClassifier
DTreeNode	opencv/include/cv.hpp	/^    struct CV_EXPORTS DTreeNode$/;"	s	class:cv::CascadeClassifier
DTreeParams	opencv/include/ml.h	/^typedef CvDTreeParams DTreeParams;$/;"	t	namespace:cv
DZHDEB	vascript/debprintf.h	3;"	d
DZHDEB	vascript/release/vasparser.cpp	108;"	d	file:
DZHDEB	vascript/release/vasparser.h	22;"	d
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<bool> { public: enum { value = CV_8U, fmt=(int)'u' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<double> { public: enum { value = CV_64F, fmt=(int)'d' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<float> { public: enum { value = CV_32F, fmt=(int)'f' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<int> { public: enum { value = CV_32S, fmt=(int)'i' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<schar> { public: enum { value = CV_8S, fmt=(int)'c' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<short> { public: enum { value = CV_16S, fmt=(int)'s' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<uchar> { public: enum { value = CV_8U, fmt=(int)'u' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<> class DataDepth<ushort> { public: enum { value = CV_16U, fmt=(int)'w' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS DataDepth { public: enum { value = -1, fmt=(int)'\\0' }; };$/;"	c	namespace:cv
DataDepth	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataDepth<_Tp*> { public: enum { value = CV_USRTYPE1, fmt=(int)'r' }; };$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<Range>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<bool>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<double>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<float>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<int>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<schar>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<short>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<uchar>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<> class DataType<ushort>$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp, int cn> class DataType<Vec<_Tp, cn> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<Complex<_Tp> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<Point3_<_Tp> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<Point_<_Tp> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<Rect_<_Tp> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<Scalar_<_Tp> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<Size_<_Tp> >$/;"	c	namespace:cv
DataType	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataType<std::complex<_Tp> >$/;"	c	namespace:cv
DecisionTree	opencv/include/ml.h	/^typedef CvDTree DecisionTree;$/;"	t	namespace:cv
DelBlob	opencv/include/cvvidsurv.hpp	/^    virtual void DelBlob(int BlobIndex)$/;"	f	class:CvBlobSeq
DelBlobByID	opencv/include/cvvidsurv.hpp	/^    virtual void    DelBlobByID(int BlobID){DelBlob(GetBlobIndexByID(BlobID));};$/;"	f	class:CvBlobTracker
DelBlobByID	opencv/include/cvvidsurv.hpp	/^    virtual void DelBlobByID(int BlobID)$/;"	f	class:CvBlobSeq
DelBlobTrack	opencv/include/cvvidsurv.hpp	/^    virtual void DelBlobTrack(int TrackIndex)$/;"	f	class:CvBlobTrackSeq
DelBlobTrackByID	opencv/include/cvvidsurv.hpp	/^    virtual void DelBlobTrackByID(int TrackID)$/;"	f	class:CvBlobTrackSeq
DelParam	opencv/include/cvvidsurv.hpp	/^    void DelParam(const char* name)$/;"	f	class:CvVSModule
Depth	opencv/include/cvwimage.h	/^inline int WImage<double>::Depth() const {return IPL_DEPTH_64F; }$/;"	f	class:cv::WImage
Depth	opencv/include/cvwimage.h	/^inline int WImage<float>::Depth() const {return IPL_DEPTH_32F; }$/;"	f	class:cv::WImage
Depth	opencv/include/cvwimage.h	/^inline int WImage<int>::Depth() const {return IPL_DEPTH_32S; }$/;"	f	class:cv::WImage
Depth	opencv/include/cvwimage.h	/^inline int WImage<short>::Depth() const {return IPL_DEPTH_16S; }$/;"	f	class:cv::WImage
Depth	opencv/include/cvwimage.h	/^inline int WImage<signed char>::Depth() const {return IPL_DEPTH_8S; }$/;"	f	class:cv::WImage
Depth	opencv/include/cvwimage.h	/^inline int WImage<uchar>::Depth() const {return IPL_DEPTH_8U; }$/;"	f	class:cv::WImage
Depth	opencv/include/cvwimage.h	/^inline int WImage<ushort>::Depth() const {return IPL_DEPTH_16U; }$/;"	f	class:cv::WImage
Detect	KeyBoard.cpp	/^void Detect(IplImage *out,IplImage *in,mKernel func = dxyOne)$/;"	f
Detect	detect.cpp	/^void Detect(IplImage *out,IplImage *in,mKernel func  DEFAULT_ARG(dxyOne))$/;"	f	namespace:dmFrameSimple
Detect	opencv/include/cvvidsurv.hpp	/^    void Detect( const CvArr* \/*img*\/, \/* out *\/ CvBlobSeq* \/*detected_blob_seq*\/ = 0 ) {};$/;"	f	class:CvObjectDetector
Disp	vascript/ccg/ccg.h	/^}Disp;$/;"	t	namespace:CCG	typeref:union:CCG::__anon160
DoAlpha	Kernel.hxx	/^void DoAlpha( char *dataOut, char *dataIn1, char* dataIn2,int width=gWidth, int height=gHeight,int step= gBytesinLine,int sLimit=0)$/;"	f	namespace:dmFrameSimple
DoAlpha	cvKernel.h	/^void DoAlpha(IplImage *image1, IplImage* image2, IplImage *imageOut)$/;"	f	namespace:dmFrameSimple
DoFilter	Kernel.hxx	/^void DoFilter(char *dataOut, char *dataIn, int width=gWidth,int height=gHeight,int step= gBytesinLine,int* KernelArray=globalFK,int mrows=3,int ncols=3 )$/;"	f	namespace:dmFrameSimple
DoFilter	cvKernel.h	/^void DoFilter(IplImage *image1, IplImage* image2,int* KernelArray=globalFK,int mrows=3,int ncols=3 )$/;"	f	namespace:dmFrameSimple
DoPixels	Kernel.hxx	/^void DoPixels(char *dataOut, char *dataIn,int width=gWidth,int height=gHeight,int step= gBytesinLine,int sLimit=0)$/;"	f	namespace:dmFrameSimple
DoPixels	cvKernel.h	/^void DoPixels(IplImage *image1, IplImage* image2,int sLimit=0)$/;"	f	namespace:dmFrameSimple
Double	opencv/include/cvvidsurv.hpp	/^    double              Double;$/;"	m	struct:CvDefParam
DynamMatr	opencv/include/cvtypes.h	/^    float* DynamMatr;           \/* =transition_matrix->data.fl *\/$/;"	m	struct:CvKalman
DynamMatr	opencv/include/cvtypes.h	/^    float* DynamMatr;       \/* Matrix of the linear Dynamics system  *\/$/;"	m	struct:CvConDensation
ECHO	vascript/release/vaslexer.cpp	733;"	d	file:
ELLIPSE	opencv/include/cvvidsurv.hpp	/^    enum {RECT, ELLIPSE} shape;$/;"	e	enum:CvDrawShape::__anon42
EMPTY	opencv/include/cxcore.hpp	/^        FLOW=8, USER=16, EMPTY=32, NAMED=64 };$/;"	e	enum:cv::FileNode::__anon104
EMParams	opencv/include/ml.h	/^typedef CvEMParams EMParams;$/;"	t	namespace:cv
EOB_ACT_CONTINUE_SCAN	vascript/release/vaslexer.cpp	179;"	d	file:
EOB_ACT_END_OF_FILE	vascript/release/vaslexer.cpp	180;"	d	file:
EOB_ACT_LAST_MATCH	vascript/release/vaslexer.cpp	181;"	d	file:
EPS	opencv/include/cxcore.hpp	/^    enum { COUNT=1, MAX_ITER=COUNT, EPS=2 };$/;"	e	enum:cv::TermCriteria::__anon96
EPS_SVR	opencv/include/ml.h	/^    enum { C_SVC=100, NU_SVC=101, ONE_CLASS=102, EPS_SVR=103, NU_SVR=104 };$/;"	e	enum:CvSVM::__anon45
EQ	vascript/ccg/ccg.cpp	76;"	d	file:
EQ10	vascript/ccg/ccg.cpp	92;"	d	file:
EQ2	vascript/ccg/ccg.cpp	77;"	d	file:
EQ4	vascript/ccg/ccg.cpp	78;"	d	file:
EQ6	vascript/ccg/ccg.cpp	80;"	d	file:
EQ7	vascript/ccg/ccg.cpp	83;"	d	file:
EQ8	vascript/ccg/ccg.cpp	87;"	d	file:
ERTree	opencv/include/ml.h	/^typedef CvForestERTree ERTree;$/;"	t	namespace:cv
ERTreeTRainData	opencv/include/ml.h	/^typedef CvERTreeTrainData ERTreeTRainData;$/;"	t	namespace:cv
ERTrees	opencv/include/ml.h	/^typedef CvERTrees ERTrees;$/;"	t	namespace:cv
EUCLIDEAN	opencv/include/cxflann.h	/^	EUCLIDEAN = 1,$/;"	e	enum:cv::flann::flann_distance_t
EXECUTABLE	Makefile	/^EXECUTABLE= vacg.default.exe$/;"	m
EXIT	opencv/include/cxerror.h	186;"	d
EmptyMeshException	opencv/include/cvaux.hpp	/^    struct EmptyMeshException {};$/;"	s	class:cv::Mesh3D
Exception	opencv/include/cxcore.hpp	/^    Exception() { code = 0; line = 0; }$/;"	f	class:cv::Exception
Exception	opencv/include/cxcore.hpp	/^    Exception(const Exception& exc)$/;"	f	class:cv::Exception
Exception	opencv/include/cxcore.hpp	/^    Exception(int _code, const string& _err, const string& _func, const string& _file, int _line)$/;"	f	class:cv::Exception
Exception	opencv/include/cxcore.hpp	/^class CV_EXPORTS Exception$/;"	c	namespace:cv
ExpectationMaximization	opencv/include/ml.h	/^typedef CvEM ExpectationMaximization;$/;"	t	namespace:cv
F32	vascript/ccg/opcodeDes.h	/^typedef float F32;$/;"	t	namespace:CCG
F64	vascript/ccg/opcodeDes.h	/^typedef double F64;$/;"	t	namespace:CCG
FGTrainFrames	opencv/include/cvvidsurv.hpp	/^    int                     FGTrainFrames; \/* Number of frames needed for FG (foreground) detector to train.        *\/$/;"	m	struct:CvBlobTrackerAutoParam1
FILTER_ROBERT	vascript/vacg.h	/^enum{FILTER_SOBEL=0, FILTER_ROBERT=1};$/;"	e	enum:__anon121
FILTER_SOBEL	vascript/vacg.h	/^enum{FILTER_SOBEL=0, FILTER_ROBERT=1};$/;"	e	enum:__anon121
FIND_BIGGEST_OBJECT	opencv/include/cv.hpp	/^           FIND_BIGGEST_OBJECT = CV_HAAR_FIND_BIGGEST_OBJECT,$/;"	e	enum:cv::CascadeClassifier::__anon16
FISH_EYE_PRESET	opencv/include/cv.hpp	/^        FISH_EYE_PRESET=CV_STEREO_BM_FISH_EYE,$/;"	e	enum:cv::StereoBM::__anon21
FLEXINT_H	vascript/release/vaslexer.cpp	34;"	d	file:
FLEX_BETA	vascript/release/vaslexer.cpp	14;"	d	file:
FLEX_SCANNER	vascript/release/vaslexer.cpp	9;"	d	file:
FLOAT	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
FLOODFILL_FIXED_RANGE	opencv/include/cv.hpp	/^enum { FLOODFILL_FIXED_RANGE = 1 << 16,$/;"	e	enum:cv::__anon10
FLOODFILL_MASK_ONLY	opencv/include/cv.hpp	/^       FLOODFILL_MASK_ONLY = 1 << 17 };$/;"	e	enum:cv::__anon10
FLOW	opencv/include/cxcore.hpp	/^        FLOW=8, USER=16, EMPTY=32, NAMED=64 };$/;"	e	enum:cv::FileNode::__anon104
FM_7POINT	opencv/include/cv.hpp	/^    FM_7POINT = CV_FM_7POINT,$/;"	e	enum:cv::__anon20
FM_8POINT	opencv/include/cv.hpp	/^    FM_8POINT = CV_FM_8POINT,$/;"	e	enum:cv::__anon20
FM_LMEDS	opencv/include/cv.hpp	/^    FM_LMEDS = CV_FM_LMEDS,$/;"	e	enum:cv::__anon20
FM_RANSAC	opencv/include/cv.hpp	/^    FM_RANSAC = CV_FM_RANSAC$/;"	e	enum:cv::__anon20
FONT_HERSHEY_COMPLEX	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_COMPLEX = 3,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_COMPLEX_SMALL	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_COMPLEX_SMALL = 5,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_DUPLEX	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_DUPLEX = 2,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_PLAIN	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_PLAIN = 1,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_SCRIPT_COMPLEX	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_SCRIPT_COMPLEX = 7,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_SCRIPT_SIMPLEX	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_SCRIPT_SIMPLEX = 6,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_SIMPLEX	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_SIMPLEX = 0,$/;"	e	enum:cv::__anon99
FONT_HERSHEY_TRIPLEX	opencv/include/cxcore.hpp	/^    FONT_HERSHEY_TRIPLEX = 4,$/;"	e	enum:cv::__anon99
FONT_ITALIC	opencv/include/cxcore.hpp	/^    FONT_ITALIC = 16$/;"	e	enum:cv::__anon99
FULL_UV	opencv/include/cxcore.hpp	/^    enum { MODIFY_A=1, NO_UV=2, FULL_UV=4 };$/;"	e	enum:cv::SVD::__anon97
Fbd	opencv/include/cvaux.h	/^    IplImage*              Fbd;$/;"	m	struct:CvFGDStatModel
Feature	opencv/include/cvaux.hpp	/^        Feature() : x1(0), y1(0), x2(0), y2(0) {}$/;"	f	struct:cv::FernClassifier::Feature
Feature	opencv/include/cvaux.hpp	/^        Feature(int _x1, int _y1, int _x2, int _y2)$/;"	f	struct:cv::FernClassifier::Feature
Feature	opencv/include/cvaux.hpp	/^    struct Feature$/;"	s	class:cv::FernClassifier
FeatureEvaluator	opencv/include/cv.hpp	/^class CV_EXPORTS FeatureEvaluator$/;"	c	namespace:cv
FernClassifier	opencv/include/cvaux.hpp	/^class CV_EXPORTS FernClassifier$/;"	c	namespace:cv
FileNode	opencv/include/cxcore.hpp	/^class CV_EXPORTS FileNode$/;"	c	namespace:cv
FileNode	opencv/include/cxcore.hpp	/^class CV_EXPORTS FileNode;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
FileNode	opencv/include/cxoperations.hpp	/^inline FileNode::FileNode() : fs(0), node(0) {}$/;"	f	class:cv::FileNode
FileNode	opencv/include/cxoperations.hpp	/^inline FileNode::FileNode(const CvFileStorage* _fs, const CvFileNode* _node)$/;"	f	class:cv::FileNode
FileNode	opencv/include/cxoperations.hpp	/^inline FileNode::FileNode(const FileNode& _node) : fs(_node.fs), node(_node.node) {}$/;"	f	class:cv::FileNode
FileNodeIterator	opencv/include/cxcore.hpp	/^class CV_EXPORTS FileNodeIterator$/;"	c	namespace:cv
FileNodeIterator	opencv/include/cxcore.hpp	/^class CV_EXPORTS FileNodeIterator;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
FileStorage	opencv/include/cxcore.hpp	/^class CV_EXPORTS FileStorage$/;"	c	namespace:cv
Filter	KeyBoard.cpp	/^void Filter(IplImage *out,IplImage *in,fKernel func = fandFilter)$/;"	f
Filter	detect.cpp	/^void Filter(IplImage *out,IplImage *in,fKernel func DEFAULT_ARG(fandFilter))$/;"	f	namespace:dmFrameSimple
FilterEngine	opencv/include/cv.hpp	/^class CV_EXPORTS FilterEngine$/;"	c	namespace:cv
FlagValues	vascript/ccg/opcodeDes.h	/^        unsigned int FlagValues;$/;"	m	class:CCG::OpInfo
FlexLexer	vascript/flexbison/flexlexer.h	/^class FlexLexer {$/;"	c
Float	opencv/include/cvvidsurv.hpp	/^    float               Float;$/;"	m	struct:CvDefParam
FlowGraph	vascript/graph.hxx	/^	FlowGraph(){init();VASMSG(log_create,"create FlowGraph\\n");}$/;"	f	class:FlowGraph
FlowGraph	vascript/graph.hxx	/^class FlowGraph$/;"	c
ForestTree	opencv/include/ml.h	/^typedef CvForestTree ForestTree;$/;"	t	namespace:cv
FreeParam	opencv/include/cvvidsurv.hpp	/^    void    FreeParam(CvDefParam** pp)$/;"	f	class:CvVSModule
FreiChen	transforKernel.cpp	/^void FreiChen(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
FreiChen_symblinfo	vascript/symbol.h	112;"	d
Ftd	opencv/include/cvaux.h	/^    IplImage*              Ftd;$/;"	m	struct:CvFGDStatModel
Function	vascript/graph.hxx	/^    Function(char* fn):m_fn(fn){}$/;"	f	class:Function
Function	vascript/graph.hxx	/^class Function:public FlowGraph$/;"	c
FunctionList	vascript/graph.hxx	/^    FunctionList(){ m_functions = new std::vector<Function*>();}$/;"	f	class:FunctionList
FunctionList	vascript/graph.hxx	/^class FunctionList$/;"	c
FuzzyResizer	opencv/include/cvaux.hpp	/^	class FuzzyResizer$/;"	c	class:CvFuzzyMeanShiftTracker
G	Kernel.h	/^    unsigned char G;$/;"	m	struct:dmFrameSimple::__anon164
G	bmp.h	/^	unsigned char G; $/;"	m	struct:__anon114
G	bmp.h	/^    u8 G;\/\/$/;"	m	struct:tagRGBQUAD
G	opencv/include/ml.h	/^    double* G;$/;"	m	class:CvSVMSolver
GAMMA	opencv/include/ml.h	/^    enum { C=0, GAMMA=1, P=2, NU=3, COEF=4, DEGREE=5 };$/;"	e	enum:CvSVM::__anon47
GAUSSIAN	opencv/include/ml.h	/^    enum { IDENTITY = 0, SIGMOID_SYM = 1, GAUSSIAN = 2 };$/;"	e	enum:CvANN_MLP::__anon55
GEMM_1_T	opencv/include/cxcore.hpp	/^enum { GEMM_1_T=1, GEMM_2_T=2, GEMM_3_T=4 };$/;"	e	enum:cv::__anon92
GEMM_2_T	opencv/include/cxcore.hpp	/^enum { GEMM_1_T=1, GEMM_2_T=2, GEMM_3_T=4 };$/;"	e	enum:cv::__anon92
GEMM_3_T	opencv/include/cxcore.hpp	/^enum { GEMM_1_T=1, GEMM_2_T=2, GEMM_3_T=4 };$/;"	e	enum:cv::__anon92
GENTLE	opencv/include/ml.h	/^    enum { DISCRETE=0, REAL=1, LOGIT=2, GENTLE=3 };$/;"	e	enum:CvBoost::__anon52
GET_ONE_INSTR	vascript/vacg.h	121;"	d
GET_OPINFO	vascript/ccg/ccg.cpp	307;"	d	file:
GET_OPINFO1	vascript/ccg/ccg.cpp	300;"	d	file:
GET_OPINFORM	vascript/ccg/ccg.cpp	341;"	d	file:
GINI	opencv/include/ml.h	/^    enum { DEFAULT=0, GINI=1, MISCLASS=3, SQERR=4 };$/;"	e	enum:CvBoost::__anon53
GPR	vascript/ccg/ccg.h	/^}GPR;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon145
GPR	vascript/ccg/ccg.h	409;"	d
GPRB	vascript/ccg/ccg.h	/^} GPRB;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon141
GPRE	vascript/ccg/ccg.h	/^} GPRE;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon143
GPRR	vascript/ccg/ccg.h	/^} GPRR;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon144
GPRW	vascript/ccg/ccg.h	/^} GPRW;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon142
GPR_c_name	vascript/ccg/ccg.h	/^static const char* GPR_c_name[8]={ "al", "cl", "dl", "bl", "ah", "ch", "dh", "bh" };$/;"	m	namespace:CCG
GPR_e_name	vascript/ccg/ccg.h	/^static const char* GPR_e_name[8]={"eax", "ecx","edx","ebx","esp","ebp","esi","edi"};$/;"	m	namespace:CCG
GPR_r_name	vascript/ccg/ccg.h	/^static const char* GPR_r_name[16]={"rax", "rcx","rdx","rbx","rsp","rbp","rsi","rdi","r8", "r9", "r10", "r11","r12", "r13","r14", "r15" };$/;"	m	namespace:CCG
GPR_w_name	vascript/ccg/ccg.h	/^static const char* GPR_w_name[8]={ "ax", "cx", "dx", "bx", "sp", "bp", "si", "di" };$/;"	m	namespace:CCG
GRAPH_RECURSIVE	vascript/graph.cpp	96;"	d	file:
GSD_HUE_LT	opencv/include/cvaux.hpp	/^		GSD_HUE_LT = 3,$/;"	e	enum:CvAdaptiveSkinDetector::__anon23
GSD_HUE_UT	opencv/include/cvaux.hpp	/^		GSD_HUE_UT = 33,$/;"	e	enum:CvAdaptiveSkinDetector::__anon23
GSD_INTENSITY_LT	opencv/include/cvaux.hpp	/^		GSD_INTENSITY_LT = 15,$/;"	e	enum:CvAdaptiveSkinDetector::__anon23
GSD_INTENSITY_UT	opencv/include/cvaux.hpp	/^		GSD_INTENSITY_UT = 250$/;"	e	enum:CvAdaptiveSkinDetector::__anon23
GetBlob	opencv/include/cvvidsurv.hpp	/^    virtual CvBlob* GetBlob(int BlobIndex)$/;"	f	class:CvBlobSeq
GetBlobByID	opencv/include/cvvidsurv.hpp	/^    virtual CvBlob* GetBlobByID(int BlobID)$/;"	f	class:CvBlobSeq
GetBlobByID	opencv/include/cvvidsurv.hpp	/^    virtual CvBlob* GetBlobByID(int BlobID)$/;"	f	class:CvBlobTrackPostProc
GetBlobByID	opencv/include/cvvidsurv.hpp	/^    virtual CvBlob* GetBlobByID(int BlobID){return GetBlob(GetBlobIndexByID(BlobID));};$/;"	f	class:CvBlobTracker
GetBlobHyp	opencv/include/cvvidsurv.hpp	/^    virtual CvBlob* GetBlobHyp(int BlobIndex, int \/*hypothesis*\/){return GetBlob(BlobIndex);};$/;"	f	class:CvBlobTracker
GetBlobHypNum	opencv/include/cvvidsurv.hpp	/^    virtual int     GetBlobHypNum(int \/*BlobIdx*\/){return 1;};$/;"	f	class:CvBlobTracker
GetBlobIndexByID	opencv/include/cvvidsurv.hpp	/^    virtual int     GetBlobIndexByID(int BlobID)$/;"	f	class:CvBlobTracker
GetBlobNum	opencv/include/cvvidsurv.hpp	/^    virtual int GetBlobNum()$/;"	f	class:CvBlobSeq
GetBlobTrack	opencv/include/cvvidsurv.hpp	/^    virtual CvBlobTrack* GetBlobTrack(int TrackIndex)$/;"	f	class:CvBlobTrackSeq
GetBlobTrackByID	opencv/include/cvvidsurv.hpp	/^    virtual CvBlobTrack* GetBlobTrackByID(int TrackID)$/;"	f	class:CvBlobTrackSeq
GetBlobTrackNum	opencv/include/cvvidsurv.hpp	/^    virtual int GetBlobTrackNum()$/;"	f	class:CvBlobTrackSeq
GetCameraCount	opencv/include/cvaux.h	/^    int GetCameraCount() const { return cameraCount; }$/;"	f	class:CvCalibFilter
GetConfidence	opencv/include/cvvidsurv.hpp	/^    virtual double  GetConfidence(int \/*BlobIndex*\/, CvBlob* \/*pBlob*\/, IplImage* \/*pImg*\/, IplImage* \/*pImgFG*\/ = NULL)$/;"	f	class:CvBlobTracker
GetConfidence	opencv/include/cvvidsurv.hpp	/^    virtual double GetConfidence(CvBlob* \/*pBlob*\/, IplImage* \/*pImg*\/,$/;"	f	class:CvBlobTrackerOne
GetConfidenceList	opencv/include/cvvidsurv.hpp	/^    virtual double GetConfidenceList(CvBlobSeq* pBlobList, IplImage* pImg, IplImage* pImgFG = NULL)$/;"	f	class:CvBlobTracker
GetFGMask	opencv/include/cvvidsurv.hpp	/^    virtual IplImage*   GetFGMask(){return NULL;};$/;"	f	class:CvBlobTrackerAuto
GetFVVar	opencv/include/cvvidsurv.hpp	/^    virtual float*  GetFVVar(){return NULL;}; \/* Returns pointer to array of variation of values of FV, if returns 0 then FVVar does not exist. *\/$/;"	f	class:CvBlobTrackFVGen
GetImage	opencv/include/cvvidsurv.hpp	/^    IplImage* GetImage() { return m_image; }$/;"	f	class:CvImageDrawer
GetImage	opencv/include/highgui.h	/^    IplImage* GetImage() { return m_img; };$/;"	f	class:CvvImage
GetInputPatchSize	opencv/include/cvaux.hpp	/^    Size GetInputPatchSize() const$/;"	f	class:cv::OneWayDescriptor
GetLabeledFeatures	opencv/include/cvaux.hpp	/^    const vector<KeyPoint>& GetLabeledFeatures() const {return m_train_features;};$/;"	f	class:cv::OneWayDescriptorObject
GetLabeledFeatures	opencv/include/cvaux.hpp	/^    vector<KeyPoint>& GetLabeledFeatures() {return m_train_features;};$/;"	f	class:cv::OneWayDescriptorObject
GetMaxBorderSize	opencv/include/cvvidsurv.hpp	/^    int GetMaxBorderSize() const { return 0; }$/;"	f	class:CvObjectDetector
GetMinWindowSize	opencv/include/cvvidsurv.hpp	/^    CvSize GetMinWindowSize() const { return cvSize(0,0); }$/;"	f	class:CvObjectDetector
GetModuleName	opencv/include/cvvidsurv.hpp	/^    char*   GetModuleName()$/;"	f	class:CvVSModule
GetNickName	opencv/include/cvvidsurv.hpp	/^    const char* GetNickName()$/;"	f	class:CvVSModule
GetOpInfo	vascript/ccg/ccg.cpp	/^OpInfo* GetOpInfo(MN x, OPerKind dst)$/;"	f	namespace:CCG
GetOpInfo	vascript/ccg/ccg.cpp	/^OpInfo* GetOpInfo(MN x, OPerKind dst, OPerKind src1 )$/;"	f	namespace:CCG
GetParam	opencv/include/cvvidsurv.hpp	/^    double GetParam(const char* name)$/;"	f	class:CvVSModule
GetParamComment	opencv/include/cvvidsurv.hpp	/^    const char* GetParamComment(const char* name)$/;"	f	class:CvVSModule
GetParamName	opencv/include/cvvidsurv.hpp	/^    const char* GetParamName(int index)$/;"	f	class:CvVSModule
GetParamPtr	opencv/include/cvvidsurv.hpp	/^    CvDefParam* GetParamPtr(const char* name)$/;"	f	class:CvVSModule
GetParamPtr	opencv/include/cvvidsurv.hpp	/^    CvDefParam* GetParamPtr(int index)$/;"	f	class:CvVSModule
GetParamStr	opencv/include/cvvidsurv.hpp	/^    const char* GetParamStr(const char* name)$/;"	f	class:CvVSModule
GetPatchSize	opencv/include/cvaux.hpp	/^    Size GetPatchSize() const {return m_patch_size;};$/;"	f	class:cv::OneWayDescriptorBase
GetPatchSize	opencv/include/cvaux.hpp	/^    Size GetPatchSize() const$/;"	f	class:cv::OneWayDescriptor
GetPoseCount	opencv/include/cvaux.hpp	/^    int GetPoseCount() const {return m_pose_count;};$/;"	f	class:cv::OneWayDescriptorBase
GetPyrLevels	opencv/include/cvaux.hpp	/^    int GetPyrLevels() const {return m_pyr_levels;};$/;"	f	class:cv::OneWayDescriptorBase
GetRow	opencv/include/ml.h	/^    typedef float* (CvSVMSolver::*GetRow)( int i, float* row, float* dst, bool existed );$/;"	t	class:CvSVMSolver
GetStateDesc	opencv/include/cvvidsurv.hpp	/^    virtual const char*   GetStateDesc(int \/*BlobID*\/){return NULL;};$/;"	f	class:CvBlobTrackAnalysis
GetTrainFeatures	opencv/include/cvaux.hpp	/^    const vector<KeyPoint>& GetTrainFeatures() const {return m_train_features;};$/;"	f	class:cv::OneWayDescriptorObject
GetTypeName	opencv/include/cvvidsurv.hpp	/^    const char*   GetTypeName()$/;"	f	class:CvVSModule
GimpleAssign	vascript/gimple.hxx	/^        GimpleAssign(SymbolInfo lval, SymbolInfo rval):GimpleStatement('=', lval, rval){}$/;"	f	class:GimpleAssign
GimpleAssign	vascript/gimple.hxx	/^class GimpleAssign:public GimpleStatement$/;"	c
GimpleBase	vascript/gimple.h	/^class GimpleBase$/;"	c
GimpleBase	vascript/gimple.hxx	/^        GimpleBase(OpCode op, SymbolInfo ret, SymbolInfo src0)$/;"	f	class:GimpleBase
GimpleBase	vascript/gimple.hxx	/^        GimpleBase(OpCode op, SymbolInfo ret, SymbolInfo src0, SymbolInfo src1)$/;"	f	class:GimpleBase
GimpleBase	vascript/gimple.hxx	/^class GimpleBase:public GimpleNode $/;"	c
GimpleGraphNode	vascript/gimple.hxx	/^        GimpleGraphNode(FlowGraph* graph):m_Graph(graph){}$/;"	f	class:GimpleGraphNode
GimpleGraphNode	vascript/gimple.hxx	/^class GimpleGraphNode:public GimpleNode$/;"	c
GimpleNode	vascript/gimple.hxx	/^        GimpleNode(){}$/;"	f	class:GimpleNode
GimpleNode	vascript/gimple.hxx	/^class GimpleNode:public Node $/;"	c
GimpleStatement	vascript/gimple.hxx	/^        GimpleStatement(OpCode op, SymbolInfo ret, SymbolInfo src0 ):GimpleBase(op,ret,src0){}$/;"	f	class:GimpleStatement
GimpleStatement	vascript/gimple.hxx	/^        GimpleStatement(OpCode op, SymbolInfo ret, SymbolInfo src0, SymbolInfo src1):GimpleBase(op,ret,src0,src1){}$/;"	f	class:GimpleStatement
GimpleStatement	vascript/gimple.hxx	/^class GimpleStatement:public GimpleBase$/;"	c
GimpleStatementsList	vascript/gimple.hxx	/^typedef std::vector<GimpleStatement*> GimpleStatementsList;$/;"	t
Graph	opencv/include/cvaux.h	/^CVAPI(int) cvReleaseLinearContorModelStorage(CvGraph** Graph);$/;"	v
GreaterEq	opencv/include/cxoperations.hpp	/^template<typename _Tp> class CV_EXPORTS GreaterEq$/;"	c	namespace:cv
GreaterEqIdx	opencv/include/cxoperations.hpp	/^    GreaterEqIdx( const _Tp* _arr ) : arr(_arr) {}$/;"	f	class:cv::GreaterEqIdx
GreaterEqIdx	opencv/include/cxoperations.hpp	/^template<typename _Tp> class CV_EXPORTS GreaterEqIdx$/;"	c	namespace:cv
HAAR	opencv/include/cv.hpp	/^    enum { HAAR = 0, LBP = 1 };$/;"	e	enum:cv::FeatureEvaluator::__anon14
HASH_BIT	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=CV_MAX_DIM, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon101
HASH_SCALE	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=CV_MAX_DIM, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon101
HAVE_IPL	opencv/include/cv.h	47;"	d
HAVE_IPL	opencv/include/cxcore.h	48;"	d
HAVE_IPL	opencv/include/cxtypes.h	107;"	d
HG_AUTOSIZE	opencv/include/highgui.h	370;"	d
HIGHGUI_BACKWARD_COMPATIBILITY	opencv/include/highgui.h	347;"	d
HOGDescriptor	opencv/include/cvaux.hpp	/^    HOGDescriptor() : winSize(64,128), blockSize(16,16), blockStride(8,8),$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv/include/cvaux.hpp	/^    HOGDescriptor(Size _winSize, Size _blockSize, Size _blockStride,$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv/include/cvaux.hpp	/^    HOGDescriptor(const String& filename)$/;"	f	struct:cv::HOGDescriptor
HOGDescriptor	opencv/include/cvaux.hpp	/^struct CV_EXPORTS HOGDescriptor$/;"	s	namespace:cv
Hdr	opencv/include/cxcore.hpp	/^    struct CV_EXPORTS Hdr$/;"	s	class:cv::SparseMat
Hdr	opencv/include/cxoperations.hpp	/^        Hdr() : data(0), datastart(0), refcount(0), size(0), capacity(0) {};$/;"	f	struct:cv::Vector::Hdr
Hdr	opencv/include/cxoperations.hpp	/^    struct CV_EXPORTS Hdr$/;"	s	class:cv::Vector
Height	opencv/include/cvwimage.h	/^    int Height() const {return image_->height; }$/;"	f	class:cv::WImage
Height	opencv/include/highgui.h	/^    int Height() { return !m_img ? 0 : !m_img->roi ? m_img->height : m_img->roi->height;};$/;"	f	class:CvvImage
HistType	opencv/include/cvvidsurv.hpp	/^    int     HistType; \/* see Prob.h *\/$/;"	m	struct:CvBlobTrackerParamLH
Histogram	opencv/include/cvaux.hpp	/^	class CV_EXPORTS Histogram$/;"	c	class:CvAdaptiveSkinDetector
HistogramSize	opencv/include/cvaux.hpp	/^			HistogramSize = (GSD_HUE_UT - GSD_HUE_LT + 1)$/;"	e	enum:CvAdaptiveSkinDetector::Histogram::__anon24
I16	vascript/ccg/opcodeDes.h	/^typedef short I16;$/;"	t	namespace:CCG
I32	vascript/ccg/opcodeDes.h	/^typedef int I32;$/;"	t	namespace:CCG
I64	vascript/ccg/opcodeDes.h	/^typedef long long I64;$/;"	t	namespace:CCG
I8	vascript/ccg/opcodeDes.h	/^typedef char I8;$/;"	t	namespace:CCG
ID	opencv/include/cvvidsurv.hpp	/^    int     ID;  \/* blob ID         *\/$/;"	m	struct:CvBlob
ID	opencv/include/cxtypes.h	/^    int  ID;                \/* version (=0)*\/$/;"	m	struct:_IplImage
IDENTITY	opencv/include/ml.h	/^    enum { IDENTITY = 0, SIGMOID_SYM = 1, GAUSSIAN = 2 };$/;"	e	enum:CvANN_MLP::__anon55
IN	vascript/ccg/opcodeDes.h	208;"	d
IN	vascript/ccg/opcodeDes.h	8;"	d
INITIAL	vascript/release/vaslexer.cpp	694;"	d	file:
INPAINT_NS	opencv/include/cv.hpp	/^enum { INPAINT_NS=CV_INPAINT_NS, INPAINT_TELEA=CV_INPAINT_TELEA };$/;"	e	enum:cv::__anon9
INPAINT_TELEA	opencv/include/cv.hpp	/^enum { INPAINT_NS=CV_INPAINT_NS, INPAINT_TELEA=CV_INPAINT_TELEA };$/;"	e	enum:cv::__anon9
INSIDE_MAP	opencv/include/cxcore.hpp	/^    enum { UNDEFINED=0, VALUE_EXPECTED=1, NAME_EXPECTED=2, INSIDE_MAP=4 };$/;"	e	enum:cv::FileStorage::__anon103
INT	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
INT16_MAX	vascript/release/vaslexer.cpp	76;"	d	file:
INT16_MIN	vascript/release/vaslexer.cpp	67;"	d	file:
INT32_MAX	vascript/release/vaslexer.cpp	79;"	d	file:
INT32_MIN	vascript/release/vaslexer.cpp	70;"	d	file:
INT8_MAX	vascript/release/vaslexer.cpp	73;"	d	file:
INT8_MIN	vascript/release/vaslexer.cpp	64;"	d	file:
INTER_AREA	opencv/include/cv.hpp	/^enum { INTER_NEAREST=0, INTER_LINEAR=1, INTER_CUBIC=2, INTER_AREA=3,$/;"	e	enum:cv::__anon5
INTER_CUBIC	opencv/include/cv.hpp	/^enum { INTER_NEAREST=0, INTER_LINEAR=1, INTER_CUBIC=2, INTER_AREA=3,$/;"	e	enum:cv::__anon5
INTER_LANCZOS4	opencv/include/cv.hpp	/^       INTER_LANCZOS4=4, INTER_MAX=7, WARP_INVERSE_MAP=16 };$/;"	e	enum:cv::__anon5
INTER_LINEAR	opencv/include/cv.hpp	/^enum { INTER_NEAREST=0, INTER_LINEAR=1, INTER_CUBIC=2, INTER_AREA=3,$/;"	e	enum:cv::__anon5
INTER_MAX	opencv/include/cv.hpp	/^       INTER_LANCZOS4=4, INTER_MAX=7, WARP_INVERSE_MAP=16 };$/;"	e	enum:cv::__anon5
INTER_NEAREST	opencv/include/cv.hpp	/^enum { INTER_NEAREST=0, INTER_LINEAR=1, INTER_CUBIC=2, INTER_AREA=3,$/;"	e	enum:cv::__anon5
IPL_ALIGN_16BYTES	opencv/include/cxtypes.h	371;"	d
IPL_ALIGN_32BYTES	opencv/include/cxtypes.h	372;"	d
IPL_ALIGN_4BYTES	opencv/include/cxtypes.h	369;"	d
IPL_ALIGN_8BYTES	opencv/include/cxtypes.h	370;"	d
IPL_ALIGN_DWORD	opencv/include/cxtypes.h	374;"	d
IPL_ALIGN_QWORD	opencv/include/cxtypes.h	375;"	d
IPL_BORDER_CONSTANT	opencv/include/cxtypes.h	377;"	d
IPL_BORDER_REFLECT	opencv/include/cxtypes.h	379;"	d
IPL_BORDER_REFLECT_101	opencv/include/cxtypes.h	457;"	d
IPL_BORDER_REPLICATE	opencv/include/cxtypes.h	378;"	d
IPL_BORDER_WRAP	opencv/include/cxtypes.h	380;"	d
IPL_DATA_ORDER_PIXEL	opencv/include/cxtypes.h	363;"	d
IPL_DATA_ORDER_PLANE	opencv/include/cxtypes.h	364;"	d
IPL_DEPTH_16S	opencv/include/cxtypes.h	360;"	d
IPL_DEPTH_16U	opencv/include/cxtypes.h	356;"	d
IPL_DEPTH_1U	opencv/include/cxtypes.h	354;"	d
IPL_DEPTH_32F	opencv/include/cxtypes.h	357;"	d
IPL_DEPTH_32S	opencv/include/cxtypes.h	361;"	d
IPL_DEPTH_64F	opencv/include/cxtypes.h	470;"	d
IPL_DEPTH_8S	opencv/include/cxtypes.h	359;"	d
IPL_DEPTH_8U	opencv/include/cxtypes.h	355;"	d
IPL_DEPTH_SIGN	opencv/include/cxtypes.h	352;"	d
IPL_GAUSSIAN_5x5	opencv/include/cvcompat.h	93;"	d
IPL_IMAGE_DATA	opencv/include/cxtypes.h	451;"	d
IPL_IMAGE_HEADER	opencv/include/cxtypes.h	450;"	d
IPL_IMAGE_MAGIC_VAL	opencv/include/cxtypes.h	459;"	d
IPL_IMAGE_ROI	opencv/include/cxtypes.h	452;"	d
IPL_ORIGIN_BL	opencv/include/cxtypes.h	367;"	d
IPL_ORIGIN_TL	opencv/include/cxtypes.h	366;"	d
IPPI_CALL	opencv/include/cxmisc.h	517;"	d
ImageData	opencv/include/cvwimage.h	/^    T* ImageData() { return reinterpret_cast<T*>(image_->imageData); }$/;"	f	class:cv::WImage
ImageData	opencv/include/cvwimage.h	/^    const T* ImageData() const {$/;"	f	class:cv::WImage
Imm	vascript/ccg/ccg.h	/^        Imm(){l = 0;}$/;"	f	class:CCG::Imm
Imm	vascript/ccg/ccg.h	/^        Imm(I64& _ul){ ul = _ul;}$/;"	f	class:CCG::Imm
Imm	vascript/ccg/ccg.h	/^class Imm {$/;"	c	namespace:CCG
Index	opencv/include/cxflann.h	/^class CV_EXPORTS Index {$/;"	c	namespace:cv::flann
Index	vascript/ccg/ccg.h	/^				unsigned int Index:3;$/;"	m	struct:CCG::SIB::__anon156::__anon157
IndexFactory	opencv/include/cxflann.h	/^class CV_EXPORTS IndexFactory$/;"	c	namespace:cv::flann
IndexParams	opencv/include/cxflann.h	/^	IndexParams() {};$/;"	f	struct:cv::flann::IndexParams
IndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS IndexParams : public IndexFactory {$/;"	s	namespace:cv::flann
Instr	vascript/ccg/ccg.h	/^        Instr(){init(); foremt64= true;};$/;"	f	class:CCG::Instr
Instr	vascript/ccg/ccg.h	/^        Instr(ArchType t){ init(); foremt64 = (t == SYS_64);}$/;"	f	class:CCG::Instr
Instr	vascript/ccg/ccg.h	/^class Instr{$/;"	c	namespace:CCG
InstructionCoder	vascript/ccg/ccg.h	/^        InstructionCoder(){}$/;"	f	class:CCG::InstructionCoder
InstructionCoder	vascript/ccg/ccg.h	/^        InstructionCoder(ArchType t):m(t){}$/;"	f	class:CCG::InstructionCoder
InstructionCoder	vascript/ccg/ccg.h	/^class InstructionCoder$/;"	c	namespace:CCG
Int	opencv/include/cvvidsurv.hpp	/^    int                 Int;$/;"	m	struct:CvDefParam
Ipl	opencv/include/cvwimage.h	/^    IplImage* Ipl() {return image_; }$/;"	f	class:cv::WImage
Ipl	opencv/include/cvwimage.h	/^    const IplImage* Ipl() const {return image_; }$/;"	f	class:cv::WImage
IplConvKernel	opencv/include/cxtypes.h	/^IplConvKernel;$/;"	t	typeref:struct:_IplConvKernel
IplConvKernelFP	opencv/include/cxtypes.h	/^IplConvKernelFP;$/;"	t	typeref:struct:_IplConvKernelFP
IplImage	opencv/include/cxtypes.h	/^IplImage;$/;"	t	typeref:struct:_IplImage
IplROI	opencv/include/cxtypes.h	/^IplROI;$/;"	t	typeref:struct:_IplROI
IplTileInfo	opencv/include/cxtypes.h	/^typedef struct _IplTileInfo IplTileInfo;$/;"	t	typeref:struct:_IplTileInfo
Is32System	vascript/ccg/ccg.h	/^inline bool Is32System(){ return  !System64Bits;}    $/;"	f	namespace:CCG
Is64System	vascript/ccg/ccg.h	/^inline bool Is64System(){ return  System64Bits;}    $/;"	f	namespace:CCG
IsCalibrated	opencv/include/cvaux.h	/^    bool IsCalibrated() const { return isCalibrated; }$/;"	f	class:CvCalibFilter
IsModuleName	opencv/include/cvvidsurv.hpp	/^    int     IsModuleName(const char* name)$/;"	f	class:CvVSModule
IsModuleTypeName	opencv/include/cvvidsurv.hpp	/^    int     IsModuleTypeName(const char* name)$/;"	f	class:CvVSModule
IsNull	opencv/include/cvwimage.h	/^    bool IsNull() const {return WImage<T>::image_ == NULL; }$/;"	f	class:cv::WImageBuffer
IsNull	opencv/include/cvwimage.h	/^    bool IsNull() const {return WImage<T>::image_ == NULL; }$/;"	f	class:cv::WImageBufferC
IsParam	opencv/include/cvvidsurv.hpp	/^    int  IsParam(const char* name)$/;"	f	class:CvVSModule
Ithreshold	opencv/include/cv.h	/^    int Ithreshold;$/;"	m	struct:CvStereoGCState
J	opencv/include/cv.hpp	/^    CvMat* J;$/;"	m	class:CvLevMarq
JtErr	opencv/include/cv.hpp	/^    CvMat* JtErr;$/;"	m	class:CvLevMarq
JtJ	opencv/include/cv.hpp	/^    CvMat* JtJ;$/;"	m	class:CvLevMarq
JtJN	opencv/include/cv.hpp	/^    CvMat* JtJN;$/;"	m	class:CvLevMarq
JtJV	opencv/include/cv.hpp	/^    CvMat* JtJV;$/;"	m	class:CvLevMarq
JtJW	opencv/include/cv.hpp	/^    CvMat* JtJW;$/;"	m	class:CvLevMarq
JtJ_diag	opencv/include/cvaux.hpp	/^    CvMat* JtJ_diag; \/\/diagonal of JtJ,  used to backup diagonal elements before augmentation$/;"	m	class:cv::LevMarqSparse
K	opencv/include/cv.h	/^    float K, lambda, lambda1, lambda2;$/;"	m	struct:CvStereoGCState
KA	filterKernel.cpp	2;"	d	file:
KDTREE	opencv/include/cxflann.h	/^	KDTREE = 1,$/;"	e	enum:cv::flann::flann_algorithm_t
KDTree	opencv/include/cxcore.hpp	/^class CV_EXPORTS KDTree$/;"	c	namespace:cv
KDTreeIndexParams	opencv/include/cxflann.h	/^	KDTreeIndexParams(int trees_ = 4) : trees(trees_) {};$/;"	f	struct:cv::flann::KDTreeIndexParams
KDTreeIndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS KDTreeIndexParams : public IndexParams {$/;"	s	namespace:cv::flann
KERNEL_ASYMMETRICAL	opencv/include/cv.hpp	/^enum { KERNEL_GENERAL=0, KERNEL_SYMMETRICAL=1, KERNEL_ASYMMETRICAL=2,$/;"	e	enum:cv::__anon2
KERNEL_GENERAL	opencv/include/cv.hpp	/^enum { KERNEL_GENERAL=0, KERNEL_SYMMETRICAL=1, KERNEL_ASYMMETRICAL=2,$/;"	e	enum:cv::__anon2
KERNEL_INTEGER	opencv/include/cv.hpp	/^       KERNEL_SMOOTH=4, KERNEL_INTEGER=8 };$/;"	e	enum:cv::__anon2
KERNEL_SMOOTH	opencv/include/cv.hpp	/^       KERNEL_SMOOTH=4, KERNEL_INTEGER=8 };$/;"	e	enum:cv::__anon2
KERNEL_SYMMETRICAL	opencv/include/cv.hpp	/^enum { KERNEL_GENERAL=0, KERNEL_SYMMETRICAL=1, KERNEL_ASYMMETRICAL=2,$/;"	e	enum:cv::__anon2
KMEANS	opencv/include/cxflann.h	/^	KMEANS = 2,$/;"	e	enum:cv::flann::flann_algorithm_t
KMEANS_PP_CENTERS	opencv/include/cxcore.hpp	/^enum { KMEANS_RANDOM_CENTERS=0, KMEANS_PP_CENTERS=2, KMEANS_USE_INITIAL_LABELS=1 };$/;"	e	enum:cv::__anon98
KMEANS_RANDOM_CENTERS	opencv/include/cxcore.hpp	/^enum { KMEANS_RANDOM_CENTERS=0, KMEANS_PP_CENTERS=2, KMEANS_USE_INITIAL_LABELS=1 };$/;"	e	enum:cv::__anon98
KMEANS_USE_INITIAL_LABELS	opencv/include/cxcore.hpp	/^enum { KMEANS_RANDOM_CENTERS=0, KMEANS_PP_CENTERS=2, KMEANS_USE_INITIAL_LABELS=1 };$/;"	e	enum:cv::__anon98
KMeansIndexParams	opencv/include/cxflann.h	/^	KMeansIndexParams(int branching_ = 32, int iterations_ = 11,$/;"	f	struct:cv::flann::KMeansIndexParams
KMeansIndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS KMeansIndexParams : public IndexParams {$/;"	s	namespace:cv::flann
KNearest	opencv/include/ml.h	/^typedef CvKNearest KNearest;$/;"	t	namespace:cv
KalmGainMatr	opencv/include/cvtypes.h	/^    float* KalmGainMatr;        \/* =gain->data.fl *\/$/;"	m	struct:CvKalman
KalmanFilter	opencv/include/cv.hpp	/^class CV_EXPORTS KalmanFilter$/;"	c	namespace:cv
KeyPoint	opencv/include/cv.hpp	/^    KeyPoint() : pt(0,0), size(0), angle(-1), response(0), octave(0), class_id(-1) {}$/;"	f	class:cv::KeyPoint
KeyPoint	opencv/include/cv.hpp	/^    KeyPoint(Point2f _pt, float _size, float _angle=-1,$/;"	f	class:cv::KeyPoint
KeyPoint	opencv/include/cv.hpp	/^    KeyPoint(float x, float y, float _size, float _angle=-1,$/;"	f	class:cv::KeyPoint
KeyPoint	opencv/include/cv.hpp	/^class CV_EXPORTS KeyPoint$/;"	c	namespace:cv
L2Hys	opencv/include/cvaux.hpp	/^    enum { L2Hys=0 };$/;"	e	enum:cv::HOGDescriptor::__anon28
L2HysThreshold	opencv/include/cvaux.hpp	/^    double L2HysThreshold;$/;"	m	struct:cv::HOGDescriptor
LBP	opencv/include/cv.hpp	/^    enum { HAAR = 0, LBP = 1 };$/;"	e	enum:cv::FeatureEvaluator::__anon14
LDetector	opencv/include/cvaux.hpp	/^class CV_EXPORTS LDetector$/;"	c	namespace:cv
LIMIT	filterKernel.cpp	3;"	d	file:
LINEAR	opencv/include/cxflann.h	/^	LINEAR = 0,$/;"	e	enum:cv::flann::flann_algorithm_t
LINEAR	opencv/include/ml.h	/^    enum { LINEAR=0, POLY=1, RBF=2, SIGMOID=3 };$/;"	e	enum:CvSVM::__anon46
LMEDS	opencv/include/cv.hpp	/^enum { LMEDS=4, RANSAC=8 };$/;"	e	enum:cv::__anon17
LOGIT	opencv/include/ml.h	/^    enum { DISCRETE=0, REAL=1, LOGIT=2, GENTLE=3 };$/;"	e	enum:CvBoost::__anon52
LOG_ERROR	opencv/include/cxflann.h	/^	LOG_ERROR = 2,$/;"	e	enum:cv::flann::flann_log_level_t
LOG_FATAL	opencv/include/cxflann.h	/^	LOG_FATAL = 1,$/;"	e	enum:cv::flann::flann_log_level_t
LOG_INFO	opencv/include/cxflann.h	/^	LOG_INFO = 4$/;"	e	enum:cv::flann::flann_log_level_t
LOG_NONE	opencv/include/cxflann.h	/^	LOG_NONE = 0,$/;"	e	enum:cv::flann::flann_log_level_t
LOG_WARN	opencv/include/cxflann.h	/^	LOG_WARN = 3,$/;"	e	enum:cv::flann::flann_log_level_t
LapLas	transforKernel.cpp	/^void LapLas(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
LapLas_symblinfo	vascript/symbol.h	111;"	d
Lc	opencv/include/cvaux.h	/^    int    Lc;			\/* Quantized levels per 'color' component. Power of two, typically 32, 64 or 128.				*\/$/;"	m	struct:CvFGDStatModelParams
Lcc	opencv/include/cvaux.h	/^    int    Lcc;			\/* Quantized levels per 'color co-occurrence' component.  Power of two, typically 16, 32 or 64.			*\/$/;"	m	struct:CvFGDStatModelParams
LeftEyeRect	opencv/include/cvaux.h	/^    CvRect LeftEyeRect;$/;"	m	struct:CvFace
LessThan	opencv/include/cxoperations.hpp	/^template<typename _Tp> class CV_EXPORTS LessThan$/;"	c	namespace:cv
LessThanIdx	opencv/include/cxoperations.hpp	/^    LessThanIdx( const _Tp* _arr ) : arr(_arr) {}$/;"	f	class:cv::LessThanIdx
LessThanIdx	opencv/include/cxoperations.hpp	/^template<typename _Tp> class CV_EXPORTS LessThanIdx$/;"	c	namespace:cv
LevMarqSparse	opencv/include/cvaux.hpp	/^class CV_EXPORTS LevMarqSparse$/;"	c	namespace:cv
LexerError	vascript/release/vaslexer.cpp	/^void yyFlexLexer::LexerError( yyconst char msg[] )$/;"	f	class:yyFlexLexer
LexerInput	vascript/release/vaslexer.cpp	/^int yyFlexLexer::LexerInput( char* buf, int \/* max_size *\/ )$/;"	f	class:yyFlexLexer
LexerOutput	vascript/release/vaslexer.cpp	/^void yyFlexLexer::LexerOutput( const char* buf, int size )$/;"	f	class:yyFlexLexer
Line	vascript/ccg/parseCoderHtml.cpp	/^char Line[1024*4];$/;"	v
LineIterator	opencv/include/cxcore.hpp	/^class CV_EXPORTS LineIterator$/;"	c	namespace:cv
LinearIndexParams	opencv/include/cxflann.h	/^	LinearIndexParams() {};$/;"	f	struct:cv::flann::LinearIndexParams
LinearIndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS LinearIndexParams : public IndexParams {$/;"	s	namespace:cv::flann
Load	opencv/include/cvvidsurv.hpp	/^    bool Load( const char* \/*detector_file_name*\/ = 0 ) { return false; }$/;"	f	class:CvObjectDetector
Load	opencv/include/cvvidsurv.hpp	/^    virtual void Load(CvFileStorage* fs, CvFileNode* node)$/;"	f	class:CvBlobSeq
LoadRect	opencv/include/highgui.h	/^    virtual bool  LoadRect( const char* filename,$/;"	f	class:CvvImage
LoadState	opencv/include/cvvidsurv.hpp	/^    virtual void LoadState(CvFileStorage*, CvFileNode*){};$/;"	f	class:CvVSModule
MAGIC_MASK	opencv/include/cxcore.hpp	/^enum { MAGIC_MASK=0xFFFF0000, TYPE_MASK=0x00000FFF, DEPTH_MASK=7 };$/;"	e	enum:cv::__anon88
MAGIC_VAL	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=CV_MAX_DIM, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon101
MAGIC_VAL	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FE0000, AUTO_STEP=-1,$/;"	e	enum:cv::MatND::__anon100
MAGIC_VAL	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FF0000, AUTO_STEP=0, CONTINUOUS_FLAG=CV_MAT_CONT_FLAG };$/;"	e	enum:cv::Mat::__anon94
MANHATTAN	opencv/include/cxflann.h	/^	MANHATTAN = 2,$/;"	e	enum:cv::flann::flann_distance_t
MAP	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
MATRIXDEB	vascript/debprintf.h	2;"	d
MAX	opencv/include/cxtypes.h	209;"	d
MAX_CAMERAS	opencv/include/cvaux.h	/^    enum { MAX_CAMERAS = 3 };$/;"	e	enum:CvCalibFilter::__anon111
MAX_DIM	opencv/include/cxcore.hpp	/^        CONTINUOUS_FLAG=CV_MAT_CONT_FLAG, MAX_DIM=CV_MAX_DIM };$/;"	e	enum:cv::MatND::__anon100
MAX_DIM	opencv/include/cxcore.hpp	/^    enum { MAGIC_VAL=0x42FD0000, MAX_DIM=CV_MAX_DIM, HASH_SCALE=0x5bd1e995, HASH_BIT=0x80000000 };$/;"	e	enum:cv::SparseMat::__anon101
MAX_FNAME_LEN	KeyBoard.cpp	3;"	d	file:
MAX_FNAME_LEN	detect.cpp	4;"	d	file:
MAX_FNAME_LEN	dmvideo.cpp	5;"	d	file:
MAX_ITER	opencv/include/cxcore.hpp	/^    enum { COUNT=1, MAX_ITER=COUNT, EPS=2 };$/;"	e	enum:cv::TermCriteria::__anon96
MEDIA_T	bmptest.cpp	11;"	d	file:
MIN	opencv/include/cxtypes.h	205;"	d
MINKOWSKI	opencv/include/cxflann.h	/^	MINKOWSKI = 3$/;"	e	enum:cv::flann::flann_distance_t
MISCLASS	opencv/include/ml.h	/^    enum { DEFAULT=0, GINI=1, MISCLASS=3, SQERR=4 };$/;"	e	enum:CvBoost::__anon53
MN	vascript/ccg/opcodeDes.h	/^}MN;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon129
MNCovariance	opencv/include/cvtypes.h	/^    float* MNCovariance;        \/* =measurement_noise_cov->data.fl *\/$/;"	m	struct:CvKalman
MNname	vascript/ccg/opcodeDes.h	/^class MNname{};$/;"	c	namespace:CCG
MNnames	vascript/ccg/opcodeDes.h	/^static const char* MNnames[]={$/;"	m	namespace:CCG
MODIFY_A	opencv/include/cxcore.hpp	/^    enum { MODIFY_A=1, NO_UV=2, FULL_UV=4 };$/;"	e	enum:cv::SVD::__anon97
MOD_MASK	vascript/ccg/ccg.h	712;"	d
MORPHING_METHOD_ERODE	opencv/include/cvaux.hpp	/^		MORPHING_METHOD_ERODE = 1,$/;"	e	enum:CvAdaptiveSkinDetector::__anon25
MORPHING_METHOD_ERODE_DILATE	opencv/include/cvaux.hpp	/^		MORPHING_METHOD_ERODE_DILATE = 3$/;"	e	enum:CvAdaptiveSkinDetector::__anon25
MORPHING_METHOD_ERODE_ERODE	opencv/include/cvaux.hpp	/^		MORPHING_METHOD_ERODE_ERODE	= 2,$/;"	e	enum:CvAdaptiveSkinDetector::__anon25
MORPHING_METHOD_NONE	opencv/include/cvaux.hpp	/^		MORPHING_METHOD_NONE = 0,$/;"	e	enum:CvAdaptiveSkinDetector::__anon25
MORPH_BLACKHAT	opencv/include/cv.hpp	/^       MORPH_GRADIENT=4, MORPH_TOPHAT=5, MORPH_BLACKHAT=6 };$/;"	e	enum:cv::__anon3
MORPH_CLOSE	opencv/include/cv.hpp	/^enum { MORPH_ERODE=0, MORPH_DILATE=1, MORPH_OPEN=2, MORPH_CLOSE=3,$/;"	e	enum:cv::__anon3
MORPH_CROSS	opencv/include/cv.hpp	/^enum { MORPH_RECT=0, MORPH_CROSS=1, MORPH_ELLIPSE=2 };$/;"	e	enum:cv::__anon4
MORPH_DILATE	opencv/include/cv.hpp	/^enum { MORPH_ERODE=0, MORPH_DILATE=1, MORPH_OPEN=2, MORPH_CLOSE=3,$/;"	e	enum:cv::__anon3
MORPH_ELLIPSE	opencv/include/cv.hpp	/^enum { MORPH_RECT=0, MORPH_CROSS=1, MORPH_ELLIPSE=2 };$/;"	e	enum:cv::__anon4
MORPH_ERODE	opencv/include/cv.hpp	/^enum { MORPH_ERODE=0, MORPH_DILATE=1, MORPH_OPEN=2, MORPH_CLOSE=3,$/;"	e	enum:cv::__anon3
MORPH_GRADIENT	opencv/include/cv.hpp	/^       MORPH_GRADIENT=4, MORPH_TOPHAT=5, MORPH_BLACKHAT=6 };$/;"	e	enum:cv::__anon3
MORPH_OPEN	opencv/include/cv.hpp	/^enum { MORPH_ERODE=0, MORPH_DILATE=1, MORPH_OPEN=2, MORPH_CLOSE=3,$/;"	e	enum:cv::__anon3
MORPH_RECT	opencv/include/cv.hpp	/^enum { MORPH_RECT=0, MORPH_CROSS=1, MORPH_ELLIPSE=2 };$/;"	e	enum:cv::__anon4
MORPH_TOPHAT	opencv/include/cv.hpp	/^       MORPH_GRADIENT=4, MORPH_TOPHAT=5, MORPH_BLACKHAT=6 };$/;"	e	enum:cv::__anon3
MP	opencv/include/cvtypes.h	/^    int MP;                     \/* number of measurement vector dimensions *\/$/;"	m	struct:CvKalman
MP	opencv/include/cvtypes.h	/^    int MP;$/;"	m	struct:CvConDensation
MSER	opencv/include/cv.hpp	/^class CV_EXPORTS MSER : public CvMSERParams$/;"	c	namespace:cv
M_PI	Kernel.h	8;"	d
Mahalonobis	opencv/include/cxcore.hpp	/^static inline double Mahalonobis(const Mat& v1, const Mat& v2, const Mat& icovar)$/;"	f	namespace:cv
Mat	opencv/include/cxcore.hpp	/^class CV_EXPORTS Mat$/;"	c	namespace:cv
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat()$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(Size _size, int _type)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(Size _size, int _type, const Scalar& _s)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(Size _size, int _type, void* _data, size_t _step)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(const CvMat* m, bool copyData)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(const Mat& m)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(const Mat& m, const Range& rowRange, const Range& colRange)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(const Mat& m, const Rect& roi)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(const MatExpr_Base& expr)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(int _rows, int _cols, int _type)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(int _rows, int _cols, int _type, const Scalar& _s)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^inline Mat::Mat(int _rows, int _cols, int _type, void* _data, size_t _step)$/;"	f	class:cv::Mat
Mat	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat::Mat(const vector<_Tp>& vec, bool copyData)$/;"	f	class:cv::Mat
MatCommaInitializer_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS MatCommaInitializer_ :$/;"	c	namespace:cv
MatCommaInitializer_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatCommaInitializer_<_Tp>::MatCommaInitializer_(Mat_<_Tp>* _m) :$/;"	f	class:cv::MatCommaInitializer_
MatConstIterator_	opencv/include/cxcore.hpp	/^class CV_EXPORTS MatConstIterator_$/;"	c	namespace:cv
MatConstIterator_	opencv/include/cxmat.hpp	/^    MatConstIterator_(const MatConstIterator_& it)$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv/include/cxmat.hpp	/^    MatConstIterator_(const Mat_<_Tp>* _m, Point _pt) : m(_m)$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv/include/cxmat.hpp	/^    MatConstIterator_(const Mat_<_Tp>* _m, int _row, int _col) : m(_m)$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp>::MatConstIterator_()$/;"	f	class:cv::MatConstIterator_
MatConstIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp>::MatConstIterator_(const Mat_<_Tp>* _m) : m(_m)$/;"	f	class:cv::MatConstIterator_
MatExpr_	opencv/include/cxmat.hpp	/^    MatExpr_(const E& _e) : e(_e) {}$/;"	f	class:cv::MatExpr_
MatExpr_	opencv/include/cxmat.hpp	/^template<typename E, typename M> class CV_EXPORTS MatExpr_ : public MatExpr_Base_<M>$/;"	c	namespace:cv
MatExpr_Base	opencv/include/cxcore.hpp	/^typedef MatExpr_Base_<Mat> MatExpr_Base;$/;"	t	namespace:cv
MatExpr_Base_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatExpr_Base_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatExpr_Base_	opencv/include/cxmat.hpp	/^    MatExpr_Base_() {}$/;"	f	class:cv::MatExpr_Base_
MatExpr_Base_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatExpr_Base_$/;"	c	namespace:cv
MatExpr_Initializer	opencv/include/cxcore.hpp	/^    int, Mat, MatOp_Set_<Mat> >, Mat> MatExpr_Initializer;$/;"	t	namespace:cv
MatExpr_Op1_	opencv/include/cxmat.hpp	/^    MatExpr_Op1_(const A1& _a1) : a1(_a1) {}$/;"	f	class:cv::MatExpr_Op1_
MatExpr_Op1_	opencv/include/cxmat.hpp	/^class CV_EXPORTS MatExpr_Op1_$/;"	c	namespace:cv
MatExpr_Op2_	opencv/include/cxmat.hpp	/^    MatExpr_Op2_(const A1& _a1, const A2& _a2) : a1(_a1), a2(_a2) {}$/;"	f	class:cv::MatExpr_Op2_
MatExpr_Op2_	opencv/include/cxmat.hpp	/^class CV_EXPORTS MatExpr_Op2_$/;"	c	namespace:cv
MatExpr_Op3_	opencv/include/cxmat.hpp	/^    MatExpr_Op3_(const A1& _a1, const A2& _a2, const A3& _a3) : a1(_a1), a2(_a2), a3(_a3) {}$/;"	f	class:cv::MatExpr_Op3_
MatExpr_Op3_	opencv/include/cxmat.hpp	/^class CV_EXPORTS MatExpr_Op3_$/;"	c	namespace:cv
MatExpr_Op4_	opencv/include/cxmat.hpp	/^    MatExpr_Op4_(const A1& _a1, const A2& _a2, const A3& _a3, const A4& _a4)$/;"	f	class:cv::MatExpr_Op4_
MatExpr_Op4_	opencv/include/cxmat.hpp	/^class CV_EXPORTS MatExpr_Op4_$/;"	c	namespace:cv
MatExpr_Op5_	opencv/include/cxmat.hpp	/^    MatExpr_Op5_(const A1& _a1, const A2& _a2, const A3& _a3, const A4& _a4, const A5& _a5)$/;"	f	class:cv::MatExpr_Op5_
MatExpr_Op5_	opencv/include/cxmat.hpp	/^class CV_EXPORTS MatExpr_Op5_$/;"	c	namespace:cv
MatExpr_Op6_	opencv/include/cxmat.hpp	/^    MatExpr_Op6_(const A1& _a1, const A2& _a2, const A3& _a3,$/;"	f	class:cv::MatExpr_Op6_
MatExpr_Op6_	opencv/include/cxmat.hpp	/^class CV_EXPORTS MatExpr_Op6_$/;"	c	namespace:cv
MatIterator_	opencv/include/cxcore.hpp	/^class CV_EXPORTS MatIterator_ : public MatConstIterator_<_Tp>$/;"	c	namespace:cv
MatIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>::MatIterator_() : MatConstIterator_<_Tp>() {}$/;"	f	class:cv::MatIterator_
MatIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>::MatIterator_(Mat_<_Tp>* _m)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>::MatIterator_(Mat_<_Tp>* _m, int _row, int _col)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>::MatIterator_(const MatIterator_& it)$/;"	f	class:cv::MatIterator_
MatIterator_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>::MatIterator_(const Mat_<_Tp>* _m, Point _pt)$/;"	f	class:cv::MatIterator_
MatND	opencv/include/cxcore.hpp	/^class CV_EXPORTS MatND$/;"	c	namespace:cv
MatND	opencv/include/cxmat.hpp	/^inline MatND::MatND()$/;"	f	class:cv::MatND
MatND	opencv/include/cxmat.hpp	/^inline MatND::MatND(const CvMatND* m, bool copyData)$/;"	f	class:cv::MatND
MatND	opencv/include/cxmat.hpp	/^inline MatND::MatND(const MatND& m)$/;"	f	class:cv::MatND
MatND	opencv/include/cxmat.hpp	/^inline MatND::MatND(int _dims, const int* _sizes, int _type)$/;"	f	class:cv::MatND
MatND	opencv/include/cxmat.hpp	/^inline MatND::MatND(int _dims, const int* _sizes, int _type, const Scalar& _s)$/;"	f	class:cv::MatND
MatND_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS MatND_ : public MatND$/;"	c	namespace:cv
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_()$/;"	f	class:cv::MatND_
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_(const CvMatND* m, bool copyData)$/;"	f	class:cv::MatND_
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_(const MatND& m)$/;"	f	class:cv::MatND_
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_(const MatND_<_Tp>& m) : MatND(m)$/;"	f	class:cv::MatND_
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_(const MatND_<_Tp>& m, const Range* ranges)$/;"	f	class:cv::MatND_
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_(int _dims, const int* _sizes)$/;"	f	class:cv::MatND_
MatND_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>::MatND_(int _dims, const int* _sizes, const _Tp& _s)$/;"	f	class:cv::MatND_
MatOp_AddEx_	opencv/include/cxmat.hpp	/^    MatOp_AddEx_() {}$/;"	f	class:cv::MatOp_AddEx_
MatOp_AddEx_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_AddEx_$/;"	c	namespace:cv
MatOp_AddS_	opencv/include/cxmat.hpp	/^    MatOp_AddS_() {}$/;"	f	class:cv::MatOp_AddS_
MatOp_AddS_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_AddS_$/;"	c	namespace:cv
MatOp_BinS_	opencv/include/cxmat.hpp	/^    MatOp_BinS_() {}$/;"	f	class:cv::MatOp_BinS_
MatOp_BinS_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_BinS_$/;"	c	namespace:cv
MatOp_Bin_	opencv/include/cxmat.hpp	/^    MatOp_Bin_() {}$/;"	f	class:cv::MatOp_Bin_
MatOp_Bin_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Bin_$/;"	c	namespace:cv
MatOp_CmpS_	opencv/include/cxmat.hpp	/^    MatOp_CmpS_() {}$/;"	f	class:cv::MatOp_CmpS_
MatOp_CmpS_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_CmpS_$/;"	c	namespace:cv
MatOp_Cmp_	opencv/include/cxmat.hpp	/^    MatOp_Cmp_() {}$/;"	f	class:cv::MatOp_Cmp_
MatOp_Cmp_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Cmp_$/;"	c	namespace:cv
MatOp_DivRS_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_DivRS_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_DivRS_	opencv/include/cxmat.hpp	/^    MatOp_DivRS_() {}$/;"	f	class:cv::MatOp_DivRS_
MatOp_DivRS_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_DivRS_$/;"	c	namespace:cv
MatOp_Inv_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_Inv_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_Inv_	opencv/include/cxmat.hpp	/^    MatOp_Inv_() {}$/;"	f	class:cv::MatOp_Inv_
MatOp_Inv_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Inv_$/;"	c	namespace:cv
MatOp_Iter_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS MatOp_Iter_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_Iter_	opencv/include/cxmat.hpp	/^    MatOp_Iter_() {}$/;"	f	class:cv::MatOp_Iter_
MatOp_Iter_	opencv/include/cxmat.hpp	/^template<typename _Tp> class CV_EXPORTS MatOp_Iter_$/;"	c	namespace:cv
MatOp_MatMulAdd_	opencv/include/cxmat.hpp	/^    MatOp_MatMulAdd_() {}$/;"	f	class:cv::MatOp_MatMulAdd_
MatOp_MatMulAdd_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_MatMulAdd_$/;"	c	namespace:cv
MatOp_MatMul_	opencv/include/cxmat.hpp	/^    MatOp_MatMul_() {}$/;"	f	class:cv::MatOp_MatMul_
MatOp_MatMul_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_MatMul_$/;"	c	namespace:cv
MatOp_MulDiv_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_MulDiv_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_MulDiv_	opencv/include/cxmat.hpp	/^    MatOp_MulDiv_() {}$/;"	f	class:cv::MatOp_MulDiv_
MatOp_MulDiv_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_MulDiv_$/;"	c	namespace:cv
MatOp_Repeat_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_Repeat_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_ScaleAddS_	opencv/include/cxmat.hpp	/^    MatOp_ScaleAddS_() {}$/;"	f	class:cv::MatOp_ScaleAddS_
MatOp_ScaleAddS_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_ScaleAddS_$/;"	c	namespace:cv
MatOp_Scale_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_Scale_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_Scale_	opencv/include/cxmat.hpp	/^    MatOp_Scale_() {}$/;"	f	class:cv::MatOp_Scale_
MatOp_Scale_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Scale_$/;"	c	namespace:cv
MatOp_Set_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_Set_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_Set_	opencv/include/cxmat.hpp	/^    MatOp_Set_() {}$/;"	f	class:cv::MatOp_Set_
MatOp_Set_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Set_$/;"	c	namespace:cv
MatOp_Solve_	opencv/include/cxmat.hpp	/^    MatOp_Solve_() {}$/;"	f	class:cv::MatOp_Solve_
MatOp_Solve_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Solve_$/;"	c	namespace:cv
MatOp_Sub_	opencv/include/cxmat.hpp	/^    MatOp_Sub_() {}$/;"	f	class:cv::MatOp_Sub_
MatOp_Sub_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_Sub_$/;"	c	namespace:cv
MatOp_T_	opencv/include/cxcore.hpp	/^template<typename M> class CV_EXPORTS MatOp_T_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
MatOp_T_	opencv/include/cxmat.hpp	/^    MatOp_T_() {}$/;"	f	class:cv::MatOp_T_
MatOp_T_	opencv/include/cxmat.hpp	/^template<typename M> class CV_EXPORTS MatOp_T_$/;"	c	namespace:cv
Mat_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Mat_ : public Mat$/;"	c	namespace:cv
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_() :$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(Size _size) :$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(Size _size, const _Tp& value) :$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(const Mat& m) : Mat()$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(const MatExpr_Base& e) : Mat()$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(const Mat_& m) : Mat(m) {}$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(const Mat_& m, const Range& rowRange, const Range& colRange)$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(const Mat_& m, const Rect& roi)$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(const vector<_Tp>& vec, bool copyData)$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(int _rows, int _cols) :$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(int _rows, int _cols, _Tp* _data, size_t _step)$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::Mat_(int _rows, int _cols, const _Tp& value) :$/;"	f	class:cv::Mat_
Mat_	opencv/include/cxmat.hpp	/^template<typename _Tp> template<int n> inline Mat_<_Tp>::Mat_(const Vec<_Tp, n>& vec)$/;"	f	class:cv::Mat_
MaxMeanShiftIteration	opencv/include/cvaux.hpp	/^		MaxMeanShiftIteration 	= 5,$/;"	e	enum:CvFuzzyMeanShiftTracker::__anon27
MaxSetSizeIteration	opencv/include/cvaux.hpp	/^		MaxSetSizeIteration 	= 5$/;"	e	enum:CvFuzzyMeanShiftTracker::__anon27
MeasurementMatr	opencv/include/cvtypes.h	/^    float* MeasurementMatr;     \/* =measurement_matrix->data.fl *\/$/;"	m	struct:CvKalman
MemMod	vascript/ccg/ccg.h	/^		MemMod(){}$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		MemMod(int  off){trans(off);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(GPRT  base, GPRT index)                     {trans(base, index);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(GPRT  base, GPRT index, int scale)          {trans(base, index, scale);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(char off,  GPRT base, GPRT index)           {trans(off,base, index);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(char off,  GPRT base, GPRT index, int scale){trans(off,base,index,scale);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(int  off,  GPRT base)                       {trans(off, base);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(int  off,  GPRT base, GPRT index)           {trans(off,base, index);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(int  off,  GPRT base, GPRT index, int scale){trans(off,base,index,scale);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT>	MemMod(int  off,  GPRT index, int scale){trans(off,index,scale);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT> MemMod(GPRT base)                                  {trans(base);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^		template<typename GPRT> MemMod(char off,  GPRT base)                       {trans(off, base);};$/;"	f	class:CCG::MemMod
MemMod	vascript/ccg/ccg.h	/^class MemMod$/;"	c	namespace:CCG
MemStorage	opencv/include/cxcore.hpp	/^typedef Ptr<CvMemStorage> MemStorage;$/;"	t	namespace:cv
Mesh3D	opencv/include/cvaux.hpp	/^class CV_EXPORTS Mesh3D$/;"	c	namespace:cv
MinKernelMass	opencv/include/cvaux.hpp	/^		MinKernelMass			= 1000$/;"	e	enum:CvFuzzyMeanShiftTracker::__anon26
Mod	vascript/ccg/ccg.h	/^				unsigned int Mod:2;$/;"	m	struct:CCG::ModRM::__anon153::__anon154
Mod2	vascript/ccg/ccg.h	/^				unsigned int Mod2:2;$/;"	m	struct:CCG::ModRM::__anon153::__anon155
ModRM	vascript/ccg/ccg.h	/^		ModRM():c(0){}$/;"	f	class:CCG::ModRM
ModRM	vascript/ccg/ccg.h	/^		ModRM(const ModRM& o){ this->c = o.c;}$/;"	f	class:CCG::ModRM
ModRM	vascript/ccg/ccg.h	/^		ModRM(int mod, int reg, int rm):Mod(mod),Reg(reg),RM(rm){};$/;"	f	class:CCG::ModRM
ModRM	vascript/ccg/ccg.h	/^class ModRM$/;"	c	namespace:CCG
Moments	opencv/include/cv.hpp	/^class CV_EXPORTS Moments$/;"	c	namespace:cv
MouthRect	opencv/include/cvaux.h	/^    CvRect MouthRect;$/;"	m	struct:CvFace
N	opencv/include/cvaux.h	/^    int N; \/\/graph size$/;"	m	struct:CvCliqueFinder
N1c	opencv/include/cvaux.h	/^    int    N1c;			\/* Number of color vectors used to model normal background color variation at a given pixel.			*\/$/;"	m	struct:CvFGDStatModelParams
N1cc	opencv/include/cvaux.h	/^    int    N1cc;		\/* Number of color co-occurrence vectors used to model normal background color variation at a given pixel.	*\/$/;"	m	struct:CvFGDStatModelParams
N2c	opencv/include/cvaux.h	/^    int    N2c;			\/* Number of color vectors retained at given pixel.  Must be > N1c, typically ~ 5\/3 of N1c.			*\/$/;"	m	struct:CvFGDStatModelParams
N2cc	opencv/include/cvaux.h	/^    int    N2cc;		\/* Number of color co-occurrence vectors retained at given pixel.  Must be > N1cc, typically ~ 5\/3 of N1cc.	*\/$/;"	m	struct:CvFGDStatModelParams
NAMED	opencv/include/cxcore.hpp	/^        FLOW=8, USER=16, EMPTY=32, NAMED=64 };$/;"	e	enum:cv::FileNode::__anon104
NAME_EXPECTED	opencv/include/cxcore.hpp	/^    enum { UNDEFINED=0, VALUE_EXPECTED=1, NAME_EXPECTED=2, INSIDE_MAP=4 };$/;"	e	enum:cv::FileStorage::__anon103
NARROW_PRESET	opencv/include/cv.hpp	/^        NARROW_PRESET=CV_STEREO_BM_NARROW };$/;"	e	enum:cv::StereoBM::__anon21
NAryMatNDIterator	opencv/include/cxcore.hpp	/^class CV_EXPORTS NAryMatNDIterator$/;"	c	namespace:cv
NAryMatNDIterator	opencv/include/cxmat.hpp	/^inline NAryMatNDIterator::NAryMatNDIterator()$/;"	f	class:cv::NAryMatNDIterator
NONE	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
NORMAL	opencv/include/cxcore.hpp	/^    enum { A=4164903690U, UNIFORM=0, NORMAL=1 };$/;"	e	enum:cv::RNG::__anon95
NORMALIZED_RESPONSE	opencv/include/cv.hpp	/^    enum { NORMALIZED_RESPONSE = CV_STEREO_BM_NORMALIZED_RESPONSE,$/;"	e	enum:cv::StereoBM::__anon21
NORM_INF	opencv/include/cxcore.hpp	/^enum { NORM_INF=1, NORM_L1=2, NORM_L2=4, NORM_TYPE_MASK=7, NORM_RELATIVE=8, NORM_MINMAX=32};$/;"	e	enum:cv::__anon90
NORM_L1	opencv/include/cxcore.hpp	/^enum { NORM_INF=1, NORM_L1=2, NORM_L2=4, NORM_TYPE_MASK=7, NORM_RELATIVE=8, NORM_MINMAX=32};$/;"	e	enum:cv::__anon90
NORM_L2	opencv/include/cxcore.hpp	/^enum { NORM_INF=1, NORM_L1=2, NORM_L2=4, NORM_TYPE_MASK=7, NORM_RELATIVE=8, NORM_MINMAX=32};$/;"	e	enum:cv::__anon90
NORM_MINMAX	opencv/include/cxcore.hpp	/^enum { NORM_INF=1, NORM_L1=2, NORM_L2=4, NORM_TYPE_MASK=7, NORM_RELATIVE=8, NORM_MINMAX=32};$/;"	e	enum:cv::__anon90
NORM_RELATIVE	opencv/include/cxcore.hpp	/^enum { NORM_INF=1, NORM_L1=2, NORM_L2=4, NORM_TYPE_MASK=7, NORM_RELATIVE=8, NORM_MINMAX=32};$/;"	e	enum:cv::__anon90
NORM_TYPE_MASK	opencv/include/cxcore.hpp	/^enum { NORM_INF=1, NORM_L1=2, NORM_L2=4, NORM_TYPE_MASK=7, NORM_RELATIVE=8, NORM_MINMAX=32};$/;"	e	enum:cv::__anon90
NO_INPUT_SCALE	opencv/include/ml.h	/^    enum { UPDATE_WEIGHTS = 1, NO_INPUT_SCALE = 2, NO_OUTPUT_SCALE = 4 };$/;"	e	enum:CvANN_MLP::__anon56
NO_OUTPUT_SCALE	opencv/include/ml.h	/^    enum { UPDATE_WEIGHTS = 1, NO_INPUT_SCALE = 2, NO_OUTPUT_SCALE = 4 };$/;"	e	enum:CvANN_MLP::__anon56
NO_UV	opencv/include/cxcore.hpp	/^    enum { MODIFY_A=1, NO_UV=2, FULL_UV=4 };$/;"	e	enum:cv::SVD::__anon97
NU	opencv/include/ml.h	/^    enum { C=0, GAMMA=1, P=2, NU=3, COEF=4, DEGREE=5 };$/;"	e	enum:CvSVM::__anon47
NULLOPC2	vascript/ccg/opcodeDes.h	25;"	d
NU_SVC	opencv/include/ml.h	/^    enum { C_SVC=100, NU_SVC=101, ONE_CLASS=102, EPS_SVR=103, NU_SVR=104 };$/;"	e	enum:CvSVM::__anon45
NU_SVR	opencv/include/ml.h	/^    enum { C_SVC=100, NU_SVC=101, ONE_CLASS=102, EPS_SVR=103, NU_SVR=104 };$/;"	e	enum:CvSVM::__anon45
NXT_FRAME	vascript/vacg.h	/^	ZERO=0, PRV_FRAME= -1, CUR_FRAME = 0, NXT_FRAME=1$/;"	e	enum:__anon119
NeuralNet_MLP	opencv/include/ml.h	/^typedef CvANN_MLP NeuralNet_MLP;$/;"	t	namespace:cv
NewParam	opencv/include/cvvidsurv.hpp	/^    CvDefParam* NewParam(const char* name)$/;"	f	class:CvVSModule
Node	opencv/include/cvaux.hpp	/^        Node() {}$/;"	f	struct:cv::Octree::Node
Node	opencv/include/cvaux.hpp	/^    struct Node$/;"	s	class:cv::Octree
Node	opencv/include/cxcore.hpp	/^        Node() : idx(-1), left(-1), right(-1), boundary(0.f) {}$/;"	f	struct:cv::KDTree::Node
Node	opencv/include/cxcore.hpp	/^        Node(int _idx, int _left, int _right, float _boundary)$/;"	f	struct:cv::KDTree::Node
Node	opencv/include/cxcore.hpp	/^    struct CV_EXPORTS Node$/;"	s	class:cv::SparseMat
Node	opencv/include/cxcore.hpp	/^    struct Node$/;"	s	class:cv::KDTree
Node	vascript/node.h	/^	Node():next(NULL),prev(NULL){$/;"	f	class:Node
Node	vascript/node.h	/^class Node $/;"	c
Node	vascript/treeNode.h	/^    Node(){init();};$/;"	f	class:Node
Node	vascript/treeNode.h	/^class Node$/;"	c
NodeType	vascript/node.h	/^} NodeType;$/;"	t	typeref:enum:__anon123
NormalBayesClassifier	opencv/include/ml.h	/^typedef CvNormalBayesClassifier NormalBayesClassifier;$/;"	t	namespace:cv
NormalizeRect	opencv/include/highgui.h	/^CV_INLINE RECT NormalizeRect( RECT r )$/;"	f
Nxt	global.cpp	/^int Prv = 0, Cur = 1, Nxt =2;$/;"	v
ONE_CLASS	opencv/include/ml.h	/^    enum { C_SVC=100, NU_SVC=101, ONE_CLASS=102, EPS_SVR=103, NU_SVR=104 };$/;"	e	enum:CvSVM::__anon45
OPC1	vascript/ccg/opcodeDes.h	/^        OPC1(){c =0;}$/;"	f	class:CCG::OPC1
OPC1	vascript/ccg/opcodeDes.h	/^        OPC1(Uchar _c){c = _c;}$/;"	f	class:CCG::OPC1
OPC1	vascript/ccg/opcodeDes.h	/^class OPC1$/;"	c	namespace:CCG
OPENCV_ASSERT	opencv/include/cxerror.h	114;"	d
OPENCV_CALL	opencv/include/cxerror.h	120;"	d
OPENCV_ERRCHK	opencv/include/cxerror.h	110;"	d
OPENCV_ERROR	opencv/include/cxerror.h	107;"	d
OPENCV_RSTERR	opencv/include/cxerror.h	118;"	d
OPTFLOW_FARNEBACK_GAUSSIAN	opencv/include/cv.hpp	/^enum { OPTFLOW_USE_INITIAL_FLOW=4, OPTFLOW_FARNEBACK_GAUSSIAN=256 };$/;"	e	enum:cv::__anon8
OPTFLOW_USE_INITIAL_FLOW	opencv/include/cv.hpp	/^enum { OPTFLOW_USE_INITIAL_FLOW=4, OPTFLOW_FARNEBACK_GAUSSIAN=256 };$/;"	e	enum:cv::__anon8
OPerKind	vascript/ccg/ccg.h	/^}OPerKind;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon136
OUT	vascript/ccg/opcodeDes.h	212;"	d
OUT	vascript/ccg/opcodeDes.h	9;"	d
Octree	opencv/include/cvaux.hpp	/^class CV_EXPORTS Octree$/;"	c	namespace:cv
OneWayDescriptor	opencv/include/cvaux.hpp	/^class CV_EXPORTS OneWayDescriptor$/;"	c	namespace:cv
OneWayDescriptorBase	opencv/include/cvaux.hpp	/^class CV_EXPORTS OneWayDescriptorBase$/;"	c	namespace:cv
OneWayDescriptorObject	opencv/include/cvaux.hpp	/^class CV_EXPORTS OneWayDescriptorObject : public OneWayDescriptorBase$/;"	c	namespace:cv
OpCode	vascript/op.h	/^	OpCode(){}$/;"	f	class:OpCode
OpCode	vascript/op.h	/^	OpCode(char op){this->op = op;}$/;"	f	class:OpCode
OpCode	vascript/op.h	/^	OpCode(char* ){}$/;"	f	class:OpCode
OpCode	vascript/op.h	/^class OpCode$/;"	c
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef():len(0){code[0] = 0;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0):len(1){code[0] = c0;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1):len(2){code[0] = c0;code[1]=c1;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2):len(3){code[0] = c0;code[1]=c1;code[2]=c2;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2,Uchar c3):len(4){code[0] = c0;code[1]=c1;code[2]=c2;code[3]=c3;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2,Uchar c3,Uchar c4):len(5){code[0] = c0;code[1]=c1;code[2]=c2;code[3]=c3;code[4]=c4;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2,Uchar c3,Uchar c4,Uchar c5):len(6){code[0] = c0;code[1]=c1;code[2]=c2;code[3]=c3;code[4]=c4;code[5]=c5;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2,Uchar c3,Uchar c4,Uchar c5,Uchar c6):len(7){code[0] = c0;code[1]=c1;code[2]=c2;code[3]=c3;code[4]=c4;code[5]=c5;code[6]=c6;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2,Uchar c3,Uchar c4,Uchar c5,Uchar c6,Uchar c7):len(8){code[0] = c0;code[1]=c1;code[2]=c2;code[3]=c3;code[4]=c4;code[5]=c5;code[6]=c6;code[7]=c7;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^        OpCodeRef(Uchar c0,Uchar c1, Uchar c2,Uchar c3,Uchar c4,Uchar c5,Uchar c6,Uchar c7,Uchar c8,Uchar c9):len(10){code[0] = c0;code[1]=c1;code[2]=c2;code[3]=c3;code[4]=c4;code[5]=c5;code[6]=c6;code[7]=c7;code[8]=c8;code[9]=c9;}$/;"	f	class:OpCodeRef
OpCodeRef	vascript/ccg/testccg.cpp	/^class OpCodeRef$/;"	c	file:
OpInfo	vascript/ccg/opcodeDes.h	/^        OpInfo($/;"	f	class:CCG::OpInfo
OpInfo	vascript/ccg/opcodeDes.h	/^class OpInfo$/;"	c	namespace:CCG
OpInfoArgList	vascript/ccg/opcodeDes.h	193;"	d
Opcode	vascript/ccg/ccg.h	/^				unsigned int Opcode:3;$/;"	m	struct:CCG::ModRM::__anon153::__anon155
P	Kernel.h	64;"	d
P	opencv/include/cvaux.hpp	/^    CvMat* P; \/\/ parameters used to evaluate function with new params$/;"	m	class:cv::LevMarqSparse
P	opencv/include/ml.h	/^    enum { C=0, GAMMA=1, P=2, NU=3, COEF=4, DEGREE=5 };$/;"	e	enum:CvSVM::__anon47
PARSER_INC	vascript/parserdriver.h	2;"	d
PATCH_SIZE	opencv/include/cvaux.hpp	/^        PATCH_SIZE = 31,$/;"	e	enum:cv::FernClassifier::__anon30
PCA	opencv/include/cxcore.hpp	/^class CV_EXPORTS PCA$/;"	c	namespace:cv
PNCovariance	opencv/include/cvtypes.h	/^    float* PNCovariance;        \/* =process_noise_cov->data.fl *\/$/;"	m	struct:CvKalman
POLY	opencv/include/ml.h	/^    enum { LINEAR=0, POLY=1, RBF=2, SIGMOID=3 };$/;"	e	enum:CvSVM::__anon46
POOLSIZE	KeyBoard.cpp	/^const int POOLSIZE =  8;$/;"	v
POOLSIZE	vascript/vacg.h	/^const int POOLSIZE =  8;$/;"	v
PREFIX	vascript/ccg/ccg.h	381;"	d
PREFIX1	vascript/ccg/ccg.h	/^}PREFIX1;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon137
PREFIX2	vascript/ccg/ccg.h	/^}PREFIX2;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon138
PREFIX3	vascript/ccg/ccg.h	/^}PREFIX3;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon139
PREFIX4	vascript/ccg/ccg.h	/^}PREFIX4;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon140
PROFILE_DOG	opencv/include/cvvidsurv.hpp	925;"	d
PROFILE_EPANECHNIKOV	opencv/include/cvvidsurv.hpp	924;"	d
PRV_FRAME	vascript/vacg.h	/^	ZERO=0, PRV_FRAME= -1, CUR_FRAME = 0, NXT_FRAME=1$/;"	e	enum:__anon119
PVOID	vascript/vacg.h	/^typedef void* PVOID;$/;"	t
ParamGrid	opencv/include/ml.h	/^typedef CvParamGrid ParamGrid;$/;"	t	namespace:cv
ParamUpdate	opencv/include/cvvidsurv.hpp	/^    virtual void ParamUpdate(){};$/;"	f	class:CvVSModule
PatchGenerator	opencv/include/cvaux.hpp	/^class CV_EXPORTS PatchGenerator$/;"	c	namespace:cv
Pbc	opencv/include/cvaux.h	/^    float                 Pbc;$/;"	m	struct:CvBGPixelStat
Pbcc	opencv/include/cvaux.h	/^    float                 Pbcc;$/;"	m	struct:CvBGPixelStat
PixelSize	opencv/include/cvwimage.h	/^    int PixelSize() const {return Channels() * ChannelSize(); }$/;"	f	class:cv::WImage
PlanarObjectDetector	opencv/include/cvaux.hpp	/^class CV_EXPORTS PlanarObjectDetector$/;"	c	namespace:cv
Point	opencv/include/cxcore.hpp	/^typedef Point2i Point;$/;"	t	namespace:cv
Point2d	opencv/include/cxcore.hpp	/^typedef Point_<double> Point2d;$/;"	t	namespace:cv
Point2f	opencv/include/cxcore.hpp	/^typedef Point_<float> Point2f;$/;"	t	namespace:cv
Point2i	opencv/include/cxcore.hpp	/^typedef Point_<int> Point2i;$/;"	t	namespace:cv
Point3_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Point3_$/;"	c	namespace:cv
Point3_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::Point3_() : x(0), y(0), z(0) {}$/;"	f	class:cv::Point3_
Point3_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::Point3_(_Tp _x, _Tp _y, _Tp _z) : x(_x), y(_y), z(_z) {}$/;"	f	class:cv::Point3_
Point3_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::Point3_(const CvPoint3D32f& pt) :$/;"	f	class:cv::Point3_
Point3_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::Point3_(const Point3_& pt) : x(pt.x), y(pt.y), z(pt.z) {}$/;"	f	class:cv::Point3_
Point3_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::Point3_(const Point_<_Tp>& pt) : x(pt.x), y(pt.y), z(_Tp()) {}$/;"	f	class:cv::Point3_
Point3_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::Point3_(const Vec<_Tp, 3>& v) : x(v[0]), y(v[1]), z(v[2]) {}$/;"	f	class:cv::Point3_
Point3d	opencv/include/cxcore.hpp	/^typedef Point3_<double> Point3d;$/;"	t	namespace:cv
Point3f	opencv/include/cxcore.hpp	/^typedef Point3_<float> Point3f;$/;"	t	namespace:cv
Point3i	opencv/include/cxcore.hpp	/^typedef Point3_<int> Point3i;$/;"	t	namespace:cv
Point_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Point_$/;"	c	namespace:cv
Point_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Point_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_() : x(0), y(0) {}$/;"	f	class:cv::Point_
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_(_Tp _x, _Tp _y) : x(_x), y(_y) {}$/;"	f	class:cv::Point_
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_(const CvPoint& pt) : x((_Tp)pt.x), y((_Tp)pt.y) {}$/;"	f	class:cv::Point_
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_(const CvPoint2D32f& pt)$/;"	f	class:cv::Point_
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_(const Point_& pt) : x(pt.x), y(pt.y) {}$/;"	f	class:cv::Point_
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_(const Size_<_Tp>& sz) : x(sz.width), y(sz.height) {}$/;"	f	class:cv::Point_
Point_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::Point_(const Vec<_Tp,2>& v) : x(v[0]), y(v[1]) {}$/;"	f	class:cv::Point_
PosterErrorCovariance	opencv/include/cvtypes.h	/^    float* PosterErrorCovariance;\/* =error_cov_post->data.fl *\/$/;"	m	struct:CvKalman
PosterState	opencv/include/cvtypes.h	/^    float* PosterState;         \/* =state_pre->data.fl *\/$/;"	m	struct:CvKalman
Prewitt	transforKernel.cpp	/^void Prewitt(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
Prewitt_symblinfo	vascript/symbol.h	110;"	d
PriorErrorCovariance	opencv/include/cvtypes.h	/^    float* PriorErrorCovariance;\/* =error_cov_pre->data.fl *\/$/;"	m	struct:CvKalman
PriorState	opencv/include/cvtypes.h	/^    float* PriorState;          \/* =state_post->data.fl *\/$/;"	m	struct:CvKalman
ProcessBlob	opencv/include/cvvidsurv.hpp	/^    virtual void ProcessBlob(int BlobIndex, CvBlob* pBlob, IplImage* \/*pImg*\/, IplImage* \/*pImgFG*\/ = NULL)$/;"	f	class:CvBlobTracker
ProcessImg	KeyBoard.cpp	/^int ProcessImg(int argc,char** argv) {$/;"	f
ProcessVideo	KeyBoard.cpp	/^int ProcessVideo(int argc,char** argv) {$/;"	f
ProcessVideo	dmvideo.cpp	/^int ProcessVideo() {$/;"	f
Prv	global.cpp	/^int Prv = 0, Cur = 1, Nxt =2;$/;"	v
Ptr	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Ptr$/;"	c	namespace:cv
Ptr	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>::Ptr() : obj(0), refcount(0) {}$/;"	f	class:cv::Ptr
Ptr	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>::Ptr(_Tp* _obj) : obj(_obj)$/;"	f	class:cv::Ptr
Ptr	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>::Ptr(const Ptr<_Tp>& ptr)$/;"	f	class:cv::Ptr
Pv	opencv/include/cvaux.h	/^    float          Pv, Pvb;$/;"	m	struct:CvBGPixelCCStatTable
Pv	opencv/include/cvaux.h	/^    float          Pv, Pvb;$/;"	m	struct:CvBGPixelCStatTable
Pvb	opencv/include/cvaux.h	/^    float          Pv, Pvb;$/;"	m	struct:CvBGPixelCCStatTable
Pvb	opencv/include/cvaux.h	/^    float          Pv, Pvb;$/;"	m	struct:CvBGPixelCStatTable
R	Kernel.h	/^    unsigned char R;$/;"	m	struct:dmFrameSimple::__anon164
R	bmp.h	/^	unsigned char R; $/;"	m	struct:__anon114
R	bmp.h	/^    u8 R; \/\/$/;"	m	struct:tagRGBQUAD
R	vascript/ccg/ccg.h	/^				unsigned int R:1; \/\/Extension of the ModR\/M reg field$/;"	m	struct:CCG::REX::__anon151::__anon152
RANSAC	opencv/include/cv.hpp	/^enum { LMEDS=4, RANSAC=8 };$/;"	e	enum:cv::__anon17
RBF	opencv/include/ml.h	/^    enum { LINEAR=0, POLY=1, RBF=2, SIGMOID=3 };$/;"	e	enum:CvSVM::__anon46
READ	opencv/include/cxcore.hpp	/^    enum { READ=0, WRITE=1, APPEND=2 };$/;"	e	enum:cv::FileStorage::__anon102
REAL	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
REAL	opencv/include/ml.h	/^    enum { DISCRETE=0, REAL=1, LOGIT=2, GENTLE=3 };$/;"	e	enum:CvBoost::__anon52
RECT	opencv/include/cvvidsurv.hpp	/^    enum {RECT, ELLIPSE} shape;$/;"	e	enum:CvDrawShape::__anon42
REF	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
REG_MASK	vascript/ccg/ccg.h	714;"	d
REJECT	vascript/release/vaslexer.cpp	665;"	d	file:
RETR_CCOMP	opencv/include/cv.hpp	/^       RETR_CCOMP=CV_RETR_CCOMP, RETR_TREE=CV_RETR_TREE };$/;"	e	enum:cv::__anon12
RETR_EXTERNAL	opencv/include/cv.hpp	/^enum { RETR_EXTERNAL=CV_RETR_EXTERNAL, RETR_LIST=CV_RETR_LIST,$/;"	e	enum:cv::__anon12
RETR_LIST	opencv/include/cv.hpp	/^enum { RETR_EXTERNAL=CV_RETR_EXTERNAL, RETR_LIST=CV_RETR_LIST,$/;"	e	enum:cv::__anon12
RETR_TREE	opencv/include/cv.hpp	/^       RETR_CCOMP=CV_RETR_CCOMP, RETR_TREE=CV_RETR_TREE };$/;"	e	enum:cv::__anon12
REX	vascript/ccg/ccg.h	/^		REX(){init();}$/;"	f	class:CCG::REX
REX	vascript/ccg/ccg.h	/^class REX{$/;"	c	namespace:CCG
RGB24_t	Kernel.h	/^}RGB24_t;$/;"	t	namespace:dmFrameSimple	typeref:struct:dmFrameSimple::__anon164
RGBQUAD	bmp.h	/^} RGBQUAD;$/;"	t	typeref:struct:tagRGBQUAD
RGROUPMASK	vascript/ccg/ccg.h	555;"	d
RM	vascript/ccg/ccg.h	/^				unsigned int RM:3;$/;"	m	struct:CCG::ModRM::__anon153::__anon154
RM2	vascript/ccg/ccg.h	/^				unsigned int RM2:3;$/;"	m	struct:CCG::ModRM::__anon153::__anon155
RM_MASK	vascript/ccg/ccg.h	713;"	d
RNG	opencv/include/cxcore.hpp	/^class CV_EXPORTS RNG$/;"	c	namespace:cv
RNG	opencv/include/cxoperations.hpp	/^inline RNG::RNG() { state = 0xffffffff; }$/;"	f	class:cv::RNG
RNG	opencv/include/cxoperations.hpp	/^inline RNG::RNG(uint64 _state) { state = _state ? _state : 0xffffffff; }$/;"	f	class:cv::RNG
RPROP	opencv/include/ml.h	/^    enum { BACKPROP=0, RPROP=1 };$/;"	e	enum:CvANN_MLP_TrainParams::__anon54
RandS	opencv/include/cvtypes.h	/^    struct CvRandState* RandS; \/* Array of structures to generate random vectors *\/$/;"	m	struct:CvConDensation	typeref:struct:CvConDensation::CvRandState
RandomSample	opencv/include/cvtypes.h	/^    float* RandomSample;    \/* RandomVector to update sample set     *\/$/;"	m	struct:CvConDensation
RandomTreeParams	opencv/include/ml.h	/^typedef CvRTParams RandomTreeParams;$/;"	t	namespace:cv
RandomTrees	opencv/include/ml.h	/^typedef CvRTrees RandomTrees;$/;"	t	namespace:cv
Range	opencv/include/cxcore.hpp	/^class CV_EXPORTS Range$/;"	c	namespace:cv
Range	opencv/include/cxoperations.hpp	/^inline Range::Range() : start(0), end(0) {}$/;"	f	class:cv::Range
Range	opencv/include/cxoperations.hpp	/^inline Range::Range(const CvSlice& slice) : start(slice.start_index), end(slice.end_index)$/;"	f	class:cv::Range
Range	opencv/include/cxoperations.hpp	/^inline Range::Range(int _start, int _end) : start(_start), end(_end) {}$/;"	f	class:cv::Range
Rect	opencv/include/cxcore.hpp	/^typedef Rect_<int> Rect;$/;"	t	namespace:cv
RectToCvRect	opencv/include/highgui.h	/^CV_INLINE CvRect RectToCvRect( RECT sr )$/;"	f
RectToROI	opencv/include/highgui.h	/^CV_INLINE IplROI RectToROI( RECT r )$/;"	f
Rect_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Rect_$/;"	c	namespace:cv
Rect_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Rect_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
Rect_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::Rect_() : x(0), y(0), width(0), height(0) {}$/;"	f	class:cv::Rect_
Rect_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::Rect_(_Tp _x, _Tp _y, _Tp _width, _Tp _height) : x(_x), y(_y), width(_width), height(_height) {}$/;"	f	class:cv::Rect_
Rect_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::Rect_(const CvRect& r) : x((_Tp)r.x), y((_Tp)r.y), width((_Tp)r.width), height((_Tp)r.height) {}$/;"	f	class:cv::Rect_
Rect_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::Rect_(const Point_<_Tp>& org, const Size_<_Tp>& sz) :$/;"	f	class:cv::Rect_
Rect_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::Rect_(const Point_<_Tp>& pt1, const Point_<_Tp>& pt2)$/;"	f	class:cv::Rect_
Rect_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::Rect_(const Rect_<_Tp>& r) : x(r.x), y(r.y), width(r.width), height(r.height) {}$/;"	f	class:cv::Rect_
Reg	vascript/ccg/ccg.h	/^				unsigned int Reg:3;$/;"	m	struct:CCG::ModRM::__anon153::__anon154
RegName	vascript/ccg/ccg.h	/^class RegName{};$/;"	c	namespace:CCG
ReleaseImage	opencv/include/cvwimage.h	/^    void ReleaseImage() {$/;"	f	class:cv::WImageBuffer
ReleaseImage	opencv/include/cvwimage.h	/^    void ReleaseImage() {$/;"	f	class:cv::WImageBufferC
Reserved	bmp.h	/^    u8 Reserved;\/\/$/;"	m	struct:tagRGBQUAD
ResizeMethod	opencv/include/cvaux.hpp	/^	enum ResizeMethod {$/;"	g	class:CvFuzzyMeanShiftTracker
RightEyeRect	opencv/include/cvaux.h	/^    CvRect RightEyeRect;$/;"	m	struct:CvFace
Robert	transforKernel.cpp	/^void Robert(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
Robert_symblinfo	vascript/symbol.h	109;"	d
RotatedRect	opencv/include/cxcore.hpp	/^class CV_EXPORTS RotatedRect$/;"	c	namespace:cv
RotatedRect	opencv/include/cxoperations.hpp	/^inline RotatedRect::RotatedRect() { angle = 0; }$/;"	f	class:cv::RotatedRect
RotatedRect	opencv/include/cxoperations.hpp	/^inline RotatedRect::RotatedRect(const CvBox2D& box)$/;"	f	class:cv::RotatedRect
RotatedRect	opencv/include/cxoperations.hpp	/^inline RotatedRect::RotatedRect(const Point2f& _center, const Size2f& _size, float _angle)$/;"	f	class:cv::RotatedRect
Row	opencv/include/cvwimage.h	/^    inline T* Row(int r) {$/;"	f	class:cv::WImage
Row	opencv/include/cvwimage.h	/^    inline const T* Row(int r) const {$/;"	f	class:cv::WImage
S	Kernel.h	65;"	d
S	opencv/include/cvaux.hpp	/^    CvMat* S; \/\/big matrix of block Sjk  , each block has size num_cam_params x num_cam_params $/;"	m	class:cv::LevMarqSparse
SADWindowSize	opencv/include/cv.h	/^    int SADWindowSize; \/\/ ~5x5..21x21$/;"	m	struct:CvStereoBMState
SAFE_RELEASE	KeyBoard.cpp	7;"	d	file:
SAFE_RELEASE	detect.cpp	6;"	d	file:
SAFE_RELEASE	dmvideo.cpp	9;"	d	file:
SAVED	opencv/include/cxflann.h	/^	SAVED = 254,$/;"	e	enum:cv::flann::flann_algorithm_t
SCALE_IMAGE	opencv/include/cv.hpp	/^           SCALE_IMAGE = CV_HAAR_SCALE_IMAGE,$/;"	e	enum:cv::CascadeClassifier::__anon16
SEQ	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
SIB	vascript/ccg/ccg.h	/^		SIB():c(0){}$/;"	f	class:CCG::SIB
SIB	vascript/ccg/ccg.h	/^		SIB(const SIB& o){c= o.c;}$/;"	f	class:CCG::SIB
SIB	vascript/ccg/ccg.h	/^		SIB(int b, int i, int s):Base(b), Index(i), SS(s){}$/;"	f	class:CCG::SIB
SIB	vascript/ccg/ccg.h	/^class SIB$/;"	c	namespace:CCG
SIBScale	vascript/ccg/ccg.h	/^}SIBScale;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon158
SIGMOID	opencv/include/ml.h	/^    enum { LINEAR=0, POLY=1, RBF=2, SIGMOID=3 };$/;"	e	enum:CvSVM::__anon46
SIGMOID_SYM	opencv/include/ml.h	/^    enum { IDENTITY = 0, SIGMOID_SYM = 1, GAUSSIAN = 2 };$/;"	e	enum:CvANN_MLP::__anon55
SOURCEFILE	Makefile	/^SOURCEFILE=dmvideo.cpp filterKernel.cpp transColor.cpp transforKernel.cpp vascript\/vacg.cpp detect.cpp global.cpp vascript\/OBJ_DIR\/vaslexer.cpp vascript\/OBJ_DIR\/vasparser.cpp vascript\/parserdriver.cpp vascript\/symbol.cpp vascript\/node.cpp vascript\/graph.cpp vascript\/ccg\/ccg.cpp $/;"	m
SQERR	opencv/include/ml.h	/^    enum { DEFAULT=0, GINI=1, MISCLASS=3, SQERR=4 };$/;"	e	enum:CvBoost::__anon53
SQRTTWO	Kernel.h	7;"	d
SS	vascript/ccg/ccg.h	/^				unsigned int SS:2;$/;"	m	struct:CCG::SIB::__anon156::__anon157
STARTED	opencv/include/cv.hpp	/^    enum { DONE=0, STARTED=1, CALC_J=2, CHECK_ERR=3 };$/;"	e	enum:CvLevMarq::__anon22
START_AUTO_STEP	opencv/include/ml.h	/^    enum { START_E_STEP=1, START_M_STEP=2, START_AUTO_STEP=0 };$/;"	e	enum:CvEM::__anon49
START_E_STEP	opencv/include/ml.h	/^    enum { START_E_STEP=1, START_M_STEP=2, START_AUTO_STEP=0 };$/;"	e	enum:CvEM::__anon49
START_M_STEP	opencv/include/ml.h	/^    enum { START_E_STEP=1, START_M_STEP=2, START_AUTO_STEP=0 };$/;"	e	enum:CvEM::__anon49
START_TRANS	vascript/ccg/ccg.cpp	348;"	d	file:
STR	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
STR	testtok.cpp	20;"	d	file:
STRING	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
STS	vascript/ccg/ccg.h	/^} STS;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon147
SURF	opencv/include/cv.hpp	/^class CV_EXPORTS SURF : public CvSURFParams$/;"	c	namespace:cv
SVD	opencv/include/cxcore.hpp	/^class CV_EXPORTS SVD$/;"	c	namespace:cv
SVD	opencv/include/cxmat.hpp	/^inline SVD::SVD( const Mat& m, int flags ) { operator ()(m, flags); }$/;"	f	class:cv::SVD
SVD	opencv/include/cxmat.hpp	/^inline SVD::SVD() {}$/;"	f	class:cv::SVD
SVM	opencv/include/ml.h	/^typedef CvSVM SVM;$/;"	t	namespace:cv
SVMKernel	opencv/include/ml.h	/^typedef CvSVMKernel SVMKernel;$/;"	t	namespace:cv
SVMParams	opencv/include/ml.h	/^typedef CvSVMParams SVMParams;$/;"	t	namespace:cv
SVMSolver	opencv/include/ml.h	/^typedef CvSVMSolver SVMSolver;$/;"	t	namespace:cv
SVM_C	opencv/include/ml.h	/^    enum { SVM_C=0, SVM_GAMMA=1, SVM_P=2, SVM_NU=3, SVM_COEF=4, SVM_DEGREE=5 };$/;"	e	enum:CvParamGrid::__anon44
SVM_COEF	opencv/include/ml.h	/^    enum { SVM_C=0, SVM_GAMMA=1, SVM_P=2, SVM_NU=3, SVM_COEF=4, SVM_DEGREE=5 };$/;"	e	enum:CvParamGrid::__anon44
SVM_DEGREE	opencv/include/ml.h	/^    enum { SVM_C=0, SVM_GAMMA=1, SVM_P=2, SVM_NU=3, SVM_COEF=4, SVM_DEGREE=5 };$/;"	e	enum:CvParamGrid::__anon44
SVM_GAMMA	opencv/include/ml.h	/^    enum { SVM_C=0, SVM_GAMMA=1, SVM_P=2, SVM_NU=3, SVM_COEF=4, SVM_DEGREE=5 };$/;"	e	enum:CvParamGrid::__anon44
SVM_NU	opencv/include/ml.h	/^    enum { SVM_C=0, SVM_GAMMA=1, SVM_P=2, SVM_NU=3, SVM_COEF=4, SVM_DEGREE=5 };$/;"	e	enum:CvParamGrid::__anon44
SVM_P	opencv/include/ml.h	/^    enum { SVM_C=0, SVM_GAMMA=1, SVM_P=2, SVM_NU=3, SVM_COEF=4, SVM_DEGREE=5 };$/;"	e	enum:CvParamGrid::__anon44
SYS_32	vascript/ccg/ccg.h	/^typedef    enum{SYS_32 = 0, SYS_64} ArchType;$/;"	e	enum:CCG::__anon135
SYS_64	vascript/ccg/ccg.h	/^typedef    enum{SYS_32 = 0, SYS_64} ArchType;$/;"	e	enum:CCG::__anon135
SamplesNum	opencv/include/cvtypes.h	/^    int SamplesNum;         \/* Number of the Samples                 *\/$/;"	m	struct:CvConDensation
SaveState	opencv/include/cvvidsurv.hpp	/^    virtual void SaveState(CvFileStorage*){};$/;"	f	class:CvVSModule
SavedIndexParams	opencv/include/cxflann.h	/^	SavedIndexParams() {}$/;"	f	struct:cv::flann::SavedIndexParams
SavedIndexParams	opencv/include/cxflann.h	/^	SavedIndexParams(std::string filename_) : filename(filename_) {}$/;"	f	struct:cv::flann::SavedIndexParams
SavedIndexParams	opencv/include/cxflann.h	/^struct CV_EXPORTS SavedIndexParams : public IndexParams {$/;"	s	namespace:cv::flann
Scalar	opencv/include/cxcore.hpp	/^typedef Scalar_<double> Scalar;$/;"	t	namespace:cv
Scalar_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Scalar_ : public Vec<_Tp, 4>$/;"	c	namespace:cv
Scalar_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp>::Scalar_()$/;"	f	class:cv::Scalar_
Scalar_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp>::Scalar_(_Tp v0)$/;"	f	class:cv::Scalar_
Scalar_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp>::Scalar_(_Tp v0, _Tp v1, _Tp v2, _Tp v3)$/;"	f	class:cv::Scalar_
Scalar_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp>::Scalar_(const CvScalar& s)$/;"	f	class:cv::Scalar_
ScaleAfter	opencv/include/cvvidsurv.hpp	/^    int     ScaleAfter;$/;"	m	struct:CvBlobTrackerParamLH
SearchParams	opencv/include/cxflann.h	/^	SearchParams(int checks_ = 32) :$/;"	f	struct:cv::flann::SearchParams
SearchParams	opencv/include/cxflann.h	/^struct CV_EXPORTS SearchParams {$/;"	s	namespace:cv::flann
SearchWindow	opencv/include/cvaux.hpp	/^	class SearchWindow$/;"	c	class:CvFuzzyMeanShiftTracker
SelectWorkingSet	opencv/include/ml.h	/^    typedef bool (CvSVMSolver::*SelectWorkingSet)( int& i, int& j );$/;"	t	class:CvSVMSolver
SelfSimDescriptor	opencv/include/cvaux.hpp	/^class CV_EXPORTS SelfSimDescriptor$/;"	c	namespace:cv
Seq	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Seq$/;"	c	namespace:cv
Seq	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Seq<_Tp>::Seq( MemStorage& storage,$/;"	f	class:cv::Seq
Seq	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Seq<_Tp>::Seq( const CvSeq* _seq ) : seq((CvSeq*)_seq)$/;"	f	class:cv::Seq
Seq	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Seq<_Tp>::Seq() : seq(0) {}$/;"	f	class:cv::Seq
SeqIterator	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS SeqIterator : public CvSeqReader$/;"	c	namespace:cv
SeqIterator	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp>::SeqIterator()$/;"	f	class:cv::SeqIterator
SeqIterator	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp>::SeqIterator(const Seq<_Tp>& seq, bool seekEnd)$/;"	f	class:cv::SeqIterator
Set32System	vascript/ccg/ccg.h	/^inline void Set32System(){ System64Bits = false;}    $/;"	f	namespace:CCG
Set64System	vascript/ccg/ccg.h	/^inline void Set64System(){ System64Bits = true;}    $/;"	f	namespace:CCG
SetBlob	opencv/include/cvvidsurv.hpp	/^    virtual void    SetBlob(int \/*BlobIndex*\/, CvBlob* \/*pBlob*\/){};$/;"	f	class:CvBlobTracker
SetBlobByID	opencv/include/cvvidsurv.hpp	/^    virtual void    SetBlobByID(int BlobID, CvBlob* pBlob)$/;"	f	class:CvBlobTracker
SetBlobHyp	opencv/include/cvvidsurv.hpp	/^    virtual void    SetBlobHyp(int \/*BlobIndex*\/, CvBlob* \/*pBlob*\/){};$/;"	f	class:CvBlobTracker
SetCollision	opencv/include/cvvidsurv.hpp	/^    virtual void SetCollision(int \/*CollisionFlag*\/){}; \/* call in case of blob collision situation*\/$/;"	f	class:CvBlobTrackerOne
SetFileName	opencv/include/cvvidsurv.hpp	/^    virtual void    SetFileName(char* \/*DataBaseName*\/){};$/;"	f	class:CvBlobTrackAnalysis
SetIpl	opencv/include/cvwimage.h	/^    void SetIpl(IplImage* image) {$/;"	f	class:cv::WImage
SetIpl	opencv/include/cvwimage.h	/^    void SetIpl(IplImage* image) {$/;"	f	class:cv::WImageC
SetIpl	opencv/include/cvwimage.h	/^    void SetIpl(IplImage* img) {$/;"	f	class:cv::WImageBuffer
SetIpl	opencv/include/cvwimage.h	/^    void SetIpl(IplImage* img) {$/;"	f	class:cv::WImageBufferC
SetLabeledFeatures	opencv/include/cvaux.hpp	/^    void SetLabeledFeatures(const vector<KeyPoint>& features) {m_train_features = features;};$/;"	f	class:cv::OneWayDescriptorObject
SetModuleName	opencv/include/cvvidsurv.hpp	/^    void SetModuleName(const char* name){m_pModuleName = strdup(name);}$/;"	f	class:CvVSModule
SetNickName	opencv/include/cvvidsurv.hpp	/^    void SetNickName(const char* pStr)$/;"	f	class:CvVSModule
SetPCADimHigh	opencv/include/cvaux.hpp	/^    void SetPCADimHigh(int pca_dim_high) {m_pca_dim_high = pca_dim_high;};$/;"	f	class:cv::OneWayDescriptor
SetPCADimLow	opencv/include/cvaux.hpp	/^    void SetPCADimLow(int pca_dim_low) {m_pca_dim_low = pca_dim_low;};$/;"	f	class:cv::OneWayDescriptor
SetParam	opencv/include/cvvidsurv.hpp	/^    void   SetParam(const char* name, double val)$/;"	f	class:CvVSModule
SetParamStr	opencv/include/cvvidsurv.hpp	/^    void   SetParamStr(const char* name, const char* str)$/;"	f	class:CvVSModule
SetTypeName	opencv/include/cvvidsurv.hpp	/^    void SetTypeName(const char* name){m_pModuleTypeName = strdup(name);}$/;"	f	class:CvVSModule
SetZero	opencv/include/cvwimage.h	/^    void SetZero() { cvSetZero(image_); }$/;"	f	class:cv::WImage
Size	opencv/include/cxcore.hpp	/^typedef Size2i Size;$/;"	t	namespace:cv
Size2f	opencv/include/cxcore.hpp	/^typedef Size_<float> Size2f;$/;"	t	namespace:cv
Size2i	opencv/include/cxcore.hpp	/^typedef Size_<int> Size2i;$/;"	t	namespace:cv
Size_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Size_$/;"	c	namespace:cv
Size_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS Size_;$/;"	m	namespace:cv	typeref:class:cv::CV_EXPORTS
Size_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::Size_()$/;"	f	class:cv::Size_
Size_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::Size_(_Tp _width, _Tp _height)$/;"	f	class:cv::Size_
Size_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::Size_(const CvSize& sz)$/;"	f	class:cv::Size_
Size_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::Size_(const CvSize2D32f& sz)$/;"	f	class:cv::Size_
Size_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::Size_(const Point_<_Tp>& pt) : width(pt.x), height(pt.y) {}$/;"	f	class:cv::Size_
Size_	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::Size_(const Size_& sz)$/;"	f	class:cv::Size_
SkipProcess	opencv/include/cvvidsurv.hpp	/^    virtual void SkipProcess(CvBlob* \/*pBlobPrev*\/, IplImage* \/*pImg*\/, IplImage* \/*pImgFG*\/ = NULL){};$/;"	f	class:CvBlobTrackerOne
Sobel	transforKernel.cpp	/^void Sobel(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
Sobel_symblinfo	vascript/symbol.h	108;"	d
SparseMat	opencv/include/cxcore.hpp	/^class CV_EXPORTS SparseMat$/;"	c	namespace:cv
SparseMat	opencv/include/cxmat.hpp	/^inline SparseMat::SparseMat()$/;"	f	class:cv::SparseMat
SparseMat	opencv/include/cxmat.hpp	/^inline SparseMat::SparseMat(const SparseMat& m)$/;"	f	class:cv::SparseMat
SparseMat	opencv/include/cxmat.hpp	/^inline SparseMat::SparseMat(int _dims, const int* _sizes, int _type)$/;"	f	class:cv::SparseMat
SparseMatConstIterator	opencv/include/cxcore.hpp	/^class CV_EXPORTS SparseMatConstIterator$/;"	c	namespace:cv
SparseMatConstIterator	opencv/include/cxmat.hpp	/^inline SparseMatConstIterator::SparseMatConstIterator()$/;"	f	class:cv::SparseMatConstIterator
SparseMatConstIterator	opencv/include/cxmat.hpp	/^inline SparseMatConstIterator::SparseMatConstIterator(const SparseMatConstIterator& it)$/;"	f	class:cv::SparseMatConstIterator
SparseMatConstIterator_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS SparseMatConstIterator_ : public SparseMatConstIterator$/;"	c	namespace:cv
SparseMatConstIterator_	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_()$/;"	f	class:cv::SparseMatConstIterator_
SparseMatConstIterator_	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_(const SparseMatConstIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatConstIterator_
SparseMatConstIterator_	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::SparseMatConstIterator_(const SparseMat_<_Tp>* _m)$/;"	f	class:cv::SparseMatConstIterator_
SparseMatIterator	opencv/include/cxcore.hpp	/^class CV_EXPORTS SparseMatIterator : public SparseMatConstIterator$/;"	c	namespace:cv
SparseMatIterator	opencv/include/cxmat.hpp	/^inline SparseMatIterator::SparseMatIterator()$/;"	f	class:cv::SparseMatIterator
SparseMatIterator	opencv/include/cxmat.hpp	/^inline SparseMatIterator::SparseMatIterator(SparseMat* _m)$/;"	f	class:cv::SparseMatIterator
SparseMatIterator	opencv/include/cxmat.hpp	/^inline SparseMatIterator::SparseMatIterator(const SparseMatIterator& it)$/;"	f	class:cv::SparseMatIterator
SparseMatIterator_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS SparseMatIterator_ : public SparseMatConstIterator_<_Tp>$/;"	c	namespace:cv
SparseMatIterator_	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_()$/;"	f	class:cv::SparseMatIterator_
SparseMatIterator_	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_(SparseMat_<_Tp>* _m)$/;"	f	class:cv::SparseMatIterator_
SparseMatIterator_	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::SparseMatIterator_(const SparseMatIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatIterator_
SparseMat_	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS SparseMat_ : public SparseMat$/;"	c	namespace:cv
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_()$/;"	f	class:cv::SparseMat_
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_(const CvSparseMat* m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_(const Mat& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_(const MatND& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_(const SparseMat& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_(const SparseMat_<_Tp>& m)$/;"	f	class:cv::SparseMat_
SparseMat_	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMat_<_Tp>::SparseMat_(int _dims, const int* _sizes)$/;"	f	class:cv::SparseMat_
SpinImageModel	opencv/include/cvaux.hpp	/^class CV_EXPORTS SpinImageModel$/;"	c	namespace:cv
Stage	opencv/include/cv.hpp	/^    struct CV_EXPORTS Stage$/;"	s	class:cv::CascadeClassifier
StarDetector	opencv/include/cv.hpp	/^class CV_EXPORTS StarDetector : CvStarDetectorParams$/;"	c	namespace:cv
StartFrame	opencv/include/cvvidsurv.hpp	/^    int         StartFrame;$/;"	m	struct:CvBlobTrack
StatModel	opencv/include/ml.h	/^typedef CvStatModel StatModel;$/;"	t	namespace:cv
State	opencv/include/cvtypes.h	/^    float* State;           \/* Vector of State                       *\/$/;"	m	struct:CvConDensation
StatementsList	vascript/node.hxx	/^typedef std::vector<AstNode*> StatementsList;$/;"	t
StereoBM	opencv/include/cv.hpp	/^class CV_EXPORTS StereoBM$/;"	c	namespace:cv
Str	opencv/include/cvvidsurv.hpp	/^    char*               Str;$/;"	m	struct:CvDefParam
String	opencv/include/cxcore.hpp	/^typedef std::string String;$/;"	t	namespace:cv
Symbol	vascript/symbol.h	/^        Symbol():replace(NULL){}$/;"	f	class:Symbol
Symbol	vascript/symbol.h	/^        Symbol(const Symbol& o){$/;"	f	class:Symbol
Symbol	vascript/symbol.h	/^class Symbol{$/;"	c
SymbolInfo	vascript/symbol.h	/^        SymbolInfo(){}$/;"	f	class:SymbolInfo
SymbolInfo	vascript/symbol.h	/^        SymbolInfo(const SymbolInfo& o){$/;"	f	class:SymbolInfo
SymbolInfo	vascript/symbol.h	/^class SymbolInfo{$/;"	c
System64Bits	vascript/ccg/ccg.cpp	/^bool System64Bits = true;    $/;"	m	namespace:CCG	file:
T	opencv/include/cvaux.h	/^    float  T;			\/* "A percentage value which determines when new features can be recognized as new background." (Typically 0.9).*\/$/;"	m	struct:CvFGDStatModelParams
TARGET	vascript/Makefile	/^TARGET= testvas.exe$/;"	m
THRESH_BINARY	opencv/include/cv.hpp	/^enum { THRESH_BINARY=0, THRESH_BINARY_INV=1, THRESH_TRUNC=2, THRESH_TOZERO=3,$/;"	e	enum:cv::__anon6
THRESH_BINARY_INV	opencv/include/cv.hpp	/^enum { THRESH_BINARY=0, THRESH_BINARY_INV=1, THRESH_TRUNC=2, THRESH_TOZERO=3,$/;"	e	enum:cv::__anon6
THRESH_MASK	opencv/include/cv.hpp	/^       THRESH_TOZERO_INV=4, THRESH_MASK=7, THRESH_OTSU=8 };$/;"	e	enum:cv::__anon6
THRESH_OTSU	opencv/include/cv.hpp	/^       THRESH_TOZERO_INV=4, THRESH_MASK=7, THRESH_OTSU=8 };$/;"	e	enum:cv::__anon6
THRESH_TOZERO	opencv/include/cv.hpp	/^enum { THRESH_BINARY=0, THRESH_BINARY_INV=1, THRESH_TRUNC=2, THRESH_TOZERO=3,$/;"	e	enum:cv::__anon6
THRESH_TOZERO_INV	opencv/include/cv.hpp	/^       THRESH_TOZERO_INV=4, THRESH_MASK=7, THRESH_OTSU=8 };$/;"	e	enum:cv::__anon6
THRESH_TRUNC	opencv/include/cv.hpp	/^enum { THRESH_BINARY=0, THRESH_BINARY_INV=1, THRESH_TRUNC=2, THRESH_TOZERO=3,$/;"	e	enum:cv::__anon6
TK_ADD_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_ADD_ASSIGN=276;$/;"	m	class:YY_vasParser_CLASS	file:
TK_ADD_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_ADD_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_ADD_ASSIGN	vascript/release/vasparser.cpp	347;"	d	file:
TK_ADD_ASSIGN	vascript/release/vasparser.h	/^static const int TK_ADD_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_ADD_ASSIGN	vascript/release/vasparser.h	234;"	d
TK_AND_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_AND_ASSIGN=280;$/;"	m	class:YY_vasParser_CLASS	file:
TK_AND_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_AND_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_AND_ASSIGN	vascript/release/vasparser.cpp	351;"	d	file:
TK_AND_ASSIGN	vascript/release/vasparser.h	/^static const int TK_AND_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_AND_ASSIGN	vascript/release/vasparser.h	238;"	d
TK_AND_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_AND_OP=271;$/;"	m	class:YY_vasParser_CLASS	file:
TK_AND_OP	vascript/release/vasparser.cpp	/^static const int TK_AND_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_AND_OP	vascript/release/vasparser.cpp	342;"	d	file:
TK_AND_OP	vascript/release/vasparser.h	/^static const int TK_AND_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_AND_OP	vascript/release/vasparser.h	229;"	d
TK_AUTO	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_AUTO=287;$/;"	m	class:YY_vasParser_CLASS	file:
TK_AUTO	vascript/release/vasparser.cpp	/^static const int TK_AUTO;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_AUTO	vascript/release/vasparser.cpp	358;"	d	file:
TK_AUTO	vascript/release/vasparser.h	/^static const int TK_AUTO;$/;"	m	class:YY_vasParser_INHERIT
TK_AUTO	vascript/release/vasparser.h	245;"	d
TK_BREAK	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_BREAK=315;$/;"	m	class:YY_vasParser_CLASS	file:
TK_BREAK	vascript/release/vasparser.cpp	/^static const int TK_BREAK;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_BREAK	vascript/release/vasparser.cpp	386;"	d	file:
TK_BREAK	vascript/release/vasparser.h	/^static const int TK_BREAK;$/;"	m	class:YY_vasParser_INHERIT
TK_BREAK	vascript/release/vasparser.h	273;"	d
TK_CASE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_CASE=305;$/;"	m	class:YY_vasParser_CLASS	file:
TK_CASE	vascript/release/vasparser.cpp	/^static const int TK_CASE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_CASE	vascript/release/vasparser.cpp	376;"	d	file:
TK_CASE	vascript/release/vasparser.h	/^static const int TK_CASE;$/;"	m	class:YY_vasParser_INHERIT
TK_CASE	vascript/release/vasparser.h	263;"	d
TK_CHAR	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_CHAR=289;$/;"	m	class:YY_vasParser_CLASS	file:
TK_CHAR	vascript/release/vasparser.cpp	/^static const int TK_CHAR;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_CHAR	vascript/release/vasparser.cpp	360;"	d	file:
TK_CHAR	vascript/release/vasparser.h	/^static const int TK_CHAR;$/;"	m	class:YY_vasParser_INHERIT
TK_CHAR	vascript/release/vasparser.h	247;"	d
TK_CONST	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_CONST=297;$/;"	m	class:YY_vasParser_CLASS	file:
TK_CONST	vascript/release/vasparser.cpp	/^static const int TK_CONST;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_CONST	vascript/release/vasparser.cpp	368;"	d	file:
TK_CONST	vascript/release/vasparser.h	/^static const int TK_CONST;$/;"	m	class:YY_vasParser_INHERIT
TK_CONST	vascript/release/vasparser.h	255;"	d
TK_CONSTANT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_CONSTANT=259;$/;"	m	class:YY_vasParser_CLASS	file:
TK_CONSTANT	vascript/release/vasparser.cpp	/^static const int TK_CONSTANT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_CONSTANT	vascript/release/vasparser.cpp	330;"	d	file:
TK_CONSTANT	vascript/release/vasparser.h	/^static const int TK_CONSTANT;$/;"	m	class:YY_vasParser_INHERIT
TK_CONSTANT	vascript/release/vasparser.h	217;"	d
TK_CONTINUE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_CONTINUE=314;$/;"	m	class:YY_vasParser_CLASS	file:
TK_CONTINUE	vascript/release/vasparser.cpp	/^static const int TK_CONTINUE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_CONTINUE	vascript/release/vasparser.cpp	385;"	d	file:
TK_CONTINUE	vascript/release/vasparser.h	/^static const int TK_CONTINUE;$/;"	m	class:YY_vasParser_INHERIT
TK_CONTINUE	vascript/release/vasparser.h	272;"	d
TK_DEC_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_DEC_OP=264;$/;"	m	class:YY_vasParser_CLASS	file:
TK_DEC_OP	vascript/release/vasparser.cpp	/^static const int TK_DEC_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_DEC_OP	vascript/release/vasparser.cpp	335;"	d	file:
TK_DEC_OP	vascript/release/vasparser.h	/^static const int TK_DEC_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_DEC_OP	vascript/release/vasparser.h	222;"	d
TK_DEFAULT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_DEFAULT=306;$/;"	m	class:YY_vasParser_CLASS	file:
TK_DEFAULT	vascript/release/vasparser.cpp	/^static const int TK_DEFAULT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_DEFAULT	vascript/release/vasparser.cpp	377;"	d	file:
TK_DEFAULT	vascript/release/vasparser.h	/^static const int TK_DEFAULT;$/;"	m	class:YY_vasParser_INHERIT
TK_DEFAULT	vascript/release/vasparser.h	264;"	d
TK_DIV_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_DIV_ASSIGN=274;$/;"	m	class:YY_vasParser_CLASS	file:
TK_DIV_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_DIV_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_DIV_ASSIGN	vascript/release/vasparser.cpp	345;"	d	file:
TK_DIV_ASSIGN	vascript/release/vasparser.h	/^static const int TK_DIV_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_DIV_ASSIGN	vascript/release/vasparser.h	232;"	d
TK_DO	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_DO=311;$/;"	m	class:YY_vasParser_CLASS	file:
TK_DO	vascript/release/vasparser.cpp	/^static const int TK_DO;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_DO	vascript/release/vasparser.cpp	382;"	d	file:
TK_DO	vascript/release/vasparser.h	/^static const int TK_DO;$/;"	m	class:YY_vasParser_INHERIT
TK_DO	vascript/release/vasparser.h	269;"	d
TK_DOLLAR	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_DOLLAR=327;$/;"	m	class:YY_vasParser_CLASS	file:
TK_DOLLAR	vascript/release/vasparser.cpp	/^static const int TK_DOLLAR;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_DOLLAR	vascript/release/vasparser.cpp	398;"	d	file:
TK_DOLLAR	vascript/release/vasparser.h	/^static const int TK_DOLLAR;$/;"	m	class:YY_vasParser_INHERIT
TK_DOLLAR	vascript/release/vasparser.h	285;"	d
TK_DOUBLE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_DOUBLE=296;$/;"	m	class:YY_vasParser_CLASS	file:
TK_DOUBLE	vascript/release/vasparser.cpp	/^static const int TK_DOUBLE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_DOUBLE	vascript/release/vasparser.cpp	367;"	d	file:
TK_DOUBLE	vascript/release/vasparser.h	/^static const int TK_DOUBLE;$/;"	m	class:YY_vasParser_INHERIT
TK_DOUBLE	vascript/release/vasparser.h	254;"	d
TK_ELIPSIS	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_ELIPSIS=303;$/;"	m	class:YY_vasParser_CLASS	file:
TK_ELIPSIS	vascript/release/vasparser.cpp	/^static const int TK_ELIPSIS;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_ELIPSIS	vascript/release/vasparser.cpp	374;"	d	file:
TK_ELIPSIS	vascript/release/vasparser.h	/^static const int TK_ELIPSIS;$/;"	m	class:YY_vasParser_INHERIT
TK_ELIPSIS	vascript/release/vasparser.h	261;"	d
TK_ELLIPSIS	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_ELLIPSIS=317;$/;"	m	class:YY_vasParser_CLASS	file:
TK_ELLIPSIS	vascript/release/vasparser.cpp	/^static const int TK_ELLIPSIS;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_ELLIPSIS	vascript/release/vasparser.cpp	388;"	d	file:
TK_ELLIPSIS	vascript/release/vasparser.h	/^static const int TK_ELLIPSIS;$/;"	m	class:YY_vasParser_INHERIT
TK_ELLIPSIS	vascript/release/vasparser.h	275;"	d
TK_ELSE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_ELSE=308;$/;"	m	class:YY_vasParser_CLASS	file:
TK_ELSE	vascript/release/vasparser.cpp	/^static const int TK_ELSE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_ELSE	vascript/release/vasparser.cpp	379;"	d	file:
TK_ELSE	vascript/release/vasparser.h	/^static const int TK_ELSE;$/;"	m	class:YY_vasParser_INHERIT
TK_ELSE	vascript/release/vasparser.h	266;"	d
TK_ENUM	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_ENUM=302;$/;"	m	class:YY_vasParser_CLASS	file:
TK_ENUM	vascript/release/vasparser.cpp	/^static const int TK_ENUM;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_ENUM	vascript/release/vasparser.cpp	373;"	d	file:
TK_ENUM	vascript/release/vasparser.h	/^static const int TK_ENUM;$/;"	m	class:YY_vasParser_INHERIT
TK_ENUM	vascript/release/vasparser.h	260;"	d
TK_EQ_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_EQ_OP=269;$/;"	m	class:YY_vasParser_CLASS	file:
TK_EQ_OP	vascript/release/vasparser.cpp	/^static const int TK_EQ_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_EQ_OP	vascript/release/vasparser.cpp	340;"	d	file:
TK_EQ_OP	vascript/release/vasparser.h	/^static const int TK_EQ_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_EQ_OP	vascript/release/vasparser.h	227;"	d
TK_EXTERN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_EXTERN=285;$/;"	m	class:YY_vasParser_CLASS	file:
TK_EXTERN	vascript/release/vasparser.cpp	/^static const int TK_EXTERN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_EXTERN	vascript/release/vasparser.cpp	356;"	d	file:
TK_EXTERN	vascript/release/vasparser.h	/^static const int TK_EXTERN;$/;"	m	class:YY_vasParser_INHERIT
TK_EXTERN	vascript/release/vasparser.h	243;"	d
TK_FLOAT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_FLOAT=295;$/;"	m	class:YY_vasParser_CLASS	file:
TK_FLOAT	vascript/release/vasparser.cpp	/^static const int TK_FLOAT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_FLOAT	vascript/release/vasparser.cpp	366;"	d	file:
TK_FLOAT	vascript/release/vasparser.h	/^static const int TK_FLOAT;$/;"	m	class:YY_vasParser_INHERIT
TK_FLOAT	vascript/release/vasparser.h	253;"	d
TK_FOR	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_FOR=312;$/;"	m	class:YY_vasParser_CLASS	file:
TK_FOR	vascript/release/vasparser.cpp	/^static const int TK_FOR;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_FOR	vascript/release/vasparser.cpp	383;"	d	file:
TK_FOR	vascript/release/vasparser.h	/^static const int TK_FOR;$/;"	m	class:YY_vasParser_INHERIT
TK_FOR	vascript/release/vasparser.h	270;"	d
TK_FRAME	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_FRAME=318;$/;"	m	class:YY_vasParser_CLASS	file:
TK_FRAME	vascript/release/vasparser.cpp	/^static const int TK_FRAME;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_FRAME	vascript/release/vasparser.cpp	389;"	d	file:
TK_FRAME	vascript/release/vasparser.h	/^static const int TK_FRAME;$/;"	m	class:YY_vasParser_INHERIT
TK_FRAME	vascript/release/vasparser.h	276;"	d
TK_FREICHEN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_FREICHEN=324;$/;"	m	class:YY_vasParser_CLASS	file:
TK_FREICHEN	vascript/release/vasparser.cpp	/^static const int TK_FREICHEN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_FREICHEN	vascript/release/vasparser.cpp	395;"	d	file:
TK_FREICHEN	vascript/release/vasparser.h	/^static const int TK_FREICHEN;$/;"	m	class:YY_vasParser_INHERIT
TK_FREICHEN	vascript/release/vasparser.h	282;"	d
TK_GE_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_GE_OP=268;$/;"	m	class:YY_vasParser_CLASS	file:
TK_GE_OP	vascript/release/vasparser.cpp	/^static const int TK_GE_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_GE_OP	vascript/release/vasparser.cpp	339;"	d	file:
TK_GE_OP	vascript/release/vasparser.h	/^static const int TK_GE_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_GE_OP	vascript/release/vasparser.h	226;"	d
TK_GOTO	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_GOTO=313;$/;"	m	class:YY_vasParser_CLASS	file:
TK_GOTO	vascript/release/vasparser.cpp	/^static const int TK_GOTO;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_GOTO	vascript/release/vasparser.cpp	384;"	d	file:
TK_GOTO	vascript/release/vasparser.h	/^static const int TK_GOTO;$/;"	m	class:YY_vasParser_INHERIT
TK_GOTO	vascript/release/vasparser.h	271;"	d
TK_IDENTIFIER	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_IDENTIFIER=258;$/;"	m	class:YY_vasParser_CLASS	file:
TK_IDENTIFIER	vascript/release/vasparser.cpp	/^static const int TK_IDENTIFIER;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_IDENTIFIER	vascript/release/vasparser.cpp	329;"	d	file:
TK_IDENTIFIER	vascript/release/vasparser.h	/^static const int TK_IDENTIFIER;$/;"	m	class:YY_vasParser_INHERIT
TK_IDENTIFIER	vascript/release/vasparser.h	216;"	d
TK_IF	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_IF=307;$/;"	m	class:YY_vasParser_CLASS	file:
TK_IF	vascript/release/vasparser.cpp	/^static const int TK_IF;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_IF	vascript/release/vasparser.cpp	378;"	d	file:
TK_IF	vascript/release/vasparser.h	/^static const int TK_IF;$/;"	m	class:YY_vasParser_INHERIT
TK_IF	vascript/release/vasparser.h	265;"	d
TK_INC_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_INC_OP=263;$/;"	m	class:YY_vasParser_CLASS	file:
TK_INC_OP	vascript/release/vasparser.cpp	/^static const int TK_INC_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_INC_OP	vascript/release/vasparser.cpp	334;"	d	file:
TK_INC_OP	vascript/release/vasparser.h	/^static const int TK_INC_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_INC_OP	vascript/release/vasparser.h	221;"	d
TK_INFILE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_INFILE=325;$/;"	m	class:YY_vasParser_CLASS	file:
TK_INFILE	vascript/release/vasparser.cpp	/^static const int TK_INFILE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_INFILE	vascript/release/vasparser.cpp	396;"	d	file:
TK_INFILE	vascript/release/vasparser.h	/^static const int TK_INFILE;$/;"	m	class:YY_vasParser_INHERIT
TK_INFILE	vascript/release/vasparser.h	283;"	d
TK_INT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_INT=291;$/;"	m	class:YY_vasParser_CLASS	file:
TK_INT	vascript/release/vasparser.cpp	/^static const int TK_INT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_INT	vascript/release/vasparser.cpp	362;"	d	file:
TK_INT	vascript/release/vasparser.h	/^static const int TK_INT;$/;"	m	class:YY_vasParser_INHERIT
TK_INT	vascript/release/vasparser.h	249;"	d
TK_LAPlAS	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_LAPlAS=323;$/;"	m	class:YY_vasParser_CLASS	file:
TK_LAPlAS	vascript/release/vasparser.cpp	/^static const int TK_LAPlAS;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_LAPlAS	vascript/release/vasparser.cpp	394;"	d	file:
TK_LAPlAS	vascript/release/vasparser.h	/^static const int TK_LAPlAS;$/;"	m	class:YY_vasParser_INHERIT
TK_LAPlAS	vascript/release/vasparser.h	281;"	d
TK_LEFT_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_LEFT_ASSIGN=278;$/;"	m	class:YY_vasParser_CLASS	file:
TK_LEFT_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_LEFT_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_LEFT_ASSIGN	vascript/release/vasparser.cpp	349;"	d	file:
TK_LEFT_ASSIGN	vascript/release/vasparser.h	/^static const int TK_LEFT_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_LEFT_ASSIGN	vascript/release/vasparser.h	236;"	d
TK_LEFT_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_LEFT_OP=265;$/;"	m	class:YY_vasParser_CLASS	file:
TK_LEFT_OP	vascript/release/vasparser.cpp	/^static const int TK_LEFT_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_LEFT_OP	vascript/release/vasparser.cpp	336;"	d	file:
TK_LEFT_OP	vascript/release/vasparser.h	/^static const int TK_LEFT_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_LEFT_OP	vascript/release/vasparser.h	223;"	d
TK_LE_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_LE_OP=267;$/;"	m	class:YY_vasParser_CLASS	file:
TK_LE_OP	vascript/release/vasparser.cpp	/^static const int TK_LE_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_LE_OP	vascript/release/vasparser.cpp	338;"	d	file:
TK_LE_OP	vascript/release/vasparser.h	/^static const int TK_LE_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_LE_OP	vascript/release/vasparser.h	225;"	d
TK_LONG	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_LONG=292;$/;"	m	class:YY_vasParser_CLASS	file:
TK_LONG	vascript/release/vasparser.cpp	/^static const int TK_LONG;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_LONG	vascript/release/vasparser.cpp	363;"	d	file:
TK_LONG	vascript/release/vasparser.h	/^static const int TK_LONG;$/;"	m	class:YY_vasParser_INHERIT
TK_LONG	vascript/release/vasparser.h	250;"	d
TK_MOD_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_MOD_ASSIGN=275;$/;"	m	class:YY_vasParser_CLASS	file:
TK_MOD_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_MOD_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_MOD_ASSIGN	vascript/release/vasparser.cpp	346;"	d	file:
TK_MOD_ASSIGN	vascript/release/vasparser.h	/^static const int TK_MOD_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_MOD_ASSIGN	vascript/release/vasparser.h	233;"	d
TK_MUL_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_MUL_ASSIGN=273;$/;"	m	class:YY_vasParser_CLASS	file:
TK_MUL_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_MUL_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_MUL_ASSIGN	vascript/release/vasparser.cpp	344;"	d	file:
TK_MUL_ASSIGN	vascript/release/vasparser.h	/^static const int TK_MUL_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_MUL_ASSIGN	vascript/release/vasparser.h	231;"	d
TK_NE_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_NE_OP=270;$/;"	m	class:YY_vasParser_CLASS	file:
TK_NE_OP	vascript/release/vasparser.cpp	/^static const int TK_NE_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_NE_OP	vascript/release/vasparser.cpp	341;"	d	file:
TK_NE_OP	vascript/release/vasparser.h	/^static const int TK_NE_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_NE_OP	vascript/release/vasparser.h	228;"	d
TK_OFRAME	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_OFRAME=319;$/;"	m	class:YY_vasParser_CLASS	file:
TK_OFRAME	vascript/release/vasparser.cpp	/^static const int TK_OFRAME;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_OFRAME	vascript/release/vasparser.cpp	390;"	d	file:
TK_OFRAME	vascript/release/vasparser.h	/^static const int TK_OFRAME;$/;"	m	class:YY_vasParser_INHERIT
TK_OFRAME	vascript/release/vasparser.h	277;"	d
TK_OR_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_OR_ASSIGN=282;$/;"	m	class:YY_vasParser_CLASS	file:
TK_OR_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_OR_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_OR_ASSIGN	vascript/release/vasparser.cpp	353;"	d	file:
TK_OR_ASSIGN	vascript/release/vasparser.h	/^static const int TK_OR_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_OR_ASSIGN	vascript/release/vasparser.h	240;"	d
TK_OR_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_OR_OP=272;$/;"	m	class:YY_vasParser_CLASS	file:
TK_OR_OP	vascript/release/vasparser.cpp	/^static const int TK_OR_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_OR_OP	vascript/release/vasparser.cpp	343;"	d	file:
TK_OR_OP	vascript/release/vasparser.h	/^static const int TK_OR_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_OR_OP	vascript/release/vasparser.h	230;"	d
TK_OUTFILE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_OUTFILE=326;$/;"	m	class:YY_vasParser_CLASS	file:
TK_OUTFILE	vascript/release/vasparser.cpp	/^static const int TK_OUTFILE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_OUTFILE	vascript/release/vasparser.cpp	397;"	d	file:
TK_OUTFILE	vascript/release/vasparser.h	/^static const int TK_OUTFILE;$/;"	m	class:YY_vasParser_INHERIT
TK_OUTFILE	vascript/release/vasparser.h	284;"	d
TK_PREWITT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_PREWITT=322;$/;"	m	class:YY_vasParser_CLASS	file:
TK_PREWITT	vascript/release/vasparser.cpp	/^static const int TK_PREWITT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_PREWITT	vascript/release/vasparser.cpp	393;"	d	file:
TK_PREWITT	vascript/release/vasparser.h	/^static const int TK_PREWITT;$/;"	m	class:YY_vasParser_INHERIT
TK_PREWITT	vascript/release/vasparser.h	280;"	d
TK_PTR_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_PTR_OP=262;$/;"	m	class:YY_vasParser_CLASS	file:
TK_PTR_OP	vascript/release/vasparser.cpp	/^static const int TK_PTR_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_PTR_OP	vascript/release/vasparser.cpp	333;"	d	file:
TK_PTR_OP	vascript/release/vasparser.h	/^static const int TK_PTR_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_PTR_OP	vascript/release/vasparser.h	220;"	d
TK_RANGE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_RANGE=304;$/;"	m	class:YY_vasParser_CLASS	file:
TK_RANGE	vascript/release/vasparser.cpp	/^static const int TK_RANGE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_RANGE	vascript/release/vasparser.cpp	375;"	d	file:
TK_RANGE	vascript/release/vasparser.h	/^static const int TK_RANGE;$/;"	m	class:YY_vasParser_INHERIT
TK_RANGE	vascript/release/vasparser.h	262;"	d
TK_REGISTER	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_REGISTER=288;$/;"	m	class:YY_vasParser_CLASS	file:
TK_REGISTER	vascript/release/vasparser.cpp	/^static const int TK_REGISTER;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_REGISTER	vascript/release/vasparser.cpp	359;"	d	file:
TK_REGISTER	vascript/release/vasparser.h	/^static const int TK_REGISTER;$/;"	m	class:YY_vasParser_INHERIT
TK_REGISTER	vascript/release/vasparser.h	246;"	d
TK_RETURN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_RETURN=316;$/;"	m	class:YY_vasParser_CLASS	file:
TK_RETURN	vascript/release/vasparser.cpp	/^static const int TK_RETURN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_RETURN	vascript/release/vasparser.cpp	387;"	d	file:
TK_RETURN	vascript/release/vasparser.h	/^static const int TK_RETURN;$/;"	m	class:YY_vasParser_INHERIT
TK_RETURN	vascript/release/vasparser.h	274;"	d
TK_RIGHT_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_RIGHT_ASSIGN=279;$/;"	m	class:YY_vasParser_CLASS	file:
TK_RIGHT_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_RIGHT_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_RIGHT_ASSIGN	vascript/release/vasparser.cpp	350;"	d	file:
TK_RIGHT_ASSIGN	vascript/release/vasparser.h	/^static const int TK_RIGHT_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_RIGHT_ASSIGN	vascript/release/vasparser.h	237;"	d
TK_RIGHT_OP	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_RIGHT_OP=266;$/;"	m	class:YY_vasParser_CLASS	file:
TK_RIGHT_OP	vascript/release/vasparser.cpp	/^static const int TK_RIGHT_OP;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_RIGHT_OP	vascript/release/vasparser.cpp	337;"	d	file:
TK_RIGHT_OP	vascript/release/vasparser.h	/^static const int TK_RIGHT_OP;$/;"	m	class:YY_vasParser_INHERIT
TK_RIGHT_OP	vascript/release/vasparser.h	224;"	d
TK_ROBERT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_ROBERT=321;$/;"	m	class:YY_vasParser_CLASS	file:
TK_ROBERT	vascript/release/vasparser.cpp	/^static const int TK_ROBERT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_ROBERT	vascript/release/vasparser.cpp	392;"	d	file:
TK_ROBERT	vascript/release/vasparser.h	/^static const int TK_ROBERT;$/;"	m	class:YY_vasParser_INHERIT
TK_ROBERT	vascript/release/vasparser.h	279;"	d
TK_SHORT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_SHORT=290;$/;"	m	class:YY_vasParser_CLASS	file:
TK_SHORT	vascript/release/vasparser.cpp	/^static const int TK_SHORT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_SHORT	vascript/release/vasparser.cpp	361;"	d	file:
TK_SHORT	vascript/release/vasparser.h	/^static const int TK_SHORT;$/;"	m	class:YY_vasParser_INHERIT
TK_SHORT	vascript/release/vasparser.h	248;"	d
TK_SIGNED	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_SIGNED=293;$/;"	m	class:YY_vasParser_CLASS	file:
TK_SIGNED	vascript/release/vasparser.cpp	/^static const int TK_SIGNED;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_SIGNED	vascript/release/vasparser.cpp	364;"	d	file:
TK_SIGNED	vascript/release/vasparser.h	/^static const int TK_SIGNED;$/;"	m	class:YY_vasParser_INHERIT
TK_SIGNED	vascript/release/vasparser.h	251;"	d
TK_SIZEOF	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_SIZEOF=261;$/;"	m	class:YY_vasParser_CLASS	file:
TK_SIZEOF	vascript/release/vasparser.cpp	/^static const int TK_SIZEOF;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_SIZEOF	vascript/release/vasparser.cpp	332;"	d	file:
TK_SIZEOF	vascript/release/vasparser.h	/^static const int TK_SIZEOF;$/;"	m	class:YY_vasParser_INHERIT
TK_SIZEOF	vascript/release/vasparser.h	219;"	d
TK_SOBEL	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_SOBEL=320;$/;"	m	class:YY_vasParser_CLASS	file:
TK_SOBEL	vascript/release/vasparser.cpp	/^static const int TK_SOBEL;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_SOBEL	vascript/release/vasparser.cpp	391;"	d	file:
TK_SOBEL	vascript/release/vasparser.h	/^static const int TK_SOBEL;$/;"	m	class:YY_vasParser_INHERIT
TK_SOBEL	vascript/release/vasparser.h	278;"	d
TK_STATIC	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_STATIC=286;$/;"	m	class:YY_vasParser_CLASS	file:
TK_STATIC	vascript/release/vasparser.cpp	/^static const int TK_STATIC;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_STATIC	vascript/release/vasparser.cpp	357;"	d	file:
TK_STATIC	vascript/release/vasparser.h	/^static const int TK_STATIC;$/;"	m	class:YY_vasParser_INHERIT
TK_STATIC	vascript/release/vasparser.h	244;"	d
TK_STRING_LITERAL	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_STRING_LITERAL=260;$/;"	m	class:YY_vasParser_CLASS	file:
TK_STRING_LITERAL	vascript/release/vasparser.cpp	/^static const int TK_STRING_LITERAL;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_STRING_LITERAL	vascript/release/vasparser.cpp	331;"	d	file:
TK_STRING_LITERAL	vascript/release/vasparser.h	/^static const int TK_STRING_LITERAL;$/;"	m	class:YY_vasParser_INHERIT
TK_STRING_LITERAL	vascript/release/vasparser.h	218;"	d
TK_STRUCT	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_STRUCT=300;$/;"	m	class:YY_vasParser_CLASS	file:
TK_STRUCT	vascript/release/vasparser.cpp	/^static const int TK_STRUCT;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_STRUCT	vascript/release/vasparser.cpp	371;"	d	file:
TK_STRUCT	vascript/release/vasparser.h	/^static const int TK_STRUCT;$/;"	m	class:YY_vasParser_INHERIT
TK_STRUCT	vascript/release/vasparser.h	258;"	d
TK_SUB_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_SUB_ASSIGN=277;$/;"	m	class:YY_vasParser_CLASS	file:
TK_SUB_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_SUB_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_SUB_ASSIGN	vascript/release/vasparser.cpp	348;"	d	file:
TK_SUB_ASSIGN	vascript/release/vasparser.h	/^static const int TK_SUB_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_SUB_ASSIGN	vascript/release/vasparser.h	235;"	d
TK_SWITCH	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_SWITCH=309;$/;"	m	class:YY_vasParser_CLASS	file:
TK_SWITCH	vascript/release/vasparser.cpp	/^static const int TK_SWITCH;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_SWITCH	vascript/release/vasparser.cpp	380;"	d	file:
TK_SWITCH	vascript/release/vasparser.h	/^static const int TK_SWITCH;$/;"	m	class:YY_vasParser_INHERIT
TK_SWITCH	vascript/release/vasparser.h	267;"	d
TK_TYPEDEF	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_TYPEDEF=284;$/;"	m	class:YY_vasParser_CLASS	file:
TK_TYPEDEF	vascript/release/vasparser.cpp	/^static const int TK_TYPEDEF;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_TYPEDEF	vascript/release/vasparser.cpp	355;"	d	file:
TK_TYPEDEF	vascript/release/vasparser.h	/^static const int TK_TYPEDEF;$/;"	m	class:YY_vasParser_INHERIT
TK_TYPEDEF	vascript/release/vasparser.h	242;"	d
TK_TYPE_NAME	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_TYPE_NAME=283;$/;"	m	class:YY_vasParser_CLASS	file:
TK_TYPE_NAME	vascript/release/vasparser.cpp	/^static const int TK_TYPE_NAME;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_TYPE_NAME	vascript/release/vasparser.cpp	354;"	d	file:
TK_TYPE_NAME	vascript/release/vasparser.h	/^static const int TK_TYPE_NAME;$/;"	m	class:YY_vasParser_INHERIT
TK_TYPE_NAME	vascript/release/vasparser.h	241;"	d
TK_UMINUS	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_UMINUS=328;$/;"	m	class:YY_vasParser_CLASS	file:
TK_UMINUS	vascript/release/vasparser.cpp	/^static const int TK_UMINUS;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_UMINUS	vascript/release/vasparser.cpp	399;"	d	file:
TK_UMINUS	vascript/release/vasparser.h	/^static const int TK_UMINUS;$/;"	m	class:YY_vasParser_INHERIT
TK_UMINUS	vascript/release/vasparser.h	286;"	d
TK_UNION	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_UNION=301;$/;"	m	class:YY_vasParser_CLASS	file:
TK_UNION	vascript/release/vasparser.cpp	/^static const int TK_UNION;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_UNION	vascript/release/vasparser.cpp	372;"	d	file:
TK_UNION	vascript/release/vasparser.h	/^static const int TK_UNION;$/;"	m	class:YY_vasParser_INHERIT
TK_UNION	vascript/release/vasparser.h	259;"	d
TK_UNSIGNED	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_UNSIGNED=294;$/;"	m	class:YY_vasParser_CLASS	file:
TK_UNSIGNED	vascript/release/vasparser.cpp	/^static const int TK_UNSIGNED;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_UNSIGNED	vascript/release/vasparser.cpp	365;"	d	file:
TK_UNSIGNED	vascript/release/vasparser.h	/^static const int TK_UNSIGNED;$/;"	m	class:YY_vasParser_INHERIT
TK_UNSIGNED	vascript/release/vasparser.h	252;"	d
TK_VOID	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_VOID=299;$/;"	m	class:YY_vasParser_CLASS	file:
TK_VOID	vascript/release/vasparser.cpp	/^static const int TK_VOID;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_VOID	vascript/release/vasparser.cpp	370;"	d	file:
TK_VOID	vascript/release/vasparser.h	/^static const int TK_VOID;$/;"	m	class:YY_vasParser_INHERIT
TK_VOID	vascript/release/vasparser.h	257;"	d
TK_VOLATILE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_VOLATILE=298;$/;"	m	class:YY_vasParser_CLASS	file:
TK_VOLATILE	vascript/release/vasparser.cpp	/^static const int TK_VOLATILE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_VOLATILE	vascript/release/vasparser.cpp	369;"	d	file:
TK_VOLATILE	vascript/release/vasparser.h	/^static const int TK_VOLATILE;$/;"	m	class:YY_vasParser_INHERIT
TK_VOLATILE	vascript/release/vasparser.h	256;"	d
TK_WHILE	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_WHILE=310;$/;"	m	class:YY_vasParser_CLASS	file:
TK_WHILE	vascript/release/vasparser.cpp	/^static const int TK_WHILE;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_WHILE	vascript/release/vasparser.cpp	381;"	d	file:
TK_WHILE	vascript/release/vasparser.h	/^static const int TK_WHILE;$/;"	m	class:YY_vasParser_INHERIT
TK_WHILE	vascript/release/vasparser.h	268;"	d
TK_XOR_ASSIGN	vascript/release/vasparser.cpp	/^const int YY_vasParser_CLASS::TK_XOR_ASSIGN=281;$/;"	m	class:YY_vasParser_CLASS	file:
TK_XOR_ASSIGN	vascript/release/vasparser.cpp	/^static const int TK_XOR_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT	file:
TK_XOR_ASSIGN	vascript/release/vasparser.cpp	352;"	d	file:
TK_XOR_ASSIGN	vascript/release/vasparser.h	/^static const int TK_XOR_ASSIGN;$/;"	m	class:YY_vasParser_INHERIT
TK_XOR_ASSIGN	vascript/release/vasparser.h	239;"	d
TM_CCOEFF	opencv/include/cv.hpp	/^       TM_CCOEFF=CV_TM_CCOEFF, TM_CCOEFF_NORMED=CV_TM_CCOEFF_NORMED };$/;"	e	enum:cv::__anon11
TM_CCOEFF_NORMED	opencv/include/cv.hpp	/^       TM_CCOEFF=CV_TM_CCOEFF, TM_CCOEFF_NORMED=CV_TM_CCOEFF_NORMED };$/;"	e	enum:cv::__anon11
TM_CCORR	opencv/include/cv.hpp	/^       TM_CCORR=CV_TM_CCORR, TM_CCORR_NORMED=CV_TM_CCORR_NORMED,$/;"	e	enum:cv::__anon11
TM_CCORR_NORMED	opencv/include/cv.hpp	/^       TM_CCORR=CV_TM_CCORR, TM_CCORR_NORMED=CV_TM_CCORR_NORMED,$/;"	e	enum:cv::__anon11
TM_SQDIFF	opencv/include/cv.hpp	/^enum { TM_SQDIFF=CV_TM_SQDIFF, TM_SQDIFF_NORMED=CV_TM_SQDIFF_NORMED,$/;"	e	enum:cv::__anon11
TM_SQDIFF_NORMED	opencv/include/cv.hpp	/^enum { TM_SQDIFF=CV_TM_SQDIFF, TM_SQDIFF_NORMED=CV_TM_SQDIFF_NORMED,$/;"	e	enum:cv::__anon11
TYPE_MASK	opencv/include/cxcore.hpp	/^    enum { NONE=0, INT=1, REAL=2, FLOAT=REAL, STR=3, STRING=STR, REF=4, SEQ=5, MAP=6, TYPE_MASK=7,$/;"	e	enum:cv::FileNode::__anon104
TYPE_MASK	opencv/include/cxcore.hpp	/^enum { MAGIC_MASK=0xFFFF0000, TYPE_MASK=0x00000FFF, DEPTH_MASK=7 };$/;"	e	enum:cv::__anon88
T_GeometriccConsistency	opencv/include/cvaux.hpp	/^    float T_GeometriccConsistency;$/;"	m	class:cv::SpinImageModel
T_GroupingCorespondances	opencv/include/cvaux.hpp	/^    float T_GroupingCorespondances;$/;"	m	class:cv::SpinImageModel
Temp	opencv/include/cvtypes.h	/^    float* Temp;            \/* Temporary vector                      *\/$/;"	m	struct:CvConDensation
Temp1	opencv/include/cvtypes.h	/^    float* Temp1;               \/* temp1->data.fl *\/$/;"	m	struct:CvKalman
Temp2	opencv/include/cvtypes.h	/^    float* Temp2;               \/* temp2->data.fl *\/$/;"	m	struct:CvKalman
TermCriteria	opencv/include/cxcore.hpp	/^class CV_EXPORTS TermCriteria$/;"	c	namespace:cv
TermCriteria	opencv/include/cxoperations.hpp	/^inline TermCriteria::TermCriteria() : type(0), maxCount(0), epsilon(0) {}$/;"	f	class:cv::TermCriteria
TermCriteria	opencv/include/cxoperations.hpp	/^inline TermCriteria::TermCriteria(const CvTermCriteria& criteria)$/;"	f	class:cv::TermCriteria
TermCriteria	opencv/include/cxoperations.hpp	/^inline TermCriteria::TermCriteria(int _type, int _maxCount, double _epsilon)$/;"	f	class:cv::TermCriteria
TickMeter	opencv/include/cvaux.hpp	/^class CV_EXPORTS TickMeter$/;"	c	namespace:cv
Tn	opencv/include/ml.h	/^    int Tn;$/;"	m	struct:CvDTreeNode
TrackID	opencv/include/cvvidsurv.hpp	/^    int         TrackID;$/;"	m	struct:CvBlobTrack
TrackbarCallback	opencv/include/highgui.hpp	/^typedef CvTrackbarCallback2 TrackbarCallback;$/;"	t	namespace:cv
TrackingState	opencv/include/cvaux.hpp	/^	enum TrackingState$/;"	g	class:CvFuzzyMeanShiftTracker
TrainData	opencv/include/ml.h	/^typedef CvMLData TrainData;$/;"	t	namespace:cv
TransVideo	KeyBoard.cpp	/^int TransVideo(int argc,char** argv) {$/;"	f
TransferParamsFromChild	opencv/include/cvvidsurv.hpp	/^    void TransferParamsFromChild(CvVSModule* pM, const char* prefix = NULL)$/;"	f	class:CvVSModule
TransferParamsToChild	opencv/include/cvvidsurv.hpp	/^    void TransferParamsToChild(CvVSModule* pM, char* prefix = NULL)$/;"	f	class:CvVSModule
U	opencv/include/cvaux.hpp	/^    CvMat** U; \/\/size of array is equal to number of cameras$/;"	m	class:cv::LevMarqSparse
U16	vascript/ccg/opcodeDes.h	/^typedef unsigned short U16;$/;"	t	namespace:CCG
U32	vascript/ccg/opcodeDes.h	/^typedef unsigned int  U32;$/;"	t	namespace:CCG
U64	vascript/ccg/opcodeDes.h	/^typedef unsigned long long U64;$/;"	t	namespace:CCG
U8	vascript/ccg/opcodeDes.h	/^typedef unsigned char U8;$/;"	t	namespace:CCG
UINT16_MAX	vascript/release/vaslexer.cpp	85;"	d	file:
UINT32_MAX	vascript/release/vaslexer.cpp	88;"	d	file:
UINT8_MAX	vascript/release/vaslexer.cpp	82;"	d	file:
UNDEFINED	opencv/include/cxcore.hpp	/^    enum { UNDEFINED=0, VALUE_EXPECTED=1, NAME_EXPECTED=2, INSIDE_MAP=4 };$/;"	e	enum:cv::FileStorage::__anon103
UNIFORM	opencv/include/cxcore.hpp	/^    enum { A=4164903690U, UNIFORM=0, NORMAL=1 };$/;"	e	enum:cv::RNG::__anon95
UPDATE_WEIGHTS	opencv/include/ml.h	/^    enum { UPDATE_WEIGHTS = 1, NO_INPUT_SCALE = 2, NO_OUTPUT_SCALE = 4 };$/;"	e	enum:CvANN_MLP::__anon56
USER	opencv/include/cxcore.hpp	/^        FLOW=8, USER=16, EMPTY=32, NAMED=64 };$/;"	e	enum:cv::FileNode::__anon104
Uchar	vascript/ccg/ccg.h	/^typedef unsigned char Uchar;$/;"	t	namespace:CCG
Uchar	vascript/ccg/opcodeDes.h	/^typedef unsigned char Uchar;$/;"	t	namespace:CCG
Update	opencv/include/cvvidsurv.hpp	/^    virtual void Update(CvBlob* \/*pBlob*\/, IplImage* \/*pImg*\/, IplImage* \/*pImgFG*\/ = NULL){};$/;"	f	class:CvBlobTrackerOne
Update	opencv/include/cvvidsurv.hpp	/^    virtual void Update(IplImage* pImg, IplImage* pImgFG = NULL)$/;"	f	class:CvBlobTracker
UpdateBlob	opencv/include/cvvidsurv.hpp	/^    virtual void UpdateBlob(int \/*BlobIndex*\/, CvBlob* \/*pBlob*\/, IplImage* \/*pImg*\/, IplImage* \/*pImgFG*\/ = NULL){};$/;"	f	class:CvBlobTracker
UsePPData	opencv/include/cvvidsurv.hpp	/^    int                     UsePPData;$/;"	m	struct:CvBlobTrackerAutoParam1
V	opencv/include/cvaux.hpp	/^    CvMat** V; \/\/size of array is equal to number of points$/;"	m	class:cv::LevMarqSparse
VALUE_EXPECTED	opencv/include/cxcore.hpp	/^    enum { UNDEFINED=0, VALUE_EXPECTED=1, NAME_EXPECTED=2, INSIDE_MAP=4 };$/;"	e	enum:cv::FileStorage::__anon103
VASDEBUG	vascript/debprintf.h	13;"	d
VASDEBUG	vascript/debprintf.h	9;"	d
VASMSG	vascript/debprintf.h	10;"	d
VASMSG	vascript/debprintf.h	14;"	d
VIEDOH	KeyBoard.cpp	/^int VIEDOH = 480;$/;"	v
VIEDOH	dmvideo.cpp	/^int VIEDOH = 480;$/;"	v
VIEDOW	KeyBoard.cpp	/^int VIEDOW =  720;$/;"	v
VIEDOW	dmvideo.cpp	/^int VIEDOW =  720;$/;"	v
VaVar	vascript/vacg.h	/^        VaVar(T& v){$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^        VaVar(argtype_t t, T v){$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^        VaVar(argtype_t t, T*& v){$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^        VaVar(argtype_t t, T** v){$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^    VaVar(){}$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^    VaVar(argtype_t t, pfunc v){$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^    VaVar(argtype_t t, size_t v){$/;"	f	class:VaVar
VaVar	vascript/vacg.h	/^class VaVar{$/;"	c
VaVarRef	vascript/vacg.h	/^typedef VaVar VaVarRef;$/;"	t
VaVarRef	vascript/vacg.h	/^typedef VaVar& VaVarRef;$/;"	t
Value	opencv/include/cvvidsurv.hpp	/^    virtual double Value(int* \/*comp*\/, int \/*x*\/ = 0, int \/*y*\/ = 0){return -1;};$/;"	f	class:CvProb
VarTable	vascript/symbol.h	/^typedef std::vector<Symbol> VarTable;$/;"	t
Vec	opencv/include/cxcore.hpp	/^template<typename _Tp, int cn> class CV_EXPORTS Vec$/;"	c	namespace:cv
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec() {}$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(_Tp v0)$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1)$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2)$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3)$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3, _Tp v4)$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(_Tp v0, _Tp v1, _Tp v2, _Tp v3,$/;"	f	class:cv::Vec
Vec	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::Vec(const Vec<_Tp, cn>& v)$/;"	f	class:cv::Vec
Vec2b	opencv/include/cxcore.hpp	/^typedef Vec<uchar, 2> Vec2b;$/;"	t	namespace:cv
Vec2d	opencv/include/cxcore.hpp	/^typedef Vec<double, 2> Vec2d;$/;"	t	namespace:cv
Vec2f	opencv/include/cxcore.hpp	/^typedef Vec<float, 2> Vec2f;$/;"	t	namespace:cv
Vec2i	opencv/include/cxcore.hpp	/^typedef Vec<int, 2> Vec2i;$/;"	t	namespace:cv
Vec2s	opencv/include/cxcore.hpp	/^typedef Vec<short, 2> Vec2s;$/;"	t	namespace:cv
Vec2w	opencv/include/cxcore.hpp	/^typedef Vec<ushort, 2> Vec2w;$/;"	t	namespace:cv
Vec3b	opencv/include/cxcore.hpp	/^typedef Vec<uchar, 3> Vec3b;$/;"	t	namespace:cv
Vec3d	opencv/include/cxcore.hpp	/^typedef Vec<double, 3> Vec3d;$/;"	t	namespace:cv
Vec3f	opencv/include/cxcore.hpp	/^typedef Vec<float, 3> Vec3f;$/;"	t	namespace:cv
Vec3i	opencv/include/cxcore.hpp	/^typedef Vec<int, 3> Vec3i;$/;"	t	namespace:cv
Vec3s	opencv/include/cxcore.hpp	/^typedef Vec<short, 3> Vec3s;$/;"	t	namespace:cv
Vec3w	opencv/include/cxcore.hpp	/^typedef Vec<ushort, 3> Vec3w;$/;"	t	namespace:cv
Vec4b	opencv/include/cxcore.hpp	/^typedef Vec<uchar, 4> Vec4b;$/;"	t	namespace:cv
Vec4d	opencv/include/cxcore.hpp	/^typedef Vec<double, 4> Vec4d;$/;"	t	namespace:cv
Vec4f	opencv/include/cxcore.hpp	/^typedef Vec<float, 4> Vec4f;$/;"	t	namespace:cv
Vec4i	opencv/include/cxcore.hpp	/^typedef Vec<int, 4> Vec4i;$/;"	t	namespace:cv
Vec4s	opencv/include/cxcore.hpp	/^typedef Vec<short, 4> Vec4s;$/;"	t	namespace:cv
Vec4w	opencv/include/cxcore.hpp	/^typedef Vec<ushort, 4> Vec4w;    $/;"	t	namespace:cv
Vec6d	opencv/include/cxcore.hpp	/^typedef Vec<double, 6> Vec6d;$/;"	t	namespace:cv
Vec6f	opencv/include/cxcore.hpp	/^typedef Vec<float, 6> Vec6f;$/;"	t	namespace:cv
VecReaderProxy	opencv/include/cxoperations.hpp	/^    VecReaderProxy( FileNodeIterator* _it ) : it(_it) {}$/;"	f	class:cv::VecReaderProxy
VecReaderProxy	opencv/include/cxoperations.hpp	/^template<typename _Tp, int numflag> class CV_EXPORTS VecReaderProxy$/;"	c	namespace:cv
VecReaderProxy	opencv/include/cxoperations.hpp	/^template<typename _Tp> class CV_EXPORTS VecReaderProxy<_Tp,1>$/;"	c	namespace:cv
VecWriterProxy	opencv/include/cxoperations.hpp	/^    VecWriterProxy( FileStorage* _fs ) : fs(_fs) {}$/;"	f	class:cv::VecWriterProxy
VecWriterProxy	opencv/include/cxoperations.hpp	/^template<typename _Tp, int numflag> class CV_EXPORTS VecWriterProxy$/;"	c	namespace:cv
VecWriterProxy	opencv/include/cxoperations.hpp	/^template<typename _Tp> class CV_EXPORTS VecWriterProxy<_Tp,1>$/;"	c	namespace:cv
Vector	opencv/include/cxoperations.hpp	/^    Vector() {}$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    Vector(_Tp* _data, size_t _size, bool _copyData=false)$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    Vector(const Vector& d) { *this = d; }$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    Vector(const Vector& d, const Range& r)$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    Vector(const std::vector<_Tp>& vec, bool _copyData=false)$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    Vector(size_t _size)  { resize(_size); }$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    Vector(size_t _size, const _Tp& val)$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^    template<int n> Vector(const Vec<_Tp, n>& vec)$/;"	f	class:cv::Vector
Vector	opencv/include/cxoperations.hpp	/^template <typename _Tp> class CV_EXPORTS Vector$/;"	c	namespace:cv
VideoCapture	opencv/include/highgui.hpp	/^class CV_EXPORTS VideoCapture$/;"	c	namespace:cv
VideoWriter	opencv/include/highgui.hpp	/^class CV_EXPORTS VideoWriter$/;"	c	namespace:cv
View	opencv/include/cvwimage.h	/^WImageView<T> WImage<T>::View(int c, int r, int width, int height) {$/;"	f	class:cv::WImage
View	opencv/include/cvwimage.h	/^WImageViewC<T, C> WImageC<T, C>::View(int c, int r, int width, int height) {$/;"	f	class:cv::WImageC
Vis_index	opencv/include/cvaux.hpp	/^    CvMat* Vis_index; \/\/ matrix which element is index of measurement for point i and camera j$/;"	m	class:cv::LevMarqSparse
W	opencv/include/cvaux.hpp	/^    CvMat* W; $/;"	m	class:cv::LevMarqSparse
W	vascript/ccg/ccg.h	/^				unsigned int W:1; \/\/0 = Operand size determined by CS.D ; 1 = 64 Bit Operand Size$/;"	m	struct:CCG::REX::__anon151::__anon152
WARP_INVERSE_MAP	opencv/include/cv.hpp	/^       INTER_LANCZOS4=4, INTER_MAX=7, WARP_INVERSE_MAP=16 };$/;"	e	enum:cv::__anon5
WImage	opencv/include/cvwimage.h	/^    explicit WImage(IplImage* img) : image_(img) {$/;"	f	class:cv::WImage
WImage	opencv/include/cvwimage.h	/^class WImage$/;"	c	namespace:cv
WImage1_16s	opencv/include/cvwimage.h	/^typedef WImageC<short, 1>        WImage1_16s;$/;"	t	namespace:cv
WImage1_16u	opencv/include/cvwimage.h	/^typedef WImageC<ushort, 1>        WImage1_16u;$/;"	t	namespace:cv
WImage1_b	opencv/include/cvwimage.h	/^typedef WImageC<uchar, 1>        WImage1_b;$/;"	t	namespace:cv
WImage1_f	opencv/include/cvwimage.h	/^typedef WImageC<float, 1>        WImage1_f;$/;"	t	namespace:cv
WImage3_16s	opencv/include/cvwimage.h	/^typedef WImageC<short, 3>        WImage3_16s;$/;"	t	namespace:cv
WImage3_16u	opencv/include/cvwimage.h	/^typedef WImageC<ushort, 3>        WImage3_16u;$/;"	t	namespace:cv
WImage3_b	opencv/include/cvwimage.h	/^typedef WImageC<uchar, 3>        WImage3_b;$/;"	t	namespace:cv
WImage3_f	opencv/include/cvwimage.h	/^typedef WImageC<float, 3>        WImage3_f;$/;"	t	namespace:cv
WImageBuffer	opencv/include/cvwimage.h	/^    WImageBuffer() : WImage<T>(0) {}$/;"	f	class:cv::WImageBuffer
WImageBuffer	opencv/include/cvwimage.h	/^    WImageBuffer(int width, int height, int nchannels) : WImage<T>(0) {$/;"	f	class:cv::WImageBuffer
WImageBuffer	opencv/include/cvwimage.h	/^    explicit WImageBuffer(IplImage* img) : WImage<T>(img) {}$/;"	f	class:cv::WImageBuffer
WImageBuffer	opencv/include/cvwimage.h	/^class WImageBuffer : public WImage<T>$/;"	c	namespace:cv
WImageBuffer1_16s	opencv/include/cvwimage.h	/^typedef WImageBufferC<short, 1>  WImageBuffer1_16s;$/;"	t	namespace:cv
WImageBuffer1_16u	opencv/include/cvwimage.h	/^typedef WImageBufferC<ushort, 1>  WImageBuffer1_16u;$/;"	t	namespace:cv
WImageBuffer1_b	opencv/include/cvwimage.h	/^typedef WImageBufferC<uchar, 1>  WImageBuffer1_b;$/;"	t	namespace:cv
WImageBuffer1_f	opencv/include/cvwimage.h	/^typedef WImageBufferC<float, 1>  WImageBuffer1_f;$/;"	t	namespace:cv
WImageBuffer3_16s	opencv/include/cvwimage.h	/^typedef WImageBufferC<short, 3>  WImageBuffer3_16s;$/;"	t	namespace:cv
WImageBuffer3_16u	opencv/include/cvwimage.h	/^typedef WImageBufferC<ushort, 3>  WImageBuffer3_16u;$/;"	t	namespace:cv
WImageBuffer3_b	opencv/include/cvwimage.h	/^typedef WImageBufferC<uchar, 3>  WImageBuffer3_b;$/;"	t	namespace:cv
WImageBuffer3_f	opencv/include/cvwimage.h	/^typedef WImageBufferC<float, 3>  WImageBuffer3_f;$/;"	t	namespace:cv
WImageBufferC	opencv/include/cvwimage.h	/^    WImageBufferC() : WImageC<T, C>(0) {}$/;"	f	class:cv::WImageBufferC
WImageBufferC	opencv/include/cvwimage.h	/^    WImageBufferC(int width, int height) : WImageC<T, C>(0) {$/;"	f	class:cv::WImageBufferC
WImageBufferC	opencv/include/cvwimage.h	/^    explicit WImageBufferC(IplImage* img) : WImageC<T, C>(img) {}$/;"	f	class:cv::WImageBufferC
WImageBufferC	opencv/include/cvwimage.h	/^class WImageBufferC : public WImageC<T, C>$/;"	c	namespace:cv
WImageBuffer_16s	opencv/include/cvwimage.h	/^typedef WImageBuffer<short>      WImageBuffer_16s;$/;"	t	namespace:cv
WImageBuffer_16u	opencv/include/cvwimage.h	/^typedef WImageBuffer<ushort>      WImageBuffer_16u;$/;"	t	namespace:cv
WImageBuffer_b	opencv/include/cvwimage.h	/^typedef WImageBuffer<uchar>      WImageBuffer_b;$/;"	t	namespace:cv
WImageBuffer_f	opencv/include/cvwimage.h	/^typedef WImageBuffer<float>      WImageBuffer_f;$/;"	t	namespace:cv
WImageC	opencv/include/cvwimage.h	/^    explicit WImageC(IplImage* img) : WImage<T>(img) {$/;"	f	class:cv::WImageC
WImageC	opencv/include/cvwimage.h	/^class WImageC : public WImage<T>$/;"	c	namespace:cv
WImageView	opencv/include/cvwimage.h	/^    WImageView(IplImage* img) : WImage<T>(img) {}$/;"	f	class:cv::WImageView
WImageView	opencv/include/cvwimage.h	/^    WImageView(const WImage<T>& img) : WImage<T>(0) {$/;"	f	class:cv::WImageView
WImageView	opencv/include/cvwimage.h	/^WImageView<T>::WImageView(T* data, int width, int height, int nchannels, int width_step)$/;"	f	class:cv::WImageView
WImageView	opencv/include/cvwimage.h	/^WImageView<T>::WImageView(WImage<T>* img, int c, int r, int width, int height)$/;"	f	class:cv::WImageView
WImageView	opencv/include/cvwimage.h	/^class WImageView : public WImage<T>$/;"	c	namespace:cv
WImageView1_16s	opencv/include/cvwimage.h	/^typedef WImageViewC<short, 1>    WImageView1_16s;$/;"	t	namespace:cv
WImageView1_16u	opencv/include/cvwimage.h	/^typedef WImageViewC<ushort, 1>    WImageView1_16u;$/;"	t	namespace:cv
WImageView1_b	opencv/include/cvwimage.h	/^typedef WImageViewC<uchar, 1>    WImageView1_b;$/;"	t	namespace:cv
WImageView1_f	opencv/include/cvwimage.h	/^typedef WImageViewC<float, 1>    WImageView1_f;$/;"	t	namespace:cv
WImageView3_16s	opencv/include/cvwimage.h	/^typedef WImageViewC<short, 3>    WImageView3_16s;$/;"	t	namespace:cv
WImageView3_16u	opencv/include/cvwimage.h	/^typedef WImageViewC<ushort, 3>    WImageView3_16u;$/;"	t	namespace:cv
WImageView3_b	opencv/include/cvwimage.h	/^typedef WImageViewC<uchar, 3>    WImageView3_b;$/;"	t	namespace:cv
WImageView3_f	opencv/include/cvwimage.h	/^typedef WImageViewC<float, 3>    WImageView3_f;$/;"	t	namespace:cv
WImageViewC	opencv/include/cvwimage.h	/^    WImageViewC(IplImage* img) : WImageC<T, C>(img) {}$/;"	f	class:cv::WImageViewC
WImageViewC	opencv/include/cvwimage.h	/^    WImageViewC(const WImageC<T, C>& img) : WImageC<T, C>(0) {$/;"	f	class:cv::WImageViewC
WImageViewC	opencv/include/cvwimage.h	/^    WImageViewC(const WImageViewC<T, C>& img) : WImageC<T, C>(0) {$/;"	f	class:cv::WImageViewC
WImageViewC	opencv/include/cvwimage.h	/^WImageViewC<T, C>::WImageViewC() : WImageC<T, C>(0) {$/;"	f	class:cv::WImageViewC
WImageViewC	opencv/include/cvwimage.h	/^WImageViewC<T, C>::WImageViewC(T* data, int width, int height, int width_step)$/;"	f	class:cv::WImageViewC
WImageViewC	opencv/include/cvwimage.h	/^WImageViewC<T, C>::WImageViewC(WImageC<T, C>* img, int c, int r, int width, int height)$/;"	f	class:cv::WImageViewC
WImageViewC	opencv/include/cvwimage.h	/^class WImageViewC : public WImageC<T, C>$/;"	c	namespace:cv
WImageView_16s	opencv/include/cvwimage.h	/^typedef WImageView<short>        WImageView_16s;$/;"	t	namespace:cv
WImageView_16u	opencv/include/cvwimage.h	/^typedef WImageView<ushort>        WImageView_16u;$/;"	t	namespace:cv
WImageView_b	opencv/include/cvwimage.h	/^typedef WImageView<uchar>        WImageView_b;$/;"	t	namespace:cv
WImageView_f	opencv/include/cvwimage.h	/^typedef WImageView<float>        WImageView_f;$/;"	t	namespace:cv
WImage_16s	opencv/include/cvwimage.h	/^typedef WImage<short>            WImage_16s;$/;"	t	namespace:cv
WImage_16u	opencv/include/cvwimage.h	/^typedef WImage<ushort>            WImage_16u;$/;"	t	namespace:cv
WImage_b	opencv/include/cvwimage.h	/^typedef WImage<uchar>            WImage_b;$/;"	t	namespace:cv
WImage_f	opencv/include/cvwimage.h	/^typedef WImage<float>            WImage_f;$/;"	t	namespace:cv
WRITE	opencv/include/cxcore.hpp	/^    enum { READ=0, WRITE=1, APPEND=2 };$/;"	e	enum:cv::FileStorage::__anon102
WRITE_1CHAR	vascript/vacg.h	42;"	d
WRITE_1CHAR	vascript/vacg.h	51;"	d
WRITE_1INT	vascript/vacg.h	60;"	d
WRITE_1INT	vascript/vacg.h	62;"	d
WRITE_2CHAR	vascript/vacg.h	43;"	d
WRITE_2CHAR	vascript/vacg.h	52;"	d
WRITE_3CHAR	vascript/vacg.h	44;"	d
WRITE_3CHAR	vascript/vacg.h	53;"	d
WRITE_4CHAR	vascript/vacg.h	45;"	d
WRITE_4CHAR	vascript/vacg.h	54;"	d
WRITE_5CHAR	vascript/vacg.h	46;"	d
WRITE_5CHAR	vascript/vacg.h	55;"	d
WRITE_6CHAR	vascript/vacg.h	47;"	d
WRITE_6CHAR	vascript/vacg.h	56;"	d
WRITE_7CHAR	vascript/vacg.h	48;"	d
WRITE_7CHAR	vascript/vacg.h	57;"	d
WString	opencv/include/cxcore.hpp	/^typedef std::basic_string<wchar_t> WString;$/;"	t	namespace:cv
Width	opencv/include/cvwimage.h	/^    int Width() const {return image_->width; }$/;"	f	class:cv::WImage
Width	opencv/include/highgui.h	/^    int Width() { return !m_img ? 0 : !m_img->roi ? m_img->width : m_img->roi->width; };$/;"	f	class:CvvImage
WidthStep	opencv/include/cvwimage.h	/^    int WidthStep() const {return image_->widthStep; }$/;"	f	class:cv::WImage
Write	opencv/include/cvvidsurv.hpp	/^    virtual void Write(CvFileStorage* fs, const char* name)$/;"	f	class:CvBlobSeq
WriteStructContext	opencv/include/cxoperations.hpp	/^    WriteStructContext(FileStorage& _fs, const string& name,$/;"	f	class:cv::WriteStructContext
WriteStructContext	opencv/include/cxoperations.hpp	/^class CV_EXPORTS WriteStructContext$/;"	c	namespace:cv
X	opencv/include/cvaux.hpp	/^    CvMat* X; \/\/measurement $/;"	m	class:cv::LevMarqSparse
X	vascript/ccg/ccg.h	/^				unsigned int X:1; \/\/Extension of the SIB index field $/;"	m	struct:CCG::REX::__anon151::__anon152
XMMS	vascript/ccg/ccg.h	/^} XMMS;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon146
Xcoef	opencv/include/cvaux.h	/^    double Xcoef;$/;"	m	struct:CvStereoLineCoeff
XcoefA	opencv/include/cvaux.h	/^    double XcoefA;$/;"	m	struct:CvStereoLineCoeff
XcoefAB	opencv/include/cvaux.h	/^    double XcoefAB;$/;"	m	struct:CvStereoLineCoeff
XcoefB	opencv/include/cvaux.h	/^    double XcoefB;$/;"	m	struct:CvStereoLineCoeff
YAPE	opencv/include/cvaux.hpp	/^typedef LDetector YAPE;$/;"	t	namespace:cv
YYABORT	vascript/release/vasparser.cpp	1034;"	d	file:
YYACCEPT	vascript/release/vasparser.cpp	1033;"	d	file:
YYBACKUP	vascript/release/vasparser.cpp	1042;"	d	file:
YYBEGINDECLARELABEL	vascript/release/vasparser.cpp	973;"	d	file:
YYBEGINDECLARELABEL	vascript/release/vasparser.cpp	982;"	d	file:
YYBEGINGOTO	vascript/release/vasparser.cpp	969;"	d	file:
YYBEGINGOTO	vascript/release/vasparser.cpp	979;"	d	file:
YYBISON	vascript/release/vasparser.cpp	98;"	d	file:
YYDEBUG	vascript/release/vasparser.cpp	307;"	d	file:
YYDEBUG	vascript/release/vasparser.h	534;"	d
YYDECLARELABEL	vascript/release/vasparser.cpp	974;"	d	file:
YYDECLARELABEL	vascript/release/vasparser.cpp	983;"	d	file:
YYEMPTY	vascript/release/vasparser.cpp	1031;"	d	file:
YYENDDECLARELABEL	vascript/release/vasparser.cpp	975;"	d	file:
YYENDDECLARELABEL	vascript/release/vasparser.cpp	984;"	d	file:
YYENDGOTO	vascript/release/vasparser.cpp	972;"	d	file:
YYENDGOTO	vascript/release/vasparser.cpp	981;"	d	file:
YYEOF	vascript/release/vasparser.cpp	1032;"	d	file:
YYERRCODE	vascript/release/vasparser.cpp	1055;"	d	file:
YYERROR	vascript/release/vasparser.cpp	1035;"	d	file:
YYFAIL	vascript/release/vasparser.cpp	1040;"	d	file:
YYFINAL	vascript/release/vasparser.cpp	724;"	d	file:
YYFLAG	vascript/release/vasparser.cpp	725;"	d	file:
YYGOTO	vascript/release/vasparser.cpp	968;"	d	file:
YYGOTO	vascript/release/vasparser.cpp	978;"	d	file:
YYINITDEPTH	vascript/release/vasparser.cpp	1094;"	d	file:
YYLABEL	vascript/release/vasparser.cpp	971;"	d	file:
YYLABEL	vascript/release/vasparser.cpp	980;"	d	file:
YYLAST	vascript/release/vasparser.cpp	888;"	d	file:
YYLEX	vascript/release/vasparser.cpp	1059;"	d	file:
YYLEX	vascript/release/vasparser.cpp	1076;"	d	file:
YYLEX	vascript/release/vasparser.cpp	1078;"	d	file:
YYLTYPE	vascript/release/vasparser.cpp	286;"	d	file:
YYLTYPE	vascript/release/vasparser.h	530;"	d
YYLTYPE	vascript/yy.lex.parser.h	/^  YYLTYPE;$/;"	t	typeref:struct:YYLTYPE
YYLTYPE	vascript/yy.lex.parser.h	/^  struct YYLTYPE$/;"	s
YYLTYPE	vascript/yy.lex.parser.h	44;"	d
YYLeng	vascript/flexbison/flexlexer.h	/^	int YYLeng()		{ return yyleng; }$/;"	f	class:FlexLexer
YYMAXDEPTH	vascript/release/vasparser.cpp	1101;"	d	file:
YYMAXDEPTH	vascript/release/vasparser.cpp	1105;"	d	file:
YYNTBASE	vascript/release/vasparser.cpp	726;"	d	file:
YYPOPSTACK	vascript/release/vasparser.cpp	1171;"	d	file:
YYPRINT	vascript/release/vasparser.cpp	115;"	d	file:
YYPRINT	vascript/release/vasparser.h	29;"	d
YYPURE	vascript/release/vasparser.cpp	301;"	d	file:
YYRECOVERING	vascript/release/vasparser.cpp	1041;"	d	file:
YYSTATE	vascript/release/vaslexer.cpp	145;"	d	file:
YYSTYPE	vascript/release/vasparser.cpp	132;"	d	file:
YYSTYPE	vascript/release/vasparser.h	46;"	d
YYTABLES_NAME	vascript/release/vaslexer.cpp	2322;"	d	file:
YYTERROR	vascript/release/vasparser.cpp	1054;"	d	file:
YYTRANSLATE	vascript/release/vasparser.cpp	728;"	d	file:
YYText	vascript/flexbison/flexlexer.h	/^	const char* YYText()	{ return yytext; }$/;"	f	class:FlexLexer
YY_AT_BOL	vascript/release/vaslexer.cpp	313;"	d	file:
YY_BREAK	vascript/release/vaslexer.cpp	784;"	d	file:
YY_BUFFER_EOF_PENDING	vascript/release/vaslexer.cpp	267;"	d	file:
YY_BUFFER_NEW	vascript/release/vaslexer.cpp	255;"	d	file:
YY_BUFFER_NORMAL	vascript/release/vaslexer.cpp	256;"	d	file:
YY_BUFFER_STATE	vascript/release/vaslexer.cpp	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	vascript/release/vaslexer.cpp	162;"	d	file:
YY_BUF_SIZE	vascript/release/vaslexer.cpp	164;"	d	file:
YY_CHAR	vascript/release/vaslexer.cpp	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	vascript/release/vaslexer.cpp	278;"	d	file:
YY_CURRENT_BUFFER_LVALUE	vascript/release/vaslexer.cpp	285;"	d	file:
YY_DECL	vascript/release/vaslexer.cpp	772;"	d	file:
YY_DECL_IS_OURS	vascript/release/vaslexer.cpp	771;"	d	file:
YY_DO_BEFORE_ACTION	vascript/release/vaslexer.cpp	327;"	d	file:
YY_END_OF_BUFFER	vascript/release/vaslexer.cpp	335;"	d	file:
YY_END_OF_BUFFER_CHAR	vascript/release/vaslexer.cpp	153;"	d	file:
YY_EXIT_FAILURE	vascript/release/vaslexer.cpp	2248;"	d	file:
YY_EXTRA_TYPE	vascript/release/vaslexer.cpp	706;"	d	file:
YY_FATAL_ERROR	vascript/release/vaslexer.cpp	762;"	d	file:
YY_FLEX_MAJOR_VERSION	vascript/release/vaslexer.cpp	10;"	d	file:
YY_FLEX_MINOR_VERSION	vascript/release/vaslexer.cpp	11;"	d	file:
YY_FLEX_SUBMINOR_VERSION	vascript/release/vaslexer.cpp	12;"	d	file:
YY_INPUT	vascript/release/vaslexer.cpp	740;"	d	file:
YY_INTERACTIVE	vascript/release/vaslexer.cpp	320;"	d	file:
YY_INT_ALIGNED	vascript/release/vaslexer.cpp	5;"	d	file:
YY_LESS_LINENO	vascript/release/vaslexer.cpp	183;"	d	file:
YY_MORE_ADJ	vascript/release/vaslexer.cpp	667;"	d	file:
YY_NEW_FILE	vascript/release/vaslexer.cpp	151;"	d	file:
YY_NULL	vascript/release/vaslexer.cpp	125;"	d	file:
YY_NUM_RULES	vascript/release/vaslexer.cpp	334;"	d	file:
YY_READ_BUF_SIZE	vascript/release/vaslexer.cpp	725;"	d	file:
YY_READ_BUF_SIZE	vascript/release/vaslexer.cpp	727;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	vascript/release/vaslexer.cpp	668;"	d	file:
YY_RULE_SETUP	vascript/release/vaslexer.cpp	787;"	d	file:
YY_SC_TO_UI	vascript/release/vaslexer.cpp	132;"	d	file:
YY_START	vascript/release/vaslexer.cpp	144;"	d	file:
YY_START_STACK_INCR	vascript/release/vaslexer.cpp	757;"	d	file:
YY_STATE_BUF_SIZE	vascript/release/vaslexer.cpp	170;"	d	file:
YY_STATE_EOF	vascript/release/vaslexer.cpp	148;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	vascript/release/vaslexer.cpp	207;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	vascript/release/vaslexer.cpp	173;"	d	file:
YY_TYPEDEF_YY_SIZE_T	vascript/release/vaslexer.cpp	202;"	d	file:
YY_USER_ACTION	vascript/release/vaslexer.cpp	779;"	d	file:
YY_USE_CONST	vascript/release/vaslexer.cpp	106;"	d	file:
YY_USE_CONST	vascript/release/vaslexer.cpp	113;"	d	file:
YY_vasParser_BISON	vascript/release/vasparser.cpp	137;"	d	file:
YY_vasParser_CHAR	vascript/release/vasparser.cpp	/^ int    YY_vasParser_CHAR;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_CHAR	vascript/release/vasparser.cpp	/^int     YY_vasParser_CHAR;                      \/*  the lookahead symbol        *\/$/;"	v
YY_vasParser_CHAR	vascript/release/vasparser.cpp	253;"	d	file:
YY_vasParser_CHAR	vascript/release/vasparser.h	/^  int YY_vasParser_CHAR;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_CHAR	vascript/release/vasparser.h	168;"	d
YY_vasParser_CLASS	vascript/release/vasparser.cpp	407;"	d	file:
YY_vasParser_CLASS	vascript/release/vasparser.h	294;"	d
YY_vasParser_COMPATIBILITY	vascript/release/vasparser.cpp	141;"	d	file:
YY_vasParser_COMPATIBILITY	vascript/release/vasparser.cpp	143;"	d	file:
YY_vasParser_COMPATIBILITY	vascript/release/vasparser.h	53;"	d
YY_vasParser_COMPATIBILITY	vascript/release/vasparser.h	55;"	d
YY_vasParser_CONSTRUCTOR_CODE	vascript/release/vasparser.cpp	425;"	d	file:
YY_vasParser_CONSTRUCTOR_INIT	vascript/release/vasparser.cpp	428;"	d	file:
YY_vasParser_CONSTRUCTOR_PARAM	vascript/release/vasparser.cpp	422;"	d	file:
YY_vasParser_CONSTRUCTOR_PARAM	vascript/release/vasparser.h	314;"	d
YY_vasParser_DEBUG	vascript/release/vasparser.cpp	162;"	d	file:
YY_vasParser_DEBUG	vascript/release/vasparser.h	77;"	d
YY_vasParser_DEBUG_FLAG	vascript/release/vasparser.cpp	/^ int YY_vasParser_DEBUG_FLAG;   \/*  nonzero means print parse trace     *\/$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_DEBUG_FLAG	vascript/release/vasparser.cpp	/^int YY_vasParser_DEBUG_FLAG;                    \/*  nonzero means print parse trace     *\/$/;"	v
YY_vasParser_DEBUG_FLAG	vascript/release/vasparser.cpp	259;"	d	file:
YY_vasParser_DEBUG_FLAG	vascript/release/vasparser.h	/^   int YY_vasParser_DEBUG_FLAG;	\/*  nonzero means print parse trace	*\/$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_DEBUG_FLAG	vascript/release/vasparser.h	176;"	d
YY_vasParser_ENUM_TOKEN	vascript/release/vasparser.cpp	438;"	d	file:
YY_vasParser_ENUM_TOKEN	vascript/release/vasparser.h	324;"	d
YY_vasParser_ERROR	vascript/release/vasparser.cpp	262;"	d	file:
YY_vasParser_ERROR	vascript/release/vasparser.h	180;"	d
YY_vasParser_ERROR_BODY	vascript/release/vasparser.cpp	/^ virtual void YY_vasParser_ERROR(char *msg) YY_vasParser_ERROR_BODY;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_ERROR_BODY	vascript/release/vasparser.cpp	102;"	d	file:
YY_vasParser_ERROR_BODY	vascript/release/vasparser.cpp	419;"	d	file:
YY_vasParser_ERROR_BODY	vascript/release/vasparser.h	/^ virtual void YY_vasParser_ERROR(char *msg) YY_vasParser_ERROR_BODY;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_ERROR_BODY	vascript/release/vasparser.h	16;"	d
YY_vasParser_ERROR_BODY	vascript/release/vasparser.h	310;"	d
YY_vasParser_ERROR_VERBOSE	vascript/release/vasparser.cpp	313;"	d	file:
YY_vasParser_INHERIT	vascript/release/vasparser.cpp	/^class YY_vasParser_CLASS YY_vasParser_INHERIT$/;"	c	file:
YY_vasParser_INHERIT	vascript/release/vasparser.cpp	410;"	d	file:
YY_vasParser_INHERIT	vascript/release/vasparser.h	/^class YY_vasParser_CLASS YY_vasParser_INHERIT$/;"	c
YY_vasParser_INHERIT	vascript/release/vasparser.h	298;"	d
YY_vasParser_LEX	vascript/release/vasparser.cpp	244;"	d	file:
YY_vasParser_LEX	vascript/release/vasparser.h	156;"	d
YY_vasParser_LEX_BODY	vascript/release/vasparser.cpp	/^ virtual int  YY_vasParser_LEX (YY_vasParser_STYPE *YY_vasParser_LVAL) YY_vasParser_LEX_BODY;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_LEX_BODY	vascript/release/vasparser.cpp	/^ virtual int  YY_vasParser_LEX (YY_vasParser_STYPE *YY_vasParser_LVAL,YY_vasParser_LTYPE *YY_vasParser_LLOC) YY_vasParser_LEX_BODY;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_LEX_BODY	vascript/release/vasparser.cpp	/^ virtual int YY_vasParser_LEX() YY_vasParser_LEX_BODY;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_LEX_BODY	vascript/release/vasparser.cpp	103;"	d	file:
YY_vasParser_LEX_BODY	vascript/release/vasparser.cpp	416;"	d	file:
YY_vasParser_LEX_BODY	vascript/release/vasparser.h	/^   virtual int  YY_vasParser_LEX(YY_vasParser_STYPE *YY_vasParser_LVAL) YY_vasParser_LEX_BODY;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_LEX_BODY	vascript/release/vasparser.h	/^   virtual int  YY_vasParser_LEX(YY_vasParser_STYPE *YY_vasParser_LVAL,YY_vasParser_LTYPE *YY_vasParser_LLOC) YY_vasParser_LEX_BODY;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_LEX_BODY	vascript/release/vasparser.h	/^  virtual int YY_vasParser_LEX() YY_vasParser_LEX_BODY;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_LEX_BODY	vascript/release/vasparser.h	17;"	d
YY_vasParser_LEX_BODY	vascript/release/vasparser.h	306;"	d
YY_vasParser_LLOC	vascript/release/vasparser.cpp	/^ YY_vasParser_LTYPE YY_vasParser_LLOC;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_LLOC	vascript/release/vasparser.cpp	/^YY_vasParser_LTYPE YY_vasParser_LLOC;   \/*  location data for the lookahead     *\/$/;"	v
YY_vasParser_LLOC	vascript/release/vasparser.cpp	250;"	d	file:
YY_vasParser_LLOC	vascript/release/vasparser.h	/^   YY_vasParser_LTYPE YY_vasParser_LLOC;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_LLOC	vascript/release/vasparser.h	164;"	d
YY_vasParser_LSP_NEEDED	vascript/release/vasparser.cpp	101;"	d	file:
YY_vasParser_LSP_NEEDED	vascript/release/vasparser.cpp	319;"	d	file:
YY_vasParser_LSP_NEEDED	vascript/release/vasparser.h	15;"	d
YY_vasParser_LTYPE	vascript/release/vasparser.cpp	151;"	d	file:
YY_vasParser_LTYPE	vascript/release/vasparser.cpp	228;"	d	file:
YY_vasParser_LTYPE	vascript/release/vasparser.h	141;"	d
YY_vasParser_LTYPE	vascript/release/vasparser.h	63;"	d
YY_vasParser_LVAL	vascript/release/vasparser.cpp	/^ YY_vasParser_STYPE YY_vasParser_LVAL;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_LVAL	vascript/release/vasparser.cpp	/^YY_vasParser_STYPE      YY_vasParser_LVAL;              \/*  the semantic value of the *\/$/;"	v
YY_vasParser_LVAL	vascript/release/vasparser.cpp	247;"	d	file:
YY_vasParser_LVAL	vascript/release/vasparser.h	/^  YY_vasParser_STYPE YY_vasParser_LVAL;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_LVAL	vascript/release/vasparser.h	160;"	d
YY_vasParser_MEMBERS	vascript/release/vasparser.cpp	413;"	d	file:
YY_vasParser_MEMBERS	vascript/release/vasparser.h	302;"	d
YY_vasParser_NERRS	vascript/release/vasparser.cpp	/^ int   YY_vasParser_NERRS;$/;"	m	class:YY_vasParser_INHERIT	file:
YY_vasParser_NERRS	vascript/release/vasparser.cpp	/^int YY_vasParser_NERRS;                 \/*  number of parse errors so far *\/$/;"	v
YY_vasParser_NERRS	vascript/release/vasparser.cpp	256;"	d	file:
YY_vasParser_NERRS	vascript/release/vasparser.h	/^  int YY_vasParser_NERRS;$/;"	m	class:YY_vasParser_INHERIT
YY_vasParser_NERRS	vascript/release/vasparser.h	172;"	d
YY_vasParser_PARSE	vascript/release/vasparser.cpp	241;"	d	file:
YY_vasParser_PARSE	vascript/release/vasparser.h	152;"	d
YY_vasParser_PARSE_PARAM	vascript/release/vasparser.cpp	268;"	d	file:
YY_vasParser_PARSE_PARAM	vascript/release/vasparser.cpp	272;"	d	file:
YY_vasParser_PARSE_PARAM	vascript/release/vasparser.cpp	278;"	d	file:
YY_vasParser_PARSE_PARAM	vascript/release/vasparser.h	187;"	d
YY_vasParser_PARSE_PARAM	vascript/release/vasparser.h	195;"	d
YY_vasParser_PARSE_PARAM_DEF	vascript/release/vasparser.h	189;"	d
YY_vasParser_STYPE	vascript/release/vasparser.cpp	130;"	d	file:
YY_vasParser_STYPE	vascript/release/vasparser.cpp	157;"	d	file:
YY_vasParser_STYPE	vascript/release/vasparser.cpp	237;"	d	file:
YY_vasParser_STYPE	vascript/release/vasparser.h	147;"	d
YY_vasParser_STYPE	vascript/release/vasparser.h	44;"	d
YY_vasParser_STYPE	vascript/release/vasparser.h	70;"	d
YY_vasParser_USE_CONST_TOKEN	vascript/release/vasparser.cpp	432;"	d	file:
YY_vasParser_USE_CONST_TOKEN	vascript/release/vasparser.h	318;"	d
YY_vasParser_USE_GOTO	vascript/release/vasparser.cpp	168;"	d	file:
YY_vasParser_USE_GOTO	vascript/release/vasparser.cpp	174;"	d	file:
YY_vasParser_USE_GOTO	vascript/release/vasparser.h	84;"	d
YY_vasParser_USE_GOTO	vascript/release/vasparser.h	90;"	d
YY_vasParser_h_included	vascript/release/vasparser.cpp	1;"	d	file:
YY_vasParser_h_included	vascript/release/vasparser.h	2;"	d
Ycoef	opencv/include/cvaux.h	/^    double Ycoef;$/;"	m	struct:CvStereoLineCoeff
YcoefA	opencv/include/cvaux.h	/^    double YcoefA;$/;"	m	struct:CvStereoLineCoeff
YcoefAB	opencv/include/cvaux.h	/^    double YcoefAB;$/;"	m	struct:CvStereoLineCoeff
YcoefB	opencv/include/cvaux.h	/^    double YcoefB;$/;"	m	struct:CvStereoLineCoeff
Yj	opencv/include/cvaux.hpp	/^    CvMat** Yj; \/\/length of array is i = num_points$/;"	m	class:cv::LevMarqSparse
ZERO	vascript/vacg.h	/^	ZERO=0, PRV_FRAME= -1, CUR_FRAME = 0, NXT_FRAME=1$/;"	e	enum:__anon119
Zcoef	opencv/include/cvaux.h	/^    double Zcoef;$/;"	m	struct:CvStereoLineCoeff
ZcoefA	opencv/include/cvaux.h	/^    double ZcoefA;$/;"	m	struct:CvStereoLineCoeff
ZcoefAB	opencv/include/cvaux.h	/^    double ZcoefAB;$/;"	m	struct:CvStereoLineCoeff
ZcoefB	opencv/include/cvaux.h	/^    double ZcoefB;$/;"	m	struct:CvStereoLineCoeff
_BIND_TO_CURRENT_CRT_VERSION	opencv/include/cxtypes.h	52;"	d
_BIND_TO_CURRENT_VCLIBS_VERSION	opencv/include/cxtypes.h	55;"	d
_BITMAP_HEADNER__	bmp.h	2;"	d
_CRT_SECURE_NO_DEPRECATE	opencv/include/cxtypes.h	47;"	d
_CVCOMPAT_H_	opencv/include/cvcompat.h	51;"	d
_CVTYPES_H_	opencv/include/cvtypes.h	43;"	d
_CVVERSION_H_	opencv/include/cvver.h	48;"	d
_CV_HPP_	opencv/include/cv.hpp	44;"	d
_CV_H_	opencv/include/cv.h	44;"	d
_CV_WIMAGE_H_	opencv/include/cvwimage.h	101;"	d
_CXCORE_ERROR_H_	opencv/include/cxerror.h	43;"	d
_CXCORE_HPP_	opencv/include/cxcore.hpp	44;"	d
_CXCORE_H_	opencv/include/cxcore.h	45;"	d
_CXCORE_MISC_H_	opencv/include/cxmisc.h	49;"	d
_CXCORE_TYPES_H_	opencv/include/cxtypes.h	44;"	d
_CvPixelPosition32f	opencv/include/cvcompat.h	/^typedef struct _CvPixelPosition32f$/;"	s
_CvPixelPosition8s	opencv/include/cvcompat.h	/^typedef struct _CvPixelPosition8s$/;"	s
_CvPixelPosition8u	opencv/include/cvcompat.h	/^typedef struct _CvPixelPosition8u$/;"	s
_HIGHGUI_HPP_	opencv/include/highgui.hpp	44;"	d
_HIGH_GUI_	opencv/include/highgui.h	43;"	d
_INC_WINDOWS	opencv/include/cxcore.h	55;"	d
_INC_WINDOWS	opencv/include/cxcore.h	65;"	d
_IplConvKernel	opencv/include/cxtypes.h	/^typedef struct _IplConvKernel$/;"	s
_IplConvKernelFP	opencv/include/cxtypes.h	/^typedef struct _IplConvKernelFP$/;"	s
_IplImage	opencv/include/cxtypes.h	/^typedef struct _IplImage$/;"	s
_IplROI	opencv/include/cxtypes.h	/^typedef struct _IplROI$/;"	s
_OPENCV_CORE_MAT_OPERATIONS_H_	opencv/include/cxmat.hpp	44;"	d
_OPENCV_CORE_OPERATIONS_H_	opencv/include/cxoperations.hpp	44;"	d
_STR	testtok.cpp	19;"	d	file:
_UNISTD_H	vascript/flexbison/unistd.h	6;"	d
__ALLOCA_alloca	vascript/release/vasparser.cpp	1006;"	d	file:
__ALLOCA_free	vascript/release/vasparser.cpp	1007;"	d	file:
__ALLOCA_return	vascript/release/vasparser.cpp	1010;"	d	file:
__ALLOCA_return	vascript/release/vasparser.cpp	1016;"	d	file:
__BEGIN__	opencv/include/cxerror.h	183;"	d
__CCG_HEADER__	vascript/ccg/ccg.h	19;"	d
__CLEANUP__	opencv/include/cxerror.h	185;"	d
__CVAUX_HPP__	opencv/include/cvaux.hpp	43;"	d
__CVAUX__H__	opencv/include/cvaux.h	43;"	d
__CVVIDEOSURVEILLANCE_H__	opencv/include/cvvidsurv.hpp	44;"	d
__END__	opencv/include/cxerror.h	184;"	d
__FLEX_LEXER_H	vascript/flexbison/flexlexer.h	46;"	d
__HAVE_NO_ALLOCA	vascript/release/vasparser.cpp	43;"	d	file:
__LEX__HEADER__	vascript/token.h	2;"	d
__ML_H__	opencv/include/ml.h	42;"	d
__MSDOS_AND_ALIKE	vascript/release/vasparser.cpp	39;"	d	file:
__MSDOS_AND_ALIKE	vascript/release/vasparser.cpp	44;"	d	file:
__Node_HEADER__	vascript/treeNode.h	2;"	d
__OPCODE_DES_HEADER__	vascript/ccg/opcodeDes.h	2;"	d
__OP_x86_32__header__	vascript/ccg/op_x86_32.h	2;"	d
__OP_x86_64__header__	vascript/ccg/op_x86_64.h	2;"	d
__OP_x86_header__	vascript/ccg/opname_x86.h	2;"	d
__STDC_LIMIT_MACROS	vascript/release/vaslexer.cpp	44;"	d	file:
__TRANSFORM_CVKERNEL__HEADER__	cvKernel.h	2;"	d
__TRANSFORM_KERNEL_TEMPLATE_HEADER__	Kernel.hxx	2;"	d
__TRANSFORM_KERNEL__HEADER__	Kernel.h	2;"	d
__VACG_HEADER__	vascript/vacg.h	2;"	d
__alloca_free_ptr	vascript/release/vasparser.cpp	/^int __alloca_free_ptr(char *ptr,char *ref)$/;"	f
__cplusplus	vascript/release/vasparser.cpp	80;"	d	file:
__cplusplus	vascript/release/vasparser.h	9;"	d
__inline__	bmp.cpp	4;"	d	file:
__yy_bcopy	vascript/release/vasparser.cpp	/^static void __yy_bcopy (char *from, char *to, int count)$/;"	f	file:
__yy_bcopy	vascript/release/vasparser.cpp	1110;"	d	file:
_eachgray	bmp.h	122;"	d
_eachrgb	bmp.h	120;"	d
_foreach_gray	bmp.h	148;"	d
_foreach_rgb	bmp.h	136;"	d
_gray2rgb_t	transColor.cpp	/^    _gray2rgb_t(){rgb.R =0;rgb.G = 0; rgb.B = 0; counts = 0;};$/;"	f	struct:dmFrameSimple::_gray2rgb_t
_gray2rgb_t	transColor.cpp	/^typedef struct _gray2rgb_t$/;"	s	namespace:dmFrameSimple	file:
a	vascript/ccg/ccg.h	/^    char a[8];$/;"	m	union:CCG::__anon160
a1	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5; A6 a6;$/;"	m	class:cv::MatExpr_Op6_
a1	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5;$/;"	m	class:cv::MatExpr_Op5_
a1	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4;$/;"	m	class:cv::MatExpr_Op4_
a1	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3;$/;"	m	class:cv::MatExpr_Op3_
a1	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2;$/;"	m	class:cv::MatExpr_Op2_
a1	opencv/include/cxmat.hpp	/^    A1 a1;$/;"	m	class:cv::MatExpr_Op1_
a2	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5; A6 a6;$/;"	m	class:cv::MatExpr_Op6_
a2	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5;$/;"	m	class:cv::MatExpr_Op5_
a2	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4;$/;"	m	class:cv::MatExpr_Op4_
a2	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3;$/;"	m	class:cv::MatExpr_Op3_
a2	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2;$/;"	m	class:cv::MatExpr_Op2_
a3	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5; A6 a6;$/;"	m	class:cv::MatExpr_Op6_
a3	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5;$/;"	m	class:cv::MatExpr_Op5_
a3	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4;$/;"	m	class:cv::MatExpr_Op4_
a3	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3;$/;"	m	class:cv::MatExpr_Op3_
a4	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5; A6 a6;$/;"	m	class:cv::MatExpr_Op6_
a4	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5;$/;"	m	class:cv::MatExpr_Op5_
a4	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4;$/;"	m	class:cv::MatExpr_Op4_
a5	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5; A6 a6;$/;"	m	class:cv::MatExpr_Op6_
a5	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5;$/;"	m	class:cv::MatExpr_Op5_
a6	opencv/include/cxmat.hpp	/^    A1 a1; A2 a2; A3 a3; A4 a4; A5 a5; A6 a6;$/;"	m	class:cv::MatExpr_Op6_
abs	opencv/include/cxmat.hpp	/^abs(const Mat& a)$/;"	f	namespace:cv
abs	opencv/include/cxmat.hpp	/^abs(const MatExpr_<MatExpr_Op2_<A, B, M, MatOp_Sub_<Mat> >, M>& a)$/;"	f	namespace:cv
abs	opencv/include/cxmat.hpp	/^abs(const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
abs	opencv/include/cxoperations.hpp	/^double abs(const Complex<_Tp>& a)$/;"	f	namespace:cv
activ_func	opencv/include/ml.h	/^    int activ_func;$/;"	m	class:CvANN_MLP
active_var_mask	opencv/include/ml.h	/^    CvMat* active_var_mask;$/;"	m	class:CvRTrees
active_vars	opencv/include/ml.h	/^    CvMat* active_vars;$/;"	m	class:CvBoost
active_vars_abs	opencv/include/ml.h	/^    CvMat* active_vars_abs;$/;"	m	class:CvBoost
addChild	vascript/graph.hxx	/^    void addChild( FlowGraph* _child){ $/;"	f	class:FlowGraph
addChild	vascript/treeNode.cpp	/^void Node::addChild(Node* child_)$/;"	f	class:Node
addFirstChild	vascript/treeNode.cpp	/^void Node::addFirstChild(Node* child_)$/;"	f	class:Node
addFunction	vascript/graph.hxx	/^    void addFunction(Function* f) { m_functions -> push_back(f);}$/;"	f	class:FunctionList
addref	opencv/include/cxcore.h	/^    void addref() const$/;"	f	class:CvMatrix
addref	opencv/include/cxmat.hpp	/^inline void Mat::addref()$/;"	f	class:cv::Mat
addref	opencv/include/cxmat.hpp	/^inline void MatND::addref()$/;"	f	class:cv::MatND
addref	opencv/include/cxmat.hpp	/^inline void SparseMat::addref()$/;"	f	class:cv::SparseMat
addref	opencv/include/cxoperations.hpp	/^    void addref() { if( hdr.refcount ) CV_XADD(hdr.refcount, 1); }$/;"	f	class:cv::Vector
addref	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Ptr<_Tp>::addref()$/;"	f	class:cv::Ptr
address	opencv/include/cxcore.hpp	/^    const_pointer address(const_reference r) { return &r; }$/;"	f	class:cv::Allocator
address	opencv/include/cxcore.hpp	/^    pointer address(reference r) { return &r; }$/;"	f	class:cv::Allocator
adj_matr	opencv/include/cvaux.h	/^    int**    adj_matr;$/;"	m	struct:CvCliqueFinder
adjustROI	opencv/include/cxmat.hpp	/^inline Mat& Mat::adjustROI( int dtop, int dbottom, int dleft, int dright )$/;"	f	class:cv::Mat
adjustROI	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>& Mat_<_Tp>::adjustROI( int dtop, int dbottom, int dleft, int dright )$/;"	f	class:cv::Mat_
align	opencv/include/cxtypes.h	/^    int  align;             \/* Alignment of image rows (4 or 8).$/;"	m	struct:_IplImage
alignPtr	opencv/include/cxcore.hpp	/^template<typename _Tp> static inline _Tp* alignPtr(_Tp* ptr, int n=(int)sizeof(_Tp))$/;"	f	namespace:cv
alignSize	opencv/include/cxcore.hpp	/^static inline size_t alignSize(size_t sz, int n)$/;"	f	namespace:cv
all	opencv/include/cxoperations.hpp	/^inline Range Range::all() { return Range(INT_MIN, INT_MAX); }$/;"	f	class:cv::Range
all	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn> Vec<_Tp, cn>::all(_Tp alpha)$/;"	f	class:cv::Vec
all	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp> Scalar_<_Tp>::all(_Tp v0)$/;"	f	class:cv::Scalar_
allocFrame	vascript/graph.cpp	/^void  FlowGraph::allocFrame(FlowGraph* graph){$/;"	f	class:FlowGraph
alloca	opencv/include/cxmisc.h	124;"	d
alloca	opencv/include/cxmisc.h	125;"	d
alloca	vascript/release/vasparser.cpp	49;"	d	file:
alloca	vascript/release/vasparser.cpp	58;"	d	file:
allocate	opencv/include/cxcore.hpp	/^    pointer allocate(size_type count, const void* =0)$/;"	f	class:cv::Allocator
allocate	opencv/include/cxcore.hpp	/^template<typename _Tp> static inline _Tp* allocate(size_t n)$/;"	f	namespace:cv
allocate	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline void AutoBuffer<_Tp, fixed_size>::allocate(size_t _size)$/;"	f	class:cv::AutoBuffer
allzero	opencv/include/cvaux.hpp	/^    const static Point3f allzero;$/;"	m	class:cv::Mesh3D
alpha	opencv/include/cvtypes.h	/^    float* alpha;$/;"	m	struct:CvHaarClassifier
alpha	opencv/include/ml.h	/^    double alpha;$/;"	m	struct:CvDTreeNode
alpha	opencv/include/ml.h	/^    double* alpha;$/;"	m	class:CvSVMSolver
alpha	opencv/include/ml.h	/^    double* alpha;$/;"	m	struct:CvSVMDecisionFunc
alpha1	opencv/include/cvaux.h	/^    float  alpha1;		\/* How quickly we forget old background pixel values seen.  Typically set to 0.1  				*\/$/;"	m	struct:CvFGDStatModelParams
alpha2	opencv/include/cvaux.h	/^    float  alpha2;		\/* "Controls speed of feature learning". Depends on T. Typical value circa 0.005. 				*\/$/;"	m	struct:CvFGDStatModelParams
alpha3	opencv/include/cvaux.h	/^    float  alpha3;		\/* Alternate to alpha2, used (e.g.) for quicker initial convergence. Typical value 0.1.				*\/$/;"	m	struct:CvFGDStatModelParams
alphaChannel	opencv/include/cxtypes.h	/^    int  alphaChannel;      \/* Ignored by OpenCV *\/$/;"	m	struct:_IplImage
alphaKernel	Kernel.h	/^typedef  void (* alphaKernel)(char* out, char* in1, char* in2);$/;"	t	namespace:dmFrameSimple
alpha_count	opencv/include/ml.h	/^    int alpha_count;$/;"	m	class:CvSVMSolver
alpha_status	opencv/include/ml.h	/^    schar* alpha_status;$/;"	m	class:CvSVMSolver
anchor	opencv/include/cv.hpp	/^    Point anchor;$/;"	m	class:cv::BaseFilter
anchor	opencv/include/cv.hpp	/^    Point anchor;$/;"	m	class:cv::FilterEngine
anchor	opencv/include/cv.hpp	/^    int ksize, anchor;$/;"	m	class:cv::BaseColumnFilter
anchor	opencv/include/cv.hpp	/^    int ksize, anchor;$/;"	m	class:cv::BaseRowFilter
anchorX	opencv/include/cxtypes.h	/^    int  anchorX;$/;"	m	struct:_IplConvKernel
anchorX	opencv/include/cxtypes.h	/^    int  anchorX;$/;"	m	struct:_IplConvKernelFP
anchorY	opencv/include/cxtypes.h	/^    int  anchorY;$/;"	m	struct:_IplConvKernel
anchorY	opencv/include/cxtypes.h	/^    int  anchorY;$/;"	m	struct:_IplConvKernelFP
angle	opencv/include/cv.hpp	/^    float angle;$/;"	m	class:cv::KeyPoint
angle	opencv/include/cxcore.hpp	/^    float angle;$/;"	m	class:cv::RotatedRect
angle	opencv/include/cxtypes.h	/^    float angle;          \/* Angle between the horizontal axis           *\/$/;"	m	struct:CvBox2D
appand	vascript/node.h	/^    void appand(Node* o) {o->prev = this; o->next = this->next; if(next){this->next->prev = o;} this->next = o;}$/;"	f	class:Node
appandChild	vascript/treeNode.cpp	/^void Node::appandChild(Node* child_)$/;"	f	class:Node
appandGimpleNode	vascript/graph.hxx	/^    void appandGimpleNode(GimpleNode* gimpleNode){$/;"	f	class:FlowGraph
appandNode	vascript/graph.hxx	/^	void appandNode(AstNode* nodep){stmts.push_back(nodep);}$/;"	f	class:FlowGraph
appearance_profile	opencv/include/cvvidsurv.hpp	/^    int     appearance_profile;$/;"	m	struct:CvBlobTrackerParamMS
apply	opencv/include/cxmat.hpp	/^    static void apply(Size size, int type0, const Scalar& s, int mtype, M& c, int type=-1)$/;"	f	class:cv::MatOp_Set_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, M& c, int type=-1)$/;"	f	class:cv::MatOp_Sub_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, double alpha, char op, M& c, int type=-1)$/;"	f	class:cv::MatOp_MulDiv_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, double alpha,$/;"	f	class:cv::MatOp_MatMulAdd_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, double scale, int flags, M& c, int type=-1)$/;"	f	class:cv::MatOp_MatMul_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, int _op, M& c, int type=-1)$/;"	f	class:cv::MatOp_Bin_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, int method, M& c, int type=-1)$/;"	f	class:cv::MatOp_Solve_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const M& b, int op, M& c, int type=-1)$/;"	f	class:cv::MatOp_Cmp_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const Scalar& s, M& c, int type=-1)$/;"	f	class:cv::MatOp_AddS_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, const Scalar& s, int _op, M& c, int type=-1)$/;"	f	class:cv::MatOp_BinS_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, double alpha, M& c, int type=-1)$/;"	f	class:cv::MatOp_DivRS_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, double alpha, M& c, int type=-1)$/;"	f	class:cv::MatOp_Scale_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, double alpha, const M& b,$/;"	f	class:cv::MatOp_AddEx_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, double alpha, double beta, M& c, int type=-1)$/;"	f	class:cv::MatOp_ScaleAddS_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, double alpha, int op, M& c, int type=-1)$/;"	f	class:cv::MatOp_CmpS_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, double scale, M& c, int type=-1)$/;"	f	class:cv::MatOp_T_
apply	opencv/include/cxmat.hpp	/^    static void apply(const M& a, int method, M& c, int type=-1)$/;"	f	class:cv::MatOp_Inv_
apply	opencv/include/cxmat.hpp	/^    static void apply(const MatIterator_<_Tp>& a, Mat& c, int type=-1)$/;"	f	class:cv::MatOp_Iter_
arch	vascript/Makefile	/^arch=$(shell uname -m)$/;"	m
area	opencv/include/cvtypes.h	/^    double area;    \/* area of the connected component  *\/$/;"	m	struct:CvConnectedComp
area	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp Rect_<_Tp>::area() const { return width*height; }$/;"	f	class:cv::Rect_
area	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp Size_<_Tp>::area() const { return width*height; }$/;"	f	class:cv::Size_
areaThreshold	opencv/include/cv.h	/^    double areaThreshold;$/;"	m	struct:CvMSERParams
argSig	vascript/vacg.h	/^class argSig{$/;"	c
argtype_t	vascript/vacg.h	/^}argtype_t;$/;"	t	typeref:enum:__anon120
arr	opencv/include/cxcore.h	/^CVAPI(CvScalar)  cvSum( const CvArr* arr );$/;"	v
arr	opencv/include/cxcore.h	/^CVAPI(CvSize) cvGetSize( const CvArr* arr );$/;"	v
arr	opencv/include/cxcore.h	/^CVAPI(int)  cvCountNonZero( const CvArr* arr );$/;"	v
arr	opencv/include/cxcore.h	/^CVAPI(int) cvGetElemType( const CvArr* arr );$/;"	v
arr	opencv/include/cxcore.h	/^CVAPI(void)  cvCreateData( CvArr* arr );$/;"	v
arr	opencv/include/cxcore.h	/^CVAPI(void)  cvReleaseData( CvArr* arr );$/;"	v
arr	opencv/include/cxcore.h	/^CVAPI(void)  cvSetZero( CvArr* arr );$/;"	v
arr	opencv/include/cxoperations.hpp	/^    const _Tp* arr;$/;"	m	class:cv::GreaterEqIdx
arr	opencv/include/cxoperations.hpp	/^    const _Tp* arr;$/;"	m	class:cv::LessThanIdx
array_iterator	opencv/include/cxcore.h	/^CVAPI(int) cvNextNArraySlice( CvNArrayIterator* array_iterator );$/;"	v
arrays	opencv/include/cxcore.hpp	/^    vector<MatND> arrays;$/;"	m	class:cv::NAryMatNDIterator
ascii	opencv/include/cxcore.h	/^    const int*  ascii; \/* font data and metrics *\/$/;"	m	struct:CvFont
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(M& m, int type=-1) const { e.assignTo(m, type); }$/;"	f	class:cv::MatExpr_
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(Mat& m, int type=-1) const { Op::apply(a1, (M&)m, type); }$/;"	f	class:cv::MatExpr_Op1_
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(Mat& m, int type=-1) const { Op::apply(a1, a2, (M&)m, type); }$/;"	f	class:cv::MatExpr_Op2_
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(Mat& m, int type=-1) const { Op::apply(a1, a2, a3, (M&)m, type); }$/;"	f	class:cv::MatExpr_Op3_
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(Mat& m, int type=-1) const { Op::apply(a1, a2, a3, a4, (M&)m, type); }$/;"	f	class:cv::MatExpr_Op4_
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(Mat& m, int type=-1) const { Op::apply(a1, a2, a3, a4, a5, (M&)m, type); }$/;"	f	class:cv::MatExpr_Op5_
assignTo	opencv/include/cxmat.hpp	/^    void assignTo(Mat& m, int type=-1) const { Op::apply(a1, a2, a3, a4, a5, a6, (M&)m, type); }$/;"	f	class:cv::MatExpr_Op6_
assignTo	opencv/include/cxmat.hpp	/^MatCommaInitializer_<_Tp>::assignTo(Mat& m, int type) const$/;"	f	class:cv::MatCommaInitializer_
assignTo	opencv/include/cxmat.hpp	/^inline void Mat::assignTo( Mat& m, int type ) const$/;"	f	class:cv::Mat
assignTo	opencv/include/cxmat.hpp	/^inline void MatND::assignTo( MatND& m, int type ) const$/;"	f	class:cv::MatND
assignTo	opencv/include/cxmat.hpp	/^inline void SparseMat::assignTo( SparseMat& m, int type ) const$/;"	f	class:cv::SparseMat
assignment_expression	vascript/vascript.y	/^assignment_expression:expression$/;"	l
astCodeGento	vascript/graph.hxx	/^    void astCodeGento(u8*& f){$/;"	f	class:FlowGraph
astNodeType	vascript/node.hxx	/^}astNodeType;$/;"	t	typeref:enum:__anon127
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& Mat::at(Point pt)$/;"	f	class:cv::Mat
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& Mat::at(int y, int x)$/;"	f	class:cv::Mat
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND::at(const int* idx)$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND::at(int i0)$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND::at(int i0, int i1)$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND::at(int i0, int i1, int i2)$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& Mat::at(Point pt) const$/;"	f	class:cv::Mat
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& Mat::at(int y, int x) const$/;"	f	class:cv::Mat
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND::at(const int* idx) const$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND::at(int i0) const$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND::at(int i0, int i1) const$/;"	f	class:cv::MatND
at	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND::at(int i0, int i1, int i2) const$/;"	f	class:cv::MatND
atDIR	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atFILTER	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atFRAME	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atFUNC	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atIMM	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atREF	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atTmpFRAME	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
atVarFRAME	vascript/vacg.h	/^	atFUNC=0, atIMM=0, atREF=1, atDIR=2, atFRAME=3,atFILTER=0, atVarFRAME=4, atTmpFRAME=5$/;"	e	enum:__anon120
attach	opencv/include/cxcore.h	/^    void attach( IplImage* img, bool use_refcount=true )$/;"	f	class:CvImage
attr	opencv/include/cxtypes.h	/^    const char** attr;         \/* NULL-terminated array of (attribute_name,attribute_value) pairs. *\/$/;"	m	struct:CvAttrList
averageFilter	filterKernel.cpp	/^void averageFilter (char *dataOut, char *dataIn, int row,int col,int step,int* KernelArray,int m,int n )$/;"	f	namespace:dmFrameSimple
avg	opencv/include/ml.h	/^    CvMat** avg;$/;"	m	class:CvNormalBayesClassifier
b	opencv/include/ml.h	/^    double* b;$/;"	m	class:CvSVMSolver
back	opencv/include/cxoperations.hpp	/^    _Tp& back() { CV_DbgAssert(!empty()); return hdr.data[hdr.size-1]; }$/;"	f	class:cv::Vector
back	opencv/include/cxoperations.hpp	/^    const _Tp& back() const { CV_DbgAssert(!empty()); return hdr.data[hdr.size-1]; }$/;"	f	class:cv::Vector
back	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp& Seq<_Tp>::back()$/;"	f	class:cv::Seq
back	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline const _Tp& Seq<_Tp>::back() const$/;"	f	class:cv::Seq
backgroundMax	opencv/include/cvaux.hpp	/^    double backgroundMin, backgroundMax;$/;"	m	class:cv::PatchGenerator
backgroundMin	opencv/include/cvaux.hpp	/^    double backgroundMin, backgroundMax;$/;"	m	class:cv::PatchGenerator
baseFeatureSize	opencv/include/cvaux.hpp	/^    double baseFeatureSize;$/;"	m	class:cv::LDetector
beg1	opencv/include/cvvidsurv.hpp	/^    int beg1,beg2;$/;"	m	struct:CvTracksTimePos
beg2	opencv/include/cvvidsurv.hpp	/^    int beg1,beg2;$/;"	m	struct:CvTracksTimePos
begin	opencv/include/cvaux.hpp	/^        int begin, end;$/;"	m	struct:cv::Octree::Node
begin	opencv/include/cxmat.hpp	/^inline SparseMatConstIterator SparseMat::begin() const$/;"	f	class:cv::SparseMat
begin	opencv/include/cxmat.hpp	/^inline SparseMatIterator SparseMat::begin()$/;"	f	class:cv::SparseMat
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp> Mat::begin() const$/;"	f	class:cv::Mat
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp> Mat_<_Tp>::begin() const$/;"	f	class:cv::Mat_
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp> Mat::begin()$/;"	f	class:cv::Mat
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp> Mat_<_Tp>::begin()$/;"	f	class:cv::Mat_
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatConstIterator_<_Tp> SparseMat::begin() const$/;"	f	class:cv::SparseMat
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatConstIterator_<_Tp> SparseMat_<_Tp>::begin() const$/;"	f	class:cv::SparseMat_
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatIterator_<_Tp> SparseMat::begin()$/;"	f	class:cv::SparseMat
begin	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatIterator_<_Tp> SparseMat_<_Tp>::begin()$/;"	f	class:cv::SparseMat_
begin	opencv/include/cxoperations.hpp	/^    _Tp* begin() { return hdr.data; }$/;"	f	class:cv::Vector
begin	opencv/include/cxoperations.hpp	/^    const _Tp* begin() const { return hdr.data; }$/;"	f	class:cv::Vector
begin	opencv/include/cxoperations.hpp	/^inline FileNodeIterator FileNode::begin() const$/;"	f	class:cv::FileNode
begin	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp> Seq<_Tp>::begin() const$/;"	f	class:cv::Seq
best_score	opencv/include/cvaux.h	/^    int best_score;$/;"	m	struct:CvCliqueFinder
best_weight	opencv/include/cvaux.h	/^    float best_weight;$/;"	m	struct:CvCliqueFinder
bg_threshold	opencv/include/cvaux.h	/^    double  bg_threshold, std_threshold, minArea;$/;"	m	struct:CvGaussBGStatModelParams
biTrans	vascript/ccg/ccg.h	/^class biTrans : public InstructionCoder$/;"	c	namespace:CCG
binSize	opencv/include/cvaux.hpp	/^    float binSize;$/;"	m	class:cv::SpinImageModel
bins	opencv/include/cxtypes.h	/^    CvArr*  bins;$/;"	m	struct:CvHistogram
bitcount	bmp.h	/^			unsigned short bitcount; $/;"	m	struct:__anon115::__anon116::__anon118
bitcount	bmp.h	/^	unsigned short bitcount; \/*1;4;8;24*\/$/;"	m	struct:__anon113
bitmapFileHeader_t	bmp.h	/^} bitmapFileHeader_t; $/;"	t	typeref:struct:__anon112
bitmapHeaderSize	bmp.h	6;"	d
bitmapInfoHeader_t	bmp.h	/^} bitmapInfoHeader_t; $/;"	t	typeref:struct:__anon113
blockSize	opencv/include/cvaux.hpp	/^    Size blockSize;$/;"	m	struct:cv::HOGDescriptor
blockStride	opencv/include/cvaux.hpp	/^    Size blockStride;$/;"	m	struct:cv::HOGDescriptor
block_size	opencv/include/cxtypes.h	/^    int block_size;               \/* Block size.                              *\/$/;"	m	struct:CvMemStorage
blur	opencv/include/cv.hpp	/^static inline void blur( const Mat& src, Mat& dst,$/;"	f	namespace:cv
bmp_t	bmp.h	/^}bmp_t;$/;"	t	typeref:struct:__anon115
boost_type	opencv/include/ml.h	/^    int boost_type;$/;"	m	struct:CvBoostParams
border	opencv/include/cvaux.h	/^    CvPoint2D32f border[2][4];$/;"	m	struct:CvStereoCamera
borderElemSize	opencv/include/cv.hpp	/^    int borderElemSize;$/;"	m	class:cv::FilterEngine
borderTab	opencv/include/cv.hpp	/^    vector<int> borderTab;$/;"	m	class:cv::FilterEngine
bottom	opencv/include/cxtypes.h	/^    CvMemBlock* bottom;           \/* First allocated block.                   *\/$/;"	m	struct:CvMemStorage
bottomline	opencv/include/cvcompat.h	/^    float*  bottomline;$/;"	m	struct:_CvPixelPosition32f
bottomline	opencv/include/cvcompat.h	/^    schar*  bottomline;$/;"	m	struct:_CvPixelPosition8s
bottomline	opencv/include/cvcompat.h	/^    uchar*  bottomline;    \/* pointer to the start of the first line           *\/$/;"	m	struct:_CvPixelPosition8u
boundary	opencv/include/cxcore.hpp	/^        float boundary;     \/\/ left if vec[dim]<=boundary, otherwise right$/;"	m	struct:cv::KDTree::Node
boundingRect	opencv/include/cxoperations.hpp	/^inline Rect RotatedRect::boundingRect() const$/;"	f	class:cv::RotatedRect
boxMax	opencv/include/cvaux.h	/^    uchar boxMax[3];$/;"	m	struct:CvBGCodeBookElem
boxMin	opencv/include/cvaux.h	/^    uchar boxMin[3];$/;"	m	struct:CvBGCodeBookElem
bp_dw_scale	opencv/include/ml.h	/^    double bp_dw_scale, bp_moment_scale;$/;"	m	struct:CvANN_MLP_TrainParams
bp_moment_scale	opencv/include/ml.h	/^    double bp_dw_scale, bp_moment_scale;$/;"	m	struct:CvANN_MLP_TrainParams
br	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp> Rect_<_Tp>::br() const { return Point_<_Tp>(x+width, y+height); }$/;"	f	class:cv::Rect_
brace_statement	vascript/vascript.y	/^brace_statement: brace_statement0 '}'           	{ $1->pop();$$=$1; printf("Get a brace \\n");}$/;"	l
brace_statement0	vascript/vascript.y	/^brace_statement0 : '{' 					{ $$ = new FlowGraph();  $$->simplePush(); }$/;"	l
branching	opencv/include/cxflann.h	/^	int branching;             \/\/ branching factor (for kmeans tree)$/;"	m	struct:cv::flann::CompositeIndexParams
branching	opencv/include/cxflann.h	/^	int branching;             \/\/ branching factor (for kmeans tree)$/;"	m	struct:cv::flann::KMeansIndexParams
buf	opencv/include/cxcore.hpp	/^    _Tp buf[fixed_size];$/;"	m	class:cv::AutoBuffer
buf	opencv/include/ml.h	/^    CvMat* buf;$/;"	m	struct:CvDTreeTrainData
buf	opencv/include/ml.h	/^    float* buf[2];$/;"	m	class:CvSVMSolver
buf	vascript/ccg/testopcode.cpp	/^int buf[1024];$/;"	v
bufStep	opencv/include/cv.hpp	/^    int bufStep, startY, startY0, endY, rowCount, dstY;$/;"	m	class:cv::FilterEngine
bufType	opencv/include/cv.hpp	/^    int srcType, dstType, bufType;$/;"	m	class:cv::FilterEngine
buf_count	opencv/include/ml.h	/^    int buf_count, buf_size;$/;"	m	struct:CvDTreeTrainData
buf_idx	opencv/include/ml.h	/^    int buf_idx;$/;"	m	struct:CvDTreeNode
buf_size	opencv/include/ml.h	/^    int buf_count, buf_size;$/;"	m	struct:CvDTreeTrainData
build_weight	opencv/include/cxflann.h	/^	float build_weight;        \/\/ build tree time weighting factor$/;"	m	struct:cv::flann::AutotunedIndexParams
c	opencv/include/ml.h	/^            float c;$/;"	m	struct:CvDTreeSplit::__anon50::__anon51
c	opencv/include/ml.h	/^    CvMat*  c;$/;"	m	class:CvNormalBayesClassifier
c	vascript/ccg/ccg.h	/^			char c;$/;"	m	union:CCG::REX::__anon151
c	vascript/ccg/ccg.h	/^			unsigned char c;$/;"	m	union:CCG::ModRM::__anon153
c	vascript/ccg/ccg.h	/^			unsigned char c;$/;"	m	union:CCG::SIB::__anon156
c	vascript/ccg/ccg.h	/^	char c;$/;"	m	union:CCG::__anon160
c	vascript/ccg/ccg.h	/^            char c;$/;"	m	union:CCG::Imm::__anon161
c	vascript/ccg/opcodeDes.h	/^            Uchar c;$/;"	m	union:CCG::OPC1::__anon130
cache_line_size	opencv/include/ml.h	/^    int cache_line_size;$/;"	m	class:CvSVMSolver
cache_size	opencv/include/ml.h	/^    int cache_size;$/;"	m	class:CvSVMSolver
calc_func	opencv/include/ml.h	/^    Calc calc_func;$/;"	m	struct:CvSVMKernel
calc_rho_func	opencv/include/ml.h	/^    CalcRho calc_rho_func;$/;"	m	class:CvSVMSolver
calc_var_importance	opencv/include/ml.h	/^    bool calc_var_importance; \/\/ true <=> RF processes variable importance$/;"	m	struct:CvRTParams
call	vascript/vacg.h	/^    void call(u8*& f){code_call(f, var);}$/;"	f	class:VaVar
call_Detect	vascript/vacg.cpp	/^void vaCG::call_Detect(u8*& f, VaVarRef dst, VaVarRef src1, VaVarRef oper)$/;"	f	class:vaCG
call_Detect	vascript/vacg.h	/^        void call_Detect(VaVarRef dst, VaVarRef src1, VaVarRef oper){call_Detect(f, dst, src1, oper);};$/;"	f	class:vaCG
call_general	vascript/vacg.cpp	/^void vaCG::call_general(u8*& f, VaVarRef func, VaVarRef src2, VaVarRef src3,VaVarRef src4,VaVarRef src5)$/;"	f	class:vaCG
call_general	vascript/vacg.h	/^        void call_general(VaVarRef func, VaVarRef src2, VaVarRef src3,VaVarRef src4,VaVarRef src5){call_general(f, func, src2, src3, src4, src5);}$/;"	f	class:vaCG
callback	opencv/include/cvaux.h	/^    CvCallback callback;$/;"	m	union:__anon105
camera	opencv/include/cvaux.h	/^    CvCamera* camera[2]; \/* two individual camera parameters *\/$/;"	m	struct:CvStereoCamera
cameraCount	opencv/include/cvaux.h	/^    int     cameraCount;$/;"	m	class:CvCalibFilter
cameraParams	opencv/include/cvaux.h	/^    CvCamera cameraParams[MAX_CAMERAS];$/;"	m	class:CvCalibFilter
cand_weight	opencv/include/cvaux.h	/^    float* cand_weight;$/;"	m	struct:CvCliqueFinder
cap	opencv/include/highgui.hpp	/^    Ptr<CvCapture> cap;$/;"	m	class:cv::VideoCapture
capacity	opencv/include/cxoperations.hpp	/^        size_t capacity;$/;"	m	struct:cv::Vector::Hdr
capacity	opencv/include/cxoperations.hpp	/^    size_t capacity() const { return hdr.capacity; }$/;"	f	class:cv::Vector
capture	opencv/include/highgui.h	/^CVAPI(IplImage*) cvQueryFrame( CvCapture* capture );$/;"	v
capture	opencv/include/highgui.h	/^CVAPI(int)    cvGetCaptureDomain( CvCapture* capture);  $/;"	v
capture	opencv/include/highgui.h	/^CVAPI(int) cvGrabFrame( CvCapture* capture );$/;"	v
capture	opencv/include/highgui.h	/^CVAPI(void) cvReleaseCapture( CvCapture** capture );$/;"	v
cascade	opencv/include/cv.h	/^CVAPI(void) cvReleaseHaarClassifierCascade( CvHaarClassifierCascade** cascade );$/;"	v
cat_count	opencv/include/ml.h	/^    CvMat* cat_count;$/;"	m	struct:CvDTreeTrainData
cat_map	opencv/include/ml.h	/^    CvMat* cat_map;$/;"	m	struct:CvDTreeTrainData
cat_ofs	opencv/include/ml.h	/^    CvMat* cat_ofs;$/;"	m	struct:CvDTreeTrainData
cat_var_count	opencv/include/ml.h	/^    int ord_var_count, cat_var_count, work_var_count;$/;"	m	struct:CvDTreeTrainData
cbBounds	opencv/include/cvaux.h	/^    uchar cbBounds[3];$/;"	m	struct:CvBGCodeBookModel
cb_index	opencv/include/cxflann.h	/^    float cb_index;            \/\/ cluster boundary index. Used when searching the kmeans tree$/;"	m	struct:cv::flann::CompositeIndexParams
cb_index	opencv/include/cxflann.h	/^    float cb_index;            \/\/ cluster boundary index. Used when searching the kmeans tree$/;"	m	struct:cv::flann::KMeansIndexParams
cbmap	opencv/include/cvaux.h	/^    CvBGCodeBookElem** cbmap;$/;"	m	struct:CvBGCodeBookModel
cctable	opencv/include/cvaux.h	/^    CvBGPixelCCStatTable* cctable;$/;"	m	struct:CvBGPixelStat
ce	opencv/include/cvaux.h	/^    int* ce;$/;"	m	struct:CvCliqueFinder
cellSize	opencv/include/cvaux.hpp	/^    Size cellSize;$/;"	m	struct:cv::HOGDescriptor
center	opencv/include/cxcore.hpp	/^    Point2f center;$/;"	m	class:cv::RotatedRect
center	opencv/include/cxtypes.h	/^    CvPoint2D32f center;  \/* Center of the box.                          *\/$/;"	m	struct:CvBox2D
centers_init	opencv/include/cxflann.h	/^	flann_centers_init_t centers_init;          \/\/ algorithm used for picking the initial cluster centers for kmeans tree$/;"	m	struct:cv::flann::CompositeIndexParams
centers_init	opencv/include/cxflann.h	/^	flann_centers_init_t centers_init;          \/\/ algorithm used for picking the initial cluster centers for kmeans tree$/;"	m	struct:cv::flann::KMeansIndexParams
centre	opencv/include/cvaux.hpp	/^	double value, centre;$/;"	m	class:CvFuzzyCurve
chain	opencv/include/cvaux.h	/^    CvSeq* chain;$/;"	m	struct:CvLCMEdge
channelSeq	opencv/include/cxtypes.h	/^    char channelSeq[4];     \/* ditto *\/$/;"	m	struct:_IplImage
channel_type	opencv/include/cxcore.hpp	/^    typedef _Tp channel_type;$/;"	t	class:cv::DataType
channel_type	opencv/include/cxcore.hpp	/^    typedef int channel_type;$/;"	t	class:cv::DataType
channel_type	opencv/include/cxcore.hpp	/^    typedef typename DataType<_Tp>::channel_type channel_type;$/;"	t	class:cv::MatND_
channel_type	opencv/include/cxcore.hpp	/^    typedef typename DataType<_Tp>::channel_type channel_type;$/;"	t	class:cv::Mat_
channel_type	opencv/include/cxcore.hpp	/^    typedef value_type channel_type;$/;"	t	class:cv::DataType
channels	opencv/include/cxcore.h	/^    int channels() const { return image ? image->nChannels : 0; }$/;"	f	class:CvImage
channels	opencv/include/cxcore.h	/^    int channels() const { return matrix ? CV_MAT_CN(matrix->type) : 0; }$/;"	f	class:CvMatrix
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<_Tp>::value, channels = cn, type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::Vec::__anon69
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon70
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon71
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon72
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon73
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon74
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon75
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon76
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon77
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon78
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon80
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon81
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon82
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon84
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon87
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 3,$/;"	e	enum:cv::DataType::__anon83
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 4,$/;"	e	enum:cv::DataType::__anon85
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 4,$/;"	e	enum:cv::DataType::__anon86
channels	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = cn,$/;"	e	enum:cv::DataType::__anon79
channels	opencv/include/cxmat.hpp	/^inline int Mat::channels() const { return CV_MAT_CN(flags); }$/;"	f	class:cv::Mat
channels	opencv/include/cxmat.hpp	/^inline int MatND::channels() const { return CV_MAT_CN(flags); }$/;"	f	class:cv::MatND
channels	opencv/include/cxmat.hpp	/^inline int SparseMat::channels() const$/;"	f	class:cv::SparseMat
channels	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int MatND_<_Tp>::channels() const$/;"	f	class:cv::MatND_
channels	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int Mat_<_Tp>::channels() const$/;"	f	class:cv::Mat_
channels	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int SparseMat_<_Tp>::channels() const$/;"	f	class:cv::SparseMat_
channels	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline int Seq<_Tp>::channels() const$/;"	f	class:cv::Seq
check	opencv/include/ml.h	115;"	d
checkScale	vascript/ccg/ccg.h	/^		int checkScale(int scale){$/;"	f	class:CCG::MemMod
check_type	vascript/release/vaslexer.cpp	/^int check_type()$/;"	f
checks	opencv/include/cxflann.h	/^	int checks;$/;"	m	struct:cv::flann::SearchParams
child	opencv/include/cvtypes.h	/^    int child;$/;"	m	struct:CvHaarStageClassifier
child	vascript/graph.hxx	/^	FlowGraph *child;$/;"	m	class:FlowGraph
child	vascript/treeNode.h	/^    Node* child() {return mChild;}$/;"	f	class:Node
children	opencv/include/cvaux.hpp	/^        int children[8];$/;"	m	struct:cv::Octree::Node
classCounters	opencv/include/cvaux.hpp	/^    vector<int> classCounters;$/;"	m	class:cv::FernClassifier
class_id	opencv/include/cv.hpp	/^    int class_id;$/;"	m	class:cv::KeyPoint
class_idx	opencv/include/ml.h	/^    int class_idx;$/;"	m	struct:CvDTreeNode
class_labels	opencv/include/ml.h	/^    CvMat* class_labels;$/;"	m	class:CvSVM
class_map	opencv/include/ml.h	/^    map<string, int> *class_map;$/;"	m	class:CvMLData
class_part	opencv/include/ml.h	/^    } *class_part;$/;"	m	struct:CvTrainTestSplit	typeref:union:CvTrainTestSplit::__anon58
class_part_mode	opencv/include/ml.h	/^    int class_part_mode;$/;"	m	struct:CvTrainTestSplit
class_weights	opencv/include/ml.h	/^    CvMat*      class_weights; \/\/ for CV_SVM_C_SVC$/;"	m	struct:CvSVMParams
class_weights	opencv/include/ml.h	/^    CvMat* class_weights;$/;"	m	class:CvSVM
classifier	opencv/include/cvtypes.h	/^    CvHaarClassifier* classifier;$/;"	m	struct:CvHaarStageClassifier
classifiers	opencv/include/cv.hpp	/^    vector<DTree> classifiers;$/;"	m	class:cv::CascadeClassifier
clean	vascript/ccg/ccg.h	/^		void clean(){c=0;reserve =4;}$/;"	f	class:CCG::REX
clean	vascript/ccg/ccg.h	/^		void clean(){c=0;}$/;"	f	class:CCG::ModRM
clean	vascript/ccg/ccg.h	/^		void clean(){c=0;}$/;"	f	class:CCG::SIB
clean	vascript/ccg/ccg.h	/^		void clean(){rex.clean();modrm.clean();sib.clean();}$/;"	f	class:CCG::MemMod
clean	vascript/ccg/ccg.h	/^        void clean(){flags=0;rex=0x40;}$/;"	f	class:CCG::Instr
clean_obj	Makefile	/^clean_obj=vaslexer.cpp vasparser.cpp vasparser.h$/;"	m
clean_obj	vascript/Makefile	/^clean_obj=vaslexer.cpp vasparser.cpp vasparser.h$/;"	m
clear	opencv/include/cxcore.h	/^    void clear() { detach(); }$/;"	f	class:CvImage
clear	opencv/include/cxcore.h	/^    void clear()$/;"	f	class:CvMatrix
clear	opencv/include/cxoperations.hpp	/^    void clear() { resize(0); }$/;"	f	class:cv::Vector
clear	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::clear()$/;"	f	class:cv::Seq
clearD	vascript/ccg/opcodeDes.h	/^        void clearD(){d=0;}$/;"	f	class:CCG::OPC1
clearW	vascript/ccg/opcodeDes.h	/^        void clearW(){w=0;}$/;"	f	class:CCG::OPC1
clone	opencv/include/cxcore.h	/^    CvImage clone() { return CvImage(image ? cvCloneImage(image) : 0); }$/;"	f	class:CvImage
clone	opencv/include/cxcore.h	/^    CvMatrix clone() { return CvMatrix(matrix ? cvCloneMat(matrix) : 0); }$/;"	f	class:CvMatrix
clone	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::clone() const$/;"	f	class:cv::SparseMat_
clone	opencv/include/cxmat.hpp	/^inline Mat Mat::clone() const$/;"	f	class:cv::Mat
clone	opencv/include/cxmat.hpp	/^inline MatND MatND::clone() const$/;"	f	class:cv::MatND
clone	opencv/include/cxmat.hpp	/^inline SparseMat SparseMat::clone() const$/;"	f	class:cv::SparseMat
clone	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp> MatND_<_Tp>::clone() const$/;"	f	class:cv::MatND_
clone	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::clone() const$/;"	f	class:cv::Mat_
clone	opencv/include/cxoperations.hpp	/^    Vector<_Tp> clone() const$/;"	f	class:cv::Vector
clone	opencv/include/cxtypes.h	/^    CvCloneFunc clone;$/;"	m	struct:CvTypeInfo
cls_labels	opencv/include/ml.h	/^    CvMat*  cls_labels;$/;"	m	class:CvNormalBayesClassifier
clusteringDistance	opencv/include/cvaux.hpp	/^    double clusteringDistance;$/;"	m	class:cv::LDetector
code	opencv/include/cvtypes.h	/^    char      code;$/;"	m	struct:CvChainPtReader
code	opencv/include/cxcore.hpp	/^    int code;$/;"	m	class:cv::Exception
code	vascript/ccg/ccg.h	/^        Uchar code[32];$/;"	m	class:CCG::InstructionCoder
code	vascript/ccg/opcodeDes.h	/^                unsigned int code:5;$/;"	m	struct:CCG::OPC1::__anon130::__anon132
code	vascript/ccg/testccg.cpp	/^        Uchar code[16];$/;"	m	class:OpCodeRef	file:
codeCCG	vascript/dis.c	/^unsigned char codeCCG[]={$/;"	v
codeGen	vascript/graph.hxx	/^    void codeGen(){ codeGento(gvacg.getf());} $/;"	f	class:FlowGraph
codeGen	vascript/node.h	/^	void codeGen(){ codeGento(gvacg.getf());} $/;"	f	class:Node
codeGento	vascript/gimple.hxx	/^        virtual void codeGento(u8*& f){$/;"	f	class:GimpleAssign
codeGento	vascript/gimple.hxx	/^        virtual void codeGento(u8*& f){$/;"	f	class:GimpleStatement
codeGento	vascript/graph.hxx	/^    virtual void codeGento(u8*& f){$/;"	f	class:FlowGraph
codeGento	vascript/node.cpp	/^void GimpleGraphNode::codeGento(u8*& f) $/;"	f	class:GimpleGraphNode
codeGento	vascript/node.h	/^	virtual void codeGento(u8*& f){};$/;"	f	class:Node
codeGento	vascript/node.hxx	/^	virtual void codeGento(u8*& f)$/;"	f	class:AstOpExpr
codeGento	vascript/node.hxx	/^	virtual void codeGento(u8*& f){ m_Graph->codeGento(f);};$/;"	f	class:AstGraphNode
codeGento	vascript/node.hxx	/^	virtual void codeGento(u8*& f){ vaCG::call_Detect(f, outFrame.getVar(), inFrame.getVar(), filterKernel.getVar());};$/;"	f	class:AstFilterState
codeGento	vascript/node.hxx	/^	virtual void codeGento(u8*& f){$/;"	f	class:AstAssginState
codeGento	vascript/node.hxx	/^	virtual void codeGento(u8*& f){};$/;"	f	class:AstNode
codeHand	vascript/dis.c	/^unsigned char codeHand[] = {$/;"	v
codeType	vascript/ccg/opcodeDes.h	/^        CodeType codeType;$/;"	m	class:CCG::OpInfo
code_addespimm	vascript/vacg.h	/^        inline void code_addespimm(int imm){ return code_addespimm(f, imm);}$/;"	f	class:vaCG
code_addespimm	vascript/vacg.h	/^        static inline void code_addespimm(u8*& f, int imm){WRITE_3CHAR(f, 0x83,0xC4,imm)}$/;"	f	class:vaCG
code_adjustesp	vascript/vacg.h	/^        inline void code_adjustesp(u8*& f){}$/;"	f	class:vaCG
code_call	vascript/vacg.h	/^inline void code_call(u8*& f, void* func){$/;"	f
code_pushCurFrame	vascript/vacg.h	/^inline void code_pushCurFrame(u8*& f)$/;"	f
code_pushFrame	vascript/vacg.h	/^inline void code_pushFrame(u8*& f, int* idx)$/;"	f
code_pushNxtFrame	vascript/vacg.h	/^inline void code_pushNxtFrame(u8*& f)$/;"	f
code_pushPrvFrame	vascript/vacg.h	/^inline void code_pushPrvFrame(u8*& f)$/;"	f
code_pushVarible	vascript/vacg.h	/^inline void code_pushVarible(u8*&f, void* v){$/;"	f
code_pushimm32	vascript/vacg.h	/^inline void code_pushimm32(u8*& f, i32 imm){$/;"	f
code_pushimm64	vascript/vacg.h	/^inline void code_pushimm64(u8*& f, i64 imm){$/;"	f
code_pushimm8	vascript/vacg.h	/^inline void code_pushimm8(u8*& f, u8 imm){$/;"	f
code_ret	vascript/vacg.h	/^        inline void code_ret(){ return code_ret(f);}$/;"	f	class:vaCG
code_ret	vascript/vacg.h	/^        static inline void code_ret(u8*& f){ *f++ = 0xc3;}$/;"	f	class:vaCG
coef0	opencv/include/ml.h	/^    double      coef0;  \/\/ for poly\/sigmoid$/;"	m	struct:CvSVMParams
coeffs	opencv/include/cvaux.h	/^    double coeffs[2][3][3];\/* coefficients for transformation *\/$/;"	m	struct:CvStereoCamera
coi	opencv/include/cxcore.h	/^    int coi() const { return !image || !image->roi ? 0 : image->roi->coi; }$/;"	f	class:CvImage
coi	opencv/include/cxtypes.h	/^    int  coi; \/* 0 - no COI (all channels are selected), 1 - 0th channel is selected ...*\/$/;"	m	struct:_IplROI
col	opencv/include/cxmat.hpp	/^    M col(int x) const { return ((M)e).col(x); }$/;"	f	class:cv::MatExpr_
col	opencv/include/cxmat.hpp	/^inline Mat Mat::col(int x) const { return Mat(*this, Range::all(), Range(x, x+1)); }$/;"	f	class:cv::Mat
col	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::col(int x) const$/;"	f	class:cv::Mat_
colRange	opencv/include/cxmat.hpp	/^inline Mat Mat::colRange(const Range& r) const$/;"	f	class:cv::Mat
colRange	opencv/include/cxmat.hpp	/^inline Mat Mat::colRange(int startcol, int endcol) const$/;"	f	class:cv::Mat
color	opencv/include/cvvidsurv.hpp	/^    CvScalar color;$/;"	m	struct:CvDrawShape
colorModel	opencv/include/cxtypes.h	/^    char colorModel[4];     \/* Ignored by OpenCV *\/$/;"	m	struct:_IplImage
color_table	bmp.h	/^    RGBQUAD* color_table;$/;"	m	struct:__anon115
colorsimportant	bmp.h	/^			unsigned int colorsimportant; $/;"	m	struct:__anon115::__anon116::__anon118
colorsimportant	bmp.h	/^	unsigned int colorsimportant;\/**\/ $/;"	m	struct:__anon113
colorsused	bmp.h	/^			unsigned int colorsused; $/;"	m	struct:__anon115::__anon116::__anon118
colorsused	bmp.h	/^	unsigned int colorsused; \/**\/$/;"	m	struct:__anon113
cols	opencv/include/cxcore.h	/^    int cols() const { return matrix ? matrix->cols : 0; }$/;"	f	class:CvMatrix
cols	opencv/include/cxcore.hpp	/^    int rows, cols;$/;"	m	class:cv::Mat
cols	opencv/include/cxtypes.h	/^        int cols;$/;"	m	union:CvMat::__anon33
cols	opencv/include/cxtypes.h	/^    int cols;$/;"	m	struct:CvMat
columnBorderType	opencv/include/cv.hpp	/^    int rowBorderType, columnBorderType;$/;"	m	class:cv::FilterEngine
columnFilter	opencv/include/cv.hpp	/^    Ptr<BaseColumnFilter> columnFilter;$/;"	m	class:cv::FilterEngine
comLen	opencv/include/cvvidsurv.hpp	/^    int comLen; \/\/common length for two tracks$/;"	m	struct:CvTracksTimePos
comment	vascript/release/vaslexer.cpp	695;"	d	file:
compile_file	vascript/vacg.cpp	/^void* compile_file(char* dmvascript )$/;"	f
compile_str	vascript/vacg.cpp	/^void* compile_str(char* dmvascript )$/;"	f
completeSymmFlag	opencv/include/cv.hpp	/^    bool completeSymmFlag;$/;"	m	class:CvLevMarq
complexity	opencv/include/ml.h	/^    int complexity;$/;"	m	struct:CvDTreeNode
compression	bmp.h	/^			unsigned int compression; $/;"	m	struct:__anon115::__anon116::__anon118
compression	bmp.h	/^	unsigned int compression;\/**\/ $/;"	m	struct:__anon113
compressionMethod	opencv/include/cvaux.hpp	/^    int compressionMethod;$/;"	m	class:cv::FernClassifier
cond	vascript/node.hxx	/^        AstExpression* cond;$/;"	m	class:AstIfNode
condens	opencv/include/cv.h	/^CVAPI(void)  cvConDensUpdateByTime( CvConDensation* condens);$/;"	v
condens	opencv/include/cv.h	/^CVAPI(void)  cvReleaseConDensation( CvConDensation** condens );$/;"	v
condensed_idx	opencv/include/ml.h	/^    int condensed_idx;$/;"	m	struct:CvDTreeSplit
conj	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Complex<_Tp> Complex<_Tp>::conj() const$/;"	f	class:cv::Complex
const	vascript/release/vasparser.cpp	90;"	d	file:
constBorderRow	opencv/include/cv.hpp	/^    vector<uchar> constBorderRow;$/;"	m	class:cv::FilterEngine
constBorderValue	opencv/include/cv.hpp	/^    vector<uchar> constBorderValue;$/;"	m	class:cv::FilterEngine
constExpr	vascript/release/vasparser.cpp	/^AstConstExpr* constExpr;$/;"	m	union:__anon124	file:
constExpr	vascript/release/vasparser.h	/^AstConstExpr* constExpr;$/;"	m	union:__anon125
const_iterator	opencv/include/cxcore.hpp	/^    typedef MatConstIterator_<_Tp> const_iterator;$/;"	t	class:cv::Mat_
const_iterator	opencv/include/cxcore.hpp	/^    typedef SeqIterator<_Tp> const_iterator;$/;"	t	class:cv::Seq
const_iterator	opencv/include/cxcore.hpp	/^    typedef SparseMatConstIterator const_iterator;$/;"	t	class:cv::SparseMat
const_iterator	opencv/include/cxcore.hpp	/^    typedef SparseMatConstIterator_<_Tp> const_iterator;$/;"	t	class:cv::SparseMat_
const_iterator	opencv/include/cxoperations.hpp	/^    typedef const _Tp* const_iterator;$/;"	t	class:cv::Vector
const_pointer	opencv/include/cxcore.hpp	/^    typedef const value_type* const_pointer;$/;"	t	class:cv::Allocator
const_reference	opencv/include/cxcore.hpp	/^    typedef const value_type& const_reference;$/;"	t	class:cv::Allocator
const_reference	opencv/include/cxoperations.hpp	/^    typedef const _Tp& const_reference;$/;"	t	class:cv::Vector
constantexpression	vascript/vascript.y	/^constantexpression:$/;"	l
construct	opencv/include/cxcore.hpp	/^    void construct(pointer p, const _Tp& v) { new(static_cast<void*>(p)) _Tp(v); }$/;"	f	class:cv::Allocator
container	opencv/include/cxcore.hpp	/^    const CvFileNode* container;$/;"	m	class:cv::FileNodeIterator
contains	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline bool Rect_<_Tp>::contains(const Point_<_Tp>& pt) const$/;"	f	class:cv::Rect_
contour	opencv/include/cv.h	/^CVAPI(int)  cvCheckContourConvexity( const CvArr* contour );$/;"	v
contour	opencv/include/cvaux.h	/^    CvContour* contour; $/;"	m	struct:CvLCMNode
contour	opencv/include/cvtypes.h	/^    CvSeq* contour; \/* optional component boundary$/;"	m	struct:CvConnectedComp
controlMatrix	opencv/include/cv.hpp	/^    Mat controlMatrix;      \/\/ control matrix (B)$/;"	m	class:cv::KalmanFilter
control_matrix	opencv/include/cvtypes.h	/^    CvMat* control_matrix;      \/* control matrix (B)$/;"	m	struct:CvKalman
convertTo	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename T2> inline void Scalar_<_Tp>::convertTo(T2* buf, int cn, int unroll_to) const$/;"	f	class:cv::Scalar_
copyProp	vascript/graph.cpp	/^void  FlowGraph::copyProp(){$/;"	f	class:FlowGraph
copyTo	opencv/include/cxoperations.hpp	/^    void copyTo(Vector<_Tp>& vec) const$/;"	f	class:cv::Vector
copyTo	opencv/include/cxoperations.hpp	/^    void copyTo(std::vector<_Tp>& vec) const$/;"	f	class:cv::Vector
copyTo	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::copyTo(vector<_Tp>& vec, const Range& range) const$/;"	f	class:cv::Seq
copy_frame	vascript/vacg.cpp	/^void vaCG::copy_frame(u8*& f, VaVarRef dst, VaVarRef src1)$/;"	f	class:vaCG
copy_frame	vascript/vacg.h	/^        void copy_frame(VaVarRef dst, VaVarRef src1){copy_frame(f, dst, src1);};$/;"	f	class:vaCG
copyto	vascript/ccg/ccg.h	/^		int copyto(char* dst){$/;"	f	class:CCG::MemMod
copyto	vascript/ccg/ccg.h	/^        int copyto(Uchar* dst){$/;"	f	class:CCG::InstructionCoder
count	opencv/include/cvtypes.h	/^    int  count;$/;"	m	struct:CvHaarClassifierCascade
count	opencv/include/cvtypes.h	/^    int  count;$/;"	m	struct:CvHaarStageClassifier
count	opencv/include/cvtypes.h	/^    int count;$/;"	m	struct:CvHaarClassifier
count	opencv/include/cxcore.h	/^    int count; \/* number of arrays *\/$/;"	m	struct:CvNArrayIterator
count	opencv/include/cxcore.hpp	/^    int err, count;$/;"	m	class:cv::LineIterator
count	opencv/include/cxtypes.h	/^    int    count;             \/* Number of elements in the block.           *\/$/;"	m	struct:CvSeqBlock
count	opencv/include/ml.h	/^        int *count;$/;"	m	union:CvTrainTestSplit::__anon58
count	opencv/include/ml.h	/^        int count;$/;"	m	union:CvTrainTestSplit::__anon57
count	opencv/include/ml.h	/^    CvMat** count;$/;"	m	class:CvNormalBayesClassifier
count	opencv/include/ml.h	/^    int dims, count;$/;"	m	struct:CvVectors
countFrames	opencv/include/cvaux.h	/^    int                        countFrames;$/;"	m	struct:CvGaussBGModel
counter	opencv/include/cvaux.hpp	/^    int64 counter;$/;"	m	class:cv::TickMeter
counts	opencv/include/ml.h	/^    CvMat* counts;$/;"	m	struct:CvDTreeTrainData
counts	transColor.cpp	/^    int counts;$/;"	m	struct:dmFrameSimple::_gray2rgb_t	file:
cov_mat_type	opencv/include/ml.h	/^    int cov_mat_type;$/;"	m	struct:CvEMParams
cov_rotate_mats	opencv/include/ml.h	/^    CvMat** cov_rotate_mats;$/;"	m	class:CvEM
cov_rotate_mats	opencv/include/ml.h	/^    CvMat** cov_rotate_mats;$/;"	m	class:CvNormalBayesClassifier
covs	opencv/include/ml.h	/^    CvMat** covs;$/;"	m	class:CvEM
covs	opencv/include/ml.h	/^    const CvMat** covs;$/;"	m	struct:CvEMParams
create	opencv/include/cxcore.h	/^    void create( CvSize size, int depth, int channels )$/;"	f	class:CvImage
create	opencv/include/cxcore.h	/^    void create( int rows, int cols, int type )$/;"	f	class:CvMatrix
create	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::create(int _dims, const int* _sizes)$/;"	f	class:cv::SparseMat_
create	opencv/include/cxmat.hpp	/^inline void Mat::create(Size _size, int _type)$/;"	f	class:cv::Mat
create	opencv/include/cxmat.hpp	/^inline void Mat::create(int _rows, int _cols, int _type)$/;"	f	class:cv::Mat
create	opencv/include/cxmat.hpp	/^template<typename _Tp> inline void MatND_<_Tp>::create(int _dims, const int* _sizes)$/;"	f	class:cv::MatND_
create	opencv/include/cxmat.hpp	/^template<typename _Tp> inline void Mat_<_Tp>::create(Size _size)$/;"	f	class:cv::Mat_
create	opencv/include/cxmat.hpp	/^template<typename _Tp> inline void Mat_<_Tp>::create(int _rows, int _cols)$/;"	f	class:cv::Mat_
create_bmp	bmp.cpp	/^__inline__ bmp_t* create_bmp($/;"	f
create_gray256	bmp.cpp	/^__inline__ bmp_t* create_gray256($/;"	f
criteria	opencv/include/cv.hpp	/^    CvTermCriteria criteria;$/;"	m	class:CvLevMarq
criteria	opencv/include/cvaux.hpp	/^    CvTermCriteria criteria;$/;"	m	class:cv::LevMarqSparse
cross	opencv/include/cxmat.hpp	/^    M cross(const M& m) const { return ((M)e).cross(m); }$/;"	f	class:cv::MatExpr_
cross	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::cross(const Mat_& m) const$/;"	f	class:cv::Mat_
cross	opencv/include/cxoperations.hpp	/^template<> inline Vec<double, 3> Vec<double, 3>::cross(const Vec<double, 3>& v) const$/;"	f	class:cv::Vec
cross	opencv/include/cxoperations.hpp	/^template<> inline Vec<float, 3> Vec<float, 3>::cross(const Vec<float, 3>& v) const$/;"	f	class:cv::Vec
cross	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn> Vec<_Tp, cn>::cross(const Vec<_Tp, cn>& v) const$/;"	f	class:cv::Vec
ctable	opencv/include/cvaux.h	/^    CvBGPixelCStatTable*  ctable;$/;"	m	struct:CvBGPixelStat
curFrame_symblinfo	vascript/symbol.h	106;"	d
curImage	mouse.cpp	/^IplImage *preImage = 0, *curImage=0;$/;"	v
curImageRaw	mouse.cpp	/^IplImage *preImageRaw = 0, *curImageRaw=0;$/;"	v
curPoint	mouse.cpp	/^CvPoint curPoint, prePoint;$/;"	v
curRegion	vascript/node.cpp	/^FlowGraph* curRegion=NULL;$/;"	v
cur_frame	vascript/vacg.cpp	/^static const int cur_frame = CUR_FRAME;$/;"	v	file:
cur_weight	opencv/include/cvaux.h	/^    float* cur_weight;$/;"	m	struct:CvCliqueFinder
curidx	opencv/include/cxtypes.h	/^    int curidx;$/;"	m	struct:CvSparseMatIterator
current_comp	opencv/include/cvaux.h	/^    int* current_comp;$/;"	m	struct:CvCliqueFinder
currline	opencv/include/cvcompat.h	/^    float*  currline;$/;"	m	struct:_CvPixelPosition32f
currline	opencv/include/cvcompat.h	/^    schar*  currline;$/;"	m	struct:_CvPixelPosition8s
currline	opencv/include/cvcompat.h	/^    uchar*  currline;      \/* pointer to the start of the current pixel line   *\/$/;"	m	struct:_CvPixelPosition8u
curves	opencv/include/cvaux.hpp	/^    std::vector<CvFuzzyCurve> curves;$/;"	m	class:CvFuzzyFunction
cv	opencv/include/cv.hpp	/^namespace cv$/;"	n
cv	opencv/include/cvaux.hpp	/^namespace cv$/;"	n
cv	opencv/include/cvwimage.h	/^namespace cv {$/;"	n
cv	opencv/include/cxcore.hpp	/^namespace cv {$/;"	n
cv	opencv/include/cxflann.h	/^namespace cv {$/;"	n
cv	opencv/include/cxmat.hpp	/^namespace cv$/;"	n
cv	opencv/include/cxoperations.hpp	/^namespace cv$/;"	n
cv	opencv/include/highgui.hpp	/^namespace cv$/;"	n
cv	opencv/include/ml.h	/^namespace cv$/;"	n
cv3dTracker2dTrackedObject	opencv/include/cvaux.h	/^CV_INLINE Cv3dTracker2dTrackedObject cv3dTracker2dTrackedObject(int id, CvPoint2D32f p)$/;"	f
cv3dTrackerTrackedObject	opencv/include/cvaux.h	/^CV_INLINE Cv3dTrackerTrackedObject cv3dTrackerTrackedObject(int id, CvPoint3D32f p)$/;"	f
cvAXPY	opencv/include/cxcore.h	545;"	d
cvAbs	opencv/include/cxcore.h	623;"	d
cvAccMask	opencv/include/cvcompat.h	118;"	d
cvAddSearchPath	opencv/include/highgui.h	357;"	d
cvAlign	opencv/include/cxmisc.h	/^CV_INLINE int cvAlign( int size, int align )$/;"	f
cvAlignPtr	opencv/include/cxmisc.h	/^CV_INLINE void* cvAlignPtr( const void* ptr, int align CV_DEFAULT(32) )$/;"	f
cvAttrList	opencv/include/cxtypes.h	/^CV_INLINE CvAttrList cvAttrList( const char** attr CV_DEFAULT(NULL),$/;"	f
cvBlob	opencv/include/cvvidsurv.hpp	/^inline CvBlob cvBlob(float x,float y, float w, float h)$/;"	f
cvCalcBackProject	opencv/include/cv.h	899;"	d
cvCalcBackProjectPatch	opencv/include/cv.h	907;"	d
cvCalcEMD	opencv/include/cvcompat.h	/^CV_INLINE  float  cvCalcEMD( const float* signature1, int size1,$/;"	f
cvCalcHist	opencv/include/cv.h	/^CV_INLINE  void  cvCalcHist( IplImage** image, CvHistogram* hist,$/;"	f
cvCalcHistMask	opencv/include/cvcompat.h	124;"	d
cvCalibrateCamera	opencv/include/cvcompat.h	/^CV_INLINE void cvCalibrateCamera( int image_count, int* _point_counts,$/;"	f
cvCalibrateCamera_64d	opencv/include/cvcompat.h	/^CV_INLINE void cvCalibrateCamera_64d( int image_count, int* _point_counts,$/;"	f
cvCaptureFromAVI	opencv/include/highgui.h	354;"	d
cvCaptureFromCAM	opencv/include/highgui.h	353;"	d
cvCaptureFromFile	opencv/include/highgui.h	352;"	d
cvCeil	opencv/include/cxtypes.h	/^CV_INLINE  int  cvCeil( double value )$/;"	f
cvCheckArray	opencv/include/cxcore.h	670;"	d
cvCircleAA	opencv/include/cvcompat.h	/^CV_INLINE  void  cvCircleAA( CvArr* img, CvPoint center, int radius,$/;"	f
cvCloneSeq	opencv/include/cxcore.h	/^CV_INLINE CvSeq* cvCloneSeq( const CvSeq* seq, CvMemStorage* storage CV_DEFAULT(NULL))$/;"	f
cvContourBoundingRect	opencv/include/cvcompat.h	/^CV_INLINE  CvRect  cvContourBoundingRect( void* point_set, int update CV_DEFAULT(0))$/;"	f
cvContourConvexHull	opencv/include/cvcompat.h	394;"	d
cvContourConvexHullApprox	opencv/include/cvcompat.h	403;"	d
cvContourMoments	opencv/include/cvcompat.h	344;"	d
cvContourPerimeter	opencv/include/cv.h	740;"	d
cvConvert	opencv/include/cxcore.h	481;"	d
cvConvertPointsHomogenious	opencv/include/cvcompat.h	895;"	d
cvConvexHull	opencv/include/cvcompat.h	/^CV_INLINE void cvConvexHull( CvPoint* points, int num_points,$/;"	f
cvConvexHullApprox	opencv/include/cvcompat.h	398;"	d
cvCopyImage	opencv/include/cvcompat.h	378;"	d
cvCreateAVIWriter	opencv/include/highgui.h	355;"	d
cvCreateBlobTrackerAuto	opencv/include/cvvidsurv.hpp	/^inline CvBlobTrackerAuto* cvCreateBlobTrackerAuto(int type, void* param)$/;"	f
cvCreateImageData	opencv/include/cvcompat.h	97;"	d
cvCreateProb	opencv/include/cvvidsurv.hpp	/^inline CvProb* cvCreateProb(int type, int dim, CvSize size = cvSize(1,1), void* \/*param*\/ = NULL)$/;"	f
cvCreateSubdivDelaunay2D	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2D* cvCreateSubdivDelaunay2D( CvRect rect, CvMemStorage* storage )$/;"	f
cvCvtPixToPlane	opencv/include/cvcompat.h	170;"	d
cvCvtPlaneToPix	opencv/include/cvcompat.h	171;"	d
cvCvtScale	opencv/include/cxcore.h	479;"	d
cvCvtScaleAbs	opencv/include/cxcore.h	492;"	d
cvDecRefData	opencv/include/cxcore.h	/^CV_INLINE  void  cvDecRefData( CvArr* arr )$/;"	f
cvDetectedBlob	opencv/include/cvvidsurv.hpp	/^CV_INLINE CvDetectedBlob cvDetectedBlob( float x, float y, float w, float h, int ID = 0, float response = 0.0F )$/;"	f
cvDrawCircle	opencv/include/cxcore.h	1348;"	d
cvDrawEllipse	opencv/include/cxcore.h	1349;"	d
cvDrawLine	opencv/include/cxcore.h	1347;"	d
cvDrawPolyLine	opencv/include/cxcore.h	1350;"	d
cvDrawRect	opencv/include/cxcore.h	1346;"	d
cvEllipseAA	opencv/include/cvcompat.h	/^CV_INLINE  void  cvEllipseAA( CvArr* img, CvPoint center, CvSize axes,$/;"	f
cvEllipseBox	opencv/include/cxcore.h	/^CV_INLINE  void  cvEllipseBox( CvArr* img, CvBox2D box, CvScalar color,$/;"	f
cvEndScanGraph	opencv/include/cvcompat.h	/^CV_INLINE  void  cvEndScanGraph( CvGraphScanner* scanner )$/;"	f
cvFFT	opencv/include/cxcore.h	916;"	d
cvFillImage	opencv/include/cvcompat.h	/^CV_INLINE void cvFillImage( CvArr* mat, double color )$/;"	f
cvFindChessBoardCornerGuesses	opencv/include/cvcompat.h	/^cvFindChessBoardCornerGuesses( const void* arr, void* CV_UNREFERENCED(thresharr),$/;"	f
cvFindExtrinsicCameraParams	opencv/include/cvcompat.h	/^CV_INLINE void cvFindExtrinsicCameraParams( int point_count,$/;"	f
cvFindExtrinsicCameraParams_64d	opencv/include/cvcompat.h	/^CV_INLINE void cvFindExtrinsicCameraParams_64d( int point_count,$/;"	f
cvFindFundamentalMatrix	opencv/include/cvcompat.h	/^CV_INLINE  void  cvFindFundamentalMatrix( int* points1, int* points2,$/;"	f
cvFitEllipse	opencv/include/cvcompat.h	/^CV_INLINE  void cvFitEllipse( const CvPoint2D32f* points, int count, CvBox2D* box )$/;"	f
cvFitLine2D	opencv/include/cvcompat.h	/^CV_INLINE  void  cvFitLine2D( CvPoint2D32f* points, int count, int dist,$/;"	f
cvFitLine3D	opencv/include/cvcompat.h	/^CV_INLINE  void  cvFitLine3D( CvPoint3D32f* points, int count, int dist,$/;"	f
cvFloor	opencv/include/cxtypes.h	/^CV_INLINE  int  cvFloor( double value )$/;"	f
cvFont	opencv/include/cxcore.h	/^CV_INLINE CvFont cvFont( double scale, int thickness CV_DEFAULT(1) )$/;"	f
cvFree	opencv/include/cxcore.h	95;"	d
cvFuncName	opencv/include/cxerror.h	131;"	d
cvGetAt	opencv/include/cvcompat.h	348;"	d
cvGetCol	opencv/include/cxcore.h	/^CV_INLINE  CvMat*  cvGetCol( const CvArr* arr, CvMat* submat, int col )$/;"	f
cvGetGraphVtx	opencv/include/cxcore.h	1216;"	d
cvGetHistValue_1D	opencv/include/cvcompat.h	490;"	d
cvGetHistValue_2D	opencv/include/cvcompat.h	492;"	d
cvGetHistValue_3D	opencv/include/cvcompat.h	494;"	d
cvGetHistValue_nD	opencv/include/cvcompat.h	496;"	d
cvGetImageRawData	opencv/include/cvcompat.h	100;"	d
cvGetMatSize	opencv/include/cxmisc.h	/^CV_INLINE  CvSize  cvGetMatSize( const CvMat* mat )$/;"	f
cvGetNextSparseNode	opencv/include/cxcore.h	/^CV_INLINE CvSparseNode* cvGetNextSparseNode( CvSparseMatIterator* mat_iterator )$/;"	f
cvGetPtrAt	opencv/include/cvcompat.h	347;"	d
cvGetRow	opencv/include/cxcore.h	/^CV_INLINE  CvMat*  cvGetRow( const CvArr* arr, CvMat* submat, int row )$/;"	f
cvGetSetElem	opencv/include/cxcore.h	/^CV_INLINE CvSetElem* cvGetSetElem( const CvSet* set_header, int index )$/;"	f
cvGetSubArr	opencv/include/cxcore.h	199;"	d
cvGraphEdgeIdx	opencv/include/cxcore.h	1222;"	d
cvGraphFindEdge	opencv/include/cxcore.h	1203;"	d
cvGraphFindEdgeByPtr	opencv/include/cxcore.h	1204;"	d
cvGraphGetEdgeCount	opencv/include/cxcore.h	1225;"	d
cvGraphGetVtxCount	opencv/include/cxcore.h	1224;"	d
cvGraphVtxIdx	opencv/include/cxcore.h	1219;"	d
cvHoughLines	opencv/include/cvcompat.h	/^CV_INLINE  int  cvHoughLines( CvArr* image, double rho,$/;"	f
cvHoughLinesP	opencv/include/cvcompat.h	/^CV_INLINE  int  cvHoughLinesP( CvArr* image, double rho,$/;"	f
cvHoughLinesSDiv	opencv/include/cvcompat.h	/^CV_INLINE  int  cvHoughLinesSDiv( CvArr* image, double rho, int srn,$/;"	f
cvIncRefData	opencv/include/cxcore.h	/^CV_INLINE  int  cvIncRefData( CvArr* arr )$/;"	f
cvIntegralImage	opencv/include/cvcompat.h	107;"	d
cvInv	opencv/include/cxcore.h	772;"	d
cvInvSqrt	opencv/include/cxtypes.h	283;"	d
cvIplDepth	opencv/include/cxtypes.h	/^CV_INLINE int cvIplDepth( int type )$/;"	f
cvIsInf	opencv/include/cxtypes.h	/^CV_INLINE int cvIsInf( double value )$/;"	f
cvIsNaN	opencv/include/cxtypes.h	/^CV_INLINE int cvIsNaN( double value )$/;"	f
cvKMeans	opencv/include/cvcompat.h	/^CV_INLINE  void  cvKMeans( int num_clusters, float** samples,$/;"	f
cvKalmanUpdateByMeasurement	opencv/include/cvcompat.h	857;"	d
cvKalmanUpdateByTime	opencv/include/cvcompat.h	856;"	d
cvLineAA	opencv/include/cvcompat.h	/^CV_INLINE  void  cvLineAA( CvArr* img, CvPoint pt1, CvPoint pt2,$/;"	f
cvMahalonobis	opencv/include/cxcore.h	838;"	d
cvMake2DPoints	opencv/include/cvcompat.h	890;"	d
cvMake3DPoints	opencv/include/cvcompat.h	891;"	d
cvMat	opencv/include/cxtypes.h	/^CV_INLINE CvMat cvMat( int rows, int cols, int type, void* data CV_DEFAULT(NULL))$/;"	f
cvMatArray	opencv/include/cvcompat.h	/^CV_INLINE CvMat cvMatArray( int rows, int cols, int type,$/;"	f
cvMatMul	opencv/include/cxcore.h	705;"	d
cvMatMulAdd	opencv/include/cxcore.h	704;"	d
cvMatMulAddEx	opencv/include/cxcore.h	715;"	d
cvMatMulAddS	opencv/include/cxcore.h	722;"	d
cvMatchContours	opencv/include/cvcompat.h	108;"	d
cvMean	opencv/include/cvcompat.h	/^CV_INLINE double cvMean( const CvArr* image, const CvArr* mask CV_DEFAULT(0))$/;"	f
cvMeanMask	opencv/include/cvcompat.h	351;"	d
cvMean_StdDev	opencv/include/cvcompat.h	/^CV_INLINE void  cvMean_StdDev( const CvArr* image, double* mean, double* sdv,$/;"	f
cvMean_StdDevMask	opencv/include/cvcompat.h	352;"	d
cvMinAreaRect	opencv/include/cvcompat.h	/^CV_INLINE void cvMinAreaRect( CvPoint* points, int n,$/;"	f
cvMinMaxLocMask	opencv/include/cvcompat.h	356;"	d
cvMirror	opencv/include/cxcore.h	745;"	d
cvMultiplyAccMask	opencv/include/cvcompat.h	120;"	d
cvNormMask	opencv/include/cvcompat.h	354;"	d
cvPoint	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint  cvPoint( int x, int y )$/;"	f
cvPoint2D32f	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint2D32f  cvPoint2D32f( double x, double y )$/;"	f
cvPoint2D64f	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint2D64f  cvPoint2D64f( double x, double y )$/;"	f
cvPoint3D32f	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint3D32f  cvPoint3D32f( double x, double y, double z )$/;"	f
cvPoint3D64f	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint3D64f  cvPoint3D64f( double x, double y, double z )$/;"	f
cvPointFrom32f	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint  cvPointFrom32f( CvPoint2D32f point )$/;"	f
cvPointTo32f	opencv/include/cxtypes.h	/^CV_INLINE  CvPoint2D32f  cvPointTo32f( CvPoint point )$/;"	f
cvPolyLineAA	opencv/include/cvcompat.h	/^CV_INLINE  void  cvPolyLineAA( CvArr* img, CvPoint** pts, int* npts, int contours,$/;"	f
cvProject3D	opencv/include/cvcompat.h	/^CV_INLINE  void  cvProject3D( CvPoint3D32f* points3D, int count,$/;"	f
cvProjectPoints	opencv/include/cvcompat.h	/^CV_INLINE void  cvProjectPoints( int point_count, CvPoint3D64f* _object_points,$/;"	f
cvProjectPointsSimple	opencv/include/cvcompat.h	/^CV_INLINE void  cvProjectPointsSimple( int point_count, CvPoint3D64f* _object_points,$/;"	f
cvPseudoInv	opencv/include/cvcompat.h	342;"	d
cvPseudoInverse	opencv/include/cvcompat.h	/^CV_INLINE double cvPseudoInverse( const CvArr* src, CvArr* dst )$/;"	f
cvQueryHistValue_1D	opencv/include/cvcompat.h	479;"	d
cvQueryHistValue_2D	opencv/include/cvcompat.h	481;"	d
cvQueryHistValue_3D	opencv/include/cvcompat.h	483;"	d
cvQueryHistValue_nD	opencv/include/cvcompat.h	485;"	d
cvROIToRect	opencv/include/cxtypes.h	/^CV_INLINE  CvRect  cvROIToRect( IplROI roi )$/;"	f
cvRand	opencv/include/cvcompat.h	/^CV_INLINE void cvRand( CvRandState* state, CvArr* arr )$/;"	f
cvRandInit	opencv/include/cvcompat.h	/^CV_INLINE  void  cvRandInit( CvRandState* state, double param1,$/;"	f
cvRandInt	opencv/include/cxtypes.h	/^CV_INLINE unsigned cvRandInt( CvRNG* rng )$/;"	f
cvRandNext	opencv/include/cvcompat.h	246;"	d
cvRandReal	opencv/include/cxtypes.h	/^CV_INLINE double cvRandReal( CvRNG* rng )$/;"	f
cvRandSetRange	opencv/include/cvcompat.h	/^CV_INLINE  void  cvRandSetRange( CvRandState* state, double param1,$/;"	f
cvReadByName	opencv/include/cxcore.h	/^CV_INLINE void* cvReadByName( CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadInt	opencv/include/cxcore.h	/^CV_INLINE int cvReadInt( const CvFileNode* node, int default_value CV_DEFAULT(0) )$/;"	f
cvReadIntByName	opencv/include/cxcore.h	/^CV_INLINE int cvReadIntByName( const CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadReal	opencv/include/cxcore.h	/^CV_INLINE double cvReadReal( const CvFileNode* node, double default_value CV_DEFAULT(0.) )$/;"	f
cvReadRealByName	opencv/include/cxcore.h	/^CV_INLINE double cvReadRealByName( const CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadString	opencv/include/cxcore.h	/^CV_INLINE const char* cvReadString( const CvFileNode* node,$/;"	f
cvReadStringByName	opencv/include/cxcore.h	/^CV_INLINE const char* cvReadStringByName( const CvFileStorage* fs, const CvFileNode* map,$/;"	f
cvReadStructByName	opencv/include/cvvidsurv.hpp	/^void inline cvReadStructByName(CvFileStorage* fs, CvFileNode* node, const char* name, void* addr, const char* desc)$/;"	f
cvRealScalar	opencv/include/cxtypes.h	/^CV_INLINE  CvScalar  cvRealScalar( double val0 )$/;"	f
cvRect	opencv/include/cxtypes.h	/^CV_INLINE  CvRect  cvRect( int x, int y, int width, int height )$/;"	f
cvRectIntersection	opencv/include/cvvidsurv.hpp	/^CV_INLINE CvRect cvRectIntersection( const CvRect r1, const CvRect r2 )$/;"	f
cvRectToROI	opencv/include/cxtypes.h	/^CV_INLINE  IplROI  cvRectToROI( CvRect rect, int coi )$/;"	f
cvReleaseBGStatModel	opencv/include/cvaux.h	/^CV_INLINE void cvReleaseBGStatModel( CvBGStatModel** bg_model )$/;"	f
cvReleaseBlobDetector	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobDetector(CvBlobDetector** ppBD)$/;"	f
cvReleaseBlobTrackAnalysis	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobTrackAnalysis(CvBlobTrackAnalysis** pBTPP)$/;"	f
cvReleaseBlobTrackGen	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobTrackGen(CvBlobTrackGen** pBTGen)$/;"	f
cvReleaseBlobTrackPostProc	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobTrackPostProc(CvBlobTrackPostProc** pBTPP)$/;"	f
cvReleaseBlobTracker	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobTracker(CvBlobTracker**ppT )$/;"	f
cvReleaseBlobTrackerAuto	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobTrackerAuto(CvBlobTrackerAuto** ppT)$/;"	f
cvReleaseBlobTrackerOne	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseBlobTrackerOne(CvBlobTrackerOne **ppT )$/;"	f
cvReleaseFGDetector	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseFGDetector(CvFGDetector** ppT )$/;"	f
cvReleaseImageData	opencv/include/cvcompat.h	98;"	d
cvReleaseMatHeader	opencv/include/cvcompat.h	379;"	d
cvReleaseMatND	opencv/include/cxcore.h	/^CV_INLINE  void  cvReleaseMatND( CvMatND** mat )$/;"	f
cvReleaseProb	opencv/include/cvvidsurv.hpp	/^inline void cvReleaseProb(CvProb** ppProb){ppProb[0]->Release();ppProb[0]=NULL;}$/;"	f
cvRemoveMemoryManager	opencv/include/cvcompat.h	359;"	d
cvReshapeND	opencv/include/cxcore.h	408;"	d
cvRodrigues	opencv/include/cvcompat.h	/^CV_INLINE void  cvRodrigues( CvMat* rotation_matrix, CvMat* rotation_vector,$/;"	f
cvRound	opencv/include/cxtypes.h	/^CV_INLINE  int  cvRound( double value )$/;"	f
cvRunningAvgMask	opencv/include/cvcompat.h	121;"	d
cvSURFPoint	opencv/include/cv.h	/^CV_INLINE CvSURFPoint cvSURFPoint( CvPoint2D32f pt, int laplacian,$/;"	f
cvScalar	opencv/include/cxtypes.h	/^CV_INLINE  CvScalar  cvScalar( double val0, double val1 CV_DEFAULT(0),$/;"	f
cvScalarAll	opencv/include/cxtypes.h	/^CV_INLINE  CvScalar  cvScalarAll( double val0123 )$/;"	f
cvScale	opencv/include/cxcore.h	480;"	d
cvSetAt	opencv/include/cvcompat.h	349;"	d
cvSetHistThresh	opencv/include/cvcompat.h	123;"	d
cvSetImageData	opencv/include/cvcompat.h	99;"	d
cvSetNew	opencv/include/cxcore.h	/^CV_INLINE  CvSetElem* cvSetNew( CvSet* set_header )$/;"	f
cvSetRemoveByPtr	opencv/include/cxcore.h	/^CV_INLINE  void cvSetRemoveByPtr( CvSet* set_header, void* elem )$/;"	f
cvSize	opencv/include/cxtypes.h	/^CV_INLINE  CvSize  cvSize( int width, int height )$/;"	f
cvSize2D32f	opencv/include/cxtypes.h	/^CV_INLINE  CvSize2D32f  cvSize2D32f( double width, double height )$/;"	f
cvSize_t	Kernel.h	/^}cvSize_t;$/;"	t	namespace:dmFrameSimple	typeref:struct:dmFrameSimple::__anon165
cvSlice	opencv/include/cxtypes.h	/^CV_INLINE  CvSlice  cvSlice( int start, int end )$/;"	f
cvSqrt	opencv/include/cxtypes.h	284;"	d
cvSquareAccMask	opencv/include/cvcompat.h	119;"	d
cvStackAlloc	opencv/include/cxmisc.h	146;"	d
cvStarDetectorParams	opencv/include/cv.h	/^CV_INLINE CvStarDetectorParams cvStarDetectorParams($/;"	f
cvStarKeypoint	opencv/include/cv.h	/^CV_INLINE CvStarKeypoint cvStarKeypoint(CvPoint pt, int size, float response)$/;"	f
cvStartScanGraph	opencv/include/cvcompat.h	/^CV_INLINE void  cvStartScanGraph( CvGraph* graph, CvGraphScanner* scanner,$/;"	f
cvSubS	opencv/include/cxcore.h	/^CV_INLINE  void  cvSubS( const CvArr* src, CvScalar value, CvArr* dst,$/;"	f
cvSubWrapper	detect.cpp	/^void cvSubWrapper(const CvArr* src1, const CvArr* src2, CvArr* dst,$/;"	f	namespace:dmFrameSimple
cvSubdiv2DEdgeDst	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2DPoint*  cvSubdiv2DEdgeDst( CvSubdiv2DEdge edge )$/;"	f
cvSubdiv2DEdgeOrg	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2DPoint*  cvSubdiv2DEdgeOrg( CvSubdiv2DEdge edge )$/;"	f
cvSubdiv2DGetEdge	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2DEdge  cvSubdiv2DGetEdge( CvSubdiv2DEdge edge, CvNextEdgeType type )$/;"	f
cvSubdiv2DNextEdge	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2DEdge  cvSubdiv2DNextEdge( CvSubdiv2DEdge edge )$/;"	f
cvSubdiv2DRotateEdge	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2DEdge  cvSubdiv2DRotateEdge( CvSubdiv2DEdge edge, int rotate )$/;"	f
cvSubdiv2DSymEdge	opencv/include/cv.h	/^CV_INLINE  CvSubdiv2DEdge  cvSubdiv2DSymEdge( CvSubdiv2DEdge edge )$/;"	f
cvSumPixels	opencv/include/cvcompat.h	/^CV_INLINE double  cvSumPixels( const CvArr* image )$/;"	f
cvT	opencv/include/cxcore.h	735;"	d
cvTermCriteria	opencv/include/cxtypes.h	/^CV_INLINE  CvTermCriteria  cvTermCriteria( int type, int max_iter, double epsilon )$/;"	f
cvTriangleArea	opencv/include/cv.h	/^CV_INLINE  double  cvTriangleArea( CvPoint2D32f a, CvPoint2D32f b, CvPoint2D32f c )$/;"	f
cvUnDistort	opencv/include/cvcompat.h	/^CV_INLINE void  cvUnDistort( const CvArr* src, CvArr* dst,$/;"	f
cvUnDistortOnce	opencv/include/cvcompat.h	/^CV_INLINE void cvUnDistortOnce( const CvArr* src, CvArr* dst,$/;"	f
cvUnsupportedFormat	opencv/include/cxmisc.h	219;"	d
cvUpdateBGStatModel	opencv/include/cvaux.h	/^CV_INLINE int cvUpdateBGStatModel( IplImage* current_frame, CvBGStatModel*  bg_model )$/;"	f
cvUpdateMHIByTime	opencv/include/cvcompat.h	116;"	d
cvWarpPerspectiveQMatrix	opencv/include/cvcompat.h	893;"	d
cvWriteStruct	opencv/include/cvvidsurv.hpp	/^void inline cvWriteStruct(CvFileStorage* fs, const char* name, void* addr, const char* desc, int num=1)$/;"	f
cvWriteToAVI	opencv/include/highgui.h	356;"	d
cvZero	opencv/include/cxcore.h	451;"	d
cv_Tn	opencv/include/ml.h	/^    int* cv_Tn;$/;"	m	struct:CvDTreeNode
cv_folds	opencv/include/ml.h	/^    int   cv_folds;$/;"	m	struct:CvDTreeParams
cv_heap	opencv/include/ml.h	/^    CvSet* cv_heap;$/;"	m	struct:CvDTreeTrainData
cv_lables_buf	opencv/include/ml.h	/^    vector<vector<int> > cv_lables_buf;$/;"	m	struct:CvDTreeTrainData
cv_node_error	opencv/include/ml.h	/^    double* cv_node_error;$/;"	m	struct:CvDTreeNode
cv_node_risk	opencv/include/ml.h	/^    double* cv_node_risk;$/;"	m	struct:CvDTreeNode
cv_stricmp	opencv/include/cvvidsurv.hpp	52;"	d
cv_stricmp	opencv/include/cvvidsurv.hpp	59;"	d
cv_strnicmp	opencv/include/cvvidsurv.hpp	53;"	d
cv_strnicmp	opencv/include/cvvidsurv.hpp	60;"	d
cvbCartToPolar	opencv/include/cvcompat.h	/^CV_INLINE void  cvbCartToPolar( const float* y, const float* x,$/;"	f
cvbFastArctan	opencv/include/cvcompat.h	/^CV_INLINE void  cvbFastArctan( const float* y, const float* x,$/;"	f
cvbFastExp	opencv/include/cvcompat.h	/^CV_INLINE  void  cvbFastExp( const float* x, double* y, int len )$/;"	f
cvbFastLog	opencv/include/cvcompat.h	/^CV_INLINE  void  cvbFastLog( const double* x, float* y, int len )$/;"	f
cvbInvSqrt	opencv/include/cvcompat.h	/^CV_INLINE  void  cvbInvSqrt( const float* x, float* y, int len )$/;"	f
cvbRand	opencv/include/cvcompat.h	/^CV_INLINE void cvbRand( CvRandState* state, float* dst, int len )$/;"	f
cvbReciprocal	opencv/include/cvcompat.h	/^CV_INLINE  void  cvbReciprocal( const float* x, float* y, int len )$/;"	f
cvbSqrt	opencv/include/cvcompat.h	/^CV_INLINE  void  cvbSqrt( const float* x, float* y, int len )$/;"	f
cvmAdd	opencv/include/cvcompat.h	363;"	d
cvmAlloc	opencv/include/cvcompat.h	102;"	d
cvmAllocArray	opencv/include/cvcompat.h	104;"	d
cvmCopy	opencv/include/cvcompat.h	365;"	d
cvmCrossProduct	opencv/include/cvcompat.h	371;"	d
cvmDet	opencv/include/cvcompat.h	375;"	d
cvmDotProduct	opencv/include/cvcompat.h	370;"	d
cvmEigenVV	opencv/include/cvcompat.h	374;"	d
cvmFree	opencv/include/cvcompat.h	103;"	d
cvmFreeArray	opencv/include/cvcompat.h	105;"	d
cvmGet	opencv/include/cxtypes.h	/^CV_INLINE  double  cvmGet( const CvMat* mat, int row, int col )$/;"	f
cvmInvert	opencv/include/cvcompat.h	368;"	d
cvmMahalanobis	opencv/include/cvcompat.h	369;"	d
cvmMul	opencv/include/cvcompat.h	366;"	d
cvmMulTransposed	opencv/include/cvcompat.h	373;"	d
cvmPerspectiveProject	opencv/include/cvcompat.h	/^CV_INLINE void cvmPerspectiveProject( const CvMat* mat, const CvArr* src, CvArr* dst )$/;"	f
cvmScale	opencv/include/cvcompat.h	376;"	d
cvmSet	opencv/include/cxtypes.h	/^CV_INLINE  void  cvmSet( CvMat* mat, int row, int col, double value )$/;"	f
cvmSetIdentity	opencv/include/cvcompat.h	362;"	d
cvmSetZero	opencv/include/cvcompat.h	361;"	d
cvmSub	opencv/include/cvcompat.h	364;"	d
cvmTrace	opencv/include/cvcompat.h	372;"	d
cvmTranspose	opencv/include/cvcompat.h	367;"	d
cvvAddSearchPath	opencv/include/highgui.h	366;"	d
cvvConvertImage	opencv/include/highgui.h	369;"	d
cvvCreateTrackbar	opencv/include/highgui.h	363;"	d
cvvDestroyWindow	opencv/include/highgui.h	362;"	d
cvvInitSystem	opencv/include/highgui.h	358;"	d
cvvLoadImage	opencv/include/highgui.h	364;"	d
cvvNamedWindow	opencv/include/highgui.h	359;"	d
cvvResizeWindow	opencv/include/highgui.h	361;"	d
cvvSaveImage	opencv/include/highgui.h	365;"	d
cvvShowImage	opencv/include/highgui.h	360;"	d
cvvWaitKey	opencv/include/highgui.h	367;"	d
cvvWaitKeyEx	opencv/include/highgui.h	368;"	d
cyrillic	opencv/include/cxcore.h	/^    const int*  cyrillic;$/;"	m	struct:CvFont
d	vascript/ccg/ccg.h	/^	int d;$/;"	m	union:CCG::__anon160
d	vascript/ccg/ccg.h	/^            int d;$/;"	m	union:CCG::Imm::__anon161
d	vascript/ccg/opcodeDes.h	/^                unsigned int d:1;$/;"	m	struct:CCG::OPC1::__anon130::__anon131
data	bmp.h	/^	unsigned char* data;$/;"	m	struct:__anon115
data	opencv/include/cvaux.h	/^    void* data;$/;"	m	union:__anon105
data	opencv/include/cvaux.hpp	/^    void* data;$/;"	m	class:cv::LevMarqSparse
data	opencv/include/cxcore.h	/^    const uchar* data() const { return image ? (const uchar*)image->imageData : 0; }$/;"	f	class:CvImage
data	opencv/include/cxcore.h	/^    const uchar* data() const { return matrix ? matrix->data.ptr : 0; }$/;"	f	class:CvMatrix
data	opencv/include/cxcore.h	/^    uchar* data() { return image ? (uchar*)image->imageData : 0; }$/;"	f	class:CvImage
data	opencv/include/cxcore.h	/^    uchar* data() { return matrix ? matrix->data.ptr : 0; }$/;"	f	class:CvMatrix
data	opencv/include/cxcore.hpp	/^    uchar* data;$/;"	m	class:cv::Mat
data	opencv/include/cxcore.hpp	/^    uchar* data;$/;"	m	class:cv::MatND
data	opencv/include/cxoperations.hpp	/^        _Tp* data;$/;"	m	struct:cv::Vector::Hdr
data	opencv/include/cxtypes.h	/^    schar* data;              \/* Pointer to the first element of the block. *\/$/;"	m	struct:CvSeqBlock
data	opencv/include/cxtypes.h	/^    } data;$/;"	m	struct:CvFileNode	typeref:union:CvFileNode::__anon37
data	opencv/include/cxtypes.h	/^    } data;$/;"	m	struct:CvMat	typeref:union:CvMat::__anon31
data	opencv/include/cxtypes.h	/^    } data;$/;"	m	struct:CvMatND	typeref:union:CvMatND::__anon34
data	opencv/include/ml.h	/^    CvDTreeTrainData* data;$/;"	m	class:CvBoost
data	opencv/include/ml.h	/^    CvDTreeTrainData* data;$/;"	m	class:CvDTree
data	opencv/include/ml.h	/^    CvDTreeTrainData* data;$/;"	m	class:CvRTrees
data	opencv/include/ml.h	/^    float* data;$/;"	m	struct:CvSVMKernelRow
data	opencv/include/ml.h	/^    } data;$/;"	m	struct:CvVectors	typeref:union:CvVectors::__anon43
dataInP	Kernel.h	68;"	d
dataOrder	opencv/include/cxtypes.h	/^    int  dataOrder;         \/* 0 - interleaved color channels, 1 - separate color channels.$/;"	m	struct:_IplImage
dataOutP	Kernel.h	67;"	d
data_root	opencv/include/ml.h	/^    CvDTreeNode* data_root;$/;"	m	struct:CvDTreeTrainData
dataend	opencv/include/cxcore.hpp	/^    uchar* dataend;$/;"	m	class:cv::Mat
dataend	opencv/include/cxcore.hpp	/^    uchar* dataend;$/;"	m	class:cv::MatND
datastart	opencv/include/cxcore.hpp	/^    uchar* datastart;$/;"	m	class:cv::Mat
datastart	opencv/include/cxcore.hpp	/^    uchar* datastart;$/;"	m	class:cv::MatND
datastart	opencv/include/cxoperations.hpp	/^        _Tp* datastart;$/;"	m	struct:cv::Vector::Hdr
db	opencv/include/cxtypes.h	/^        double* db;$/;"	m	union:CvMat::__anon31
db	opencv/include/cxtypes.h	/^        double* db;$/;"	m	union:CvMatND::__anon34
db	opencv/include/ml.h	/^        double** db;$/;"	m	union:CvVectors::__anon43
dbmax	opencv/include/cv.h	/^    CvMat* dbmax;$/;"	m	struct:CvStereoBMState
dbmin	opencv/include/cv.h	/^    CvMat* dbmin;$/;"	m	struct:CvStereoBMState
dce	vascript/graph.cpp	/^void  FlowGraph::dce(){$/;"	f	class:FlowGraph
ddot	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline double Vec<_Tp, cn>::ddot(const Vec<_Tp, cn>& v) const$/;"	f	class:cv::Vec
ddot	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline double Point3_<_Tp>::ddot(const Point3_& pt) const$/;"	f	class:cv::Point3_
ddot	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline double Point_<_Tp>::ddot(const Point_& pt) const$/;"	f	class:cv::Point_
deallocate	opencv/include/cxcore.hpp	/^    void deallocate(pointer p, size_type) {fastFree(p); }$/;"	f	class:cv::Allocator
deallocate	opencv/include/cxcore.hpp	/^template<typename _Tp> static inline void deallocate(_Tp* ptr, size_t n)$/;"	f	namespace:cv
deallocate	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline void AutoBuffer<_Tp, fixed_size>::deallocate()$/;"	f	class:cv::AutoBuffer
debprintf	vascript/debprintf.h	12;"	d
debprintf	vascript/debprintf.h	6;"	d
debug	vascript/flexbison/flexlexer.h	/^	int debug() const		{ return yy_flex_debug; }$/;"	f	class:FlexLexer
decOP	vascript/ccg/opcodeDes.h	201;"	d
decOPinfoList32	vascript/ccg/op_x86_32.h	3;"	d
decOPinfoList64	vascript/ccg/op_x86_64.h	3;"	d
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRADDr,addr16In32, 	67)$/;"	e	enum:CCG::__anon140
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRADDr,addr32In64, 	67)$/;"	e	enum:CCG::__anon140
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRLOCK,LOCK, 	F0)$/;"	e	enum:CCG::__anon137
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPROPS, bits16In32, 	66)$/;"	e	enum:CCG::__anon139
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPROPS, bits64, 	48)$/;"	e	enum:CCG::__anon139
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRREP, REP, 		F3)$/;"	e	enum:CCG::__anon137
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRREP, REPNZ, 	F2)$/;"	e	enum:CCG::__anon137
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRSEG, CS, 		2E)$/;"	e	enum:CCG::__anon138
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRSEG, DS, 		3E)$/;"	e	enum:CCG::__anon138
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRSEG, ES, 		26)$/;"	e	enum:CCG::__anon138
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRSEG, FS, 		64)$/;"	e	enum:CCG::__anon138
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRSEG, GS, 		65)$/;"	e	enum:CCG::__anon138
decPREFIX	vascript/ccg/ccg.h	/^decPREFIX(GPRSEG, SS, 		36)$/;"	e	enum:CCG::__anon138
decPREFIX	vascript/ccg/ccg.h	382;"	d
decision_func	opencv/include/ml.h	/^    CvSVMDecisionFunc* decision_func;$/;"	m	class:CvSVM
declareAllReg	vascript/ccg/ccg.h	472;"	d
declareDefaultValue	vascript/ccg/opcodeDes.h	26;"	d
declareMNname	vascript/ccg/opcodeDes.h	51;"	d
declareOpName	vascript/ccg/opcodeDes.h	40;"	d
declareReg2str	vascript/ccg/ccg.h	533;"	d
def	vascript/symbol.h	/^            GimpleBase* def;$/;"	m	union:Symbol::__anon126
defFlag	vascript/ccg/opcodeDes.h	/^        unsigned int defFlag;$/;"	m	class:CCG::OpInfo
default_func_addr	opencv/include/cxtypes.h	/^    void* default_func_addr;$/;"	m	struct:CvPluginFuncInfo
default_model_name	opencv/include/ml.h	/^    const char* default_model_name;$/;"	m	class:CvStatModel
defineAllReg	vascript/ccg/ccg.h	/^defineAllReg( declareAllReg)$/;"	e	enum:CCG::__anon145
defineAllReg	vascript/ccg/ccg.h	136;"	d
defineMN2str	vascript/ccg/opcodeDes.h	49;"	d
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(1,       84),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(3, 108),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(AH, 4),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(AL, 0),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(AX, 8),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(BH, 7),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(BL, 3),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(BP, 13),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(BX, 11),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(CH, 5),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(CL, 1),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(CX, 9),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(DH, 6),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(DI, 15),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(DL, 2),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(DX, 10),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(EAX, 16),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(EBP, 21),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(EBX, 19),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(ECX, 17),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(EDI, 23),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(EDX, 18),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(ESI, 22),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(ESP, 20),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_BIOS_Sooo, 101),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_BIOooo, 111), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_KERNEooo, 105), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_SYSENTooo, 104), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_SYSENooo, 102), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_SYSEooo, 103), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_SYSooo, 113), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_Sooo, 114), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_TIMEooo, 107), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(IA32_Tooo, 112), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(NULL, 0xff)$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R10, 34),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R11, 35),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R12, 36),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R13, 37),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R14, 38),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R15, 39),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R8 , 32),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(R9 , 33),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RAX, 24),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RBP, 29),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RBX, 27),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RCX, 25),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RDI, 31),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RDX, 26),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RSI, 30),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(RSP, 28),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(SI, 14),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(SP, 12),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(STiom32f, 100),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(Sreg, 106), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(m16OWD, 110), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(ptr16OWD, 109), $/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(rel32,   70),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(rel8,    69),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(st,  56),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(st1, 57),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(st2, 58),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm0 , 40),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm1 , 41),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm10, 50),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm11, 51),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm12, 52),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm13, 53),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm14, 54),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm15, 55),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm2 , 42),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm3 , 43),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm4 , 44),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm5 , 45),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm6 , 46),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm7 , 47),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm8 , 48),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	/^defineOperKind(xmm9 , 49),$/;"	e	enum:CCG::__anon136
defineOperKind	vascript/ccg/ccg.h	149;"	d
defineOperKind2	vascript/ccg/ccg.h	150;"	d
defineOperKind3	vascript/ccg/ccg.h	151;"	d
defineOperKindComma	vascript/ccg/ccg.h	255;"	d
defineOperKindContainer	vascript/ccg/ccg.h	/^defineOperKindContainer(defineOperKind)  $/;"	e	enum:CCG::__anon136
defineOperKindContainer	vascript/ccg/ccg.h	299;"	d
defineReg2str	vascript/ccg/ccg.h	484;"	d
defineReg2str2	vascript/ccg/ccg.h	527;"	d
defineRegB	vascript/ccg/ccg.h	34;"	d
defineRegE	vascript/ccg/ccg.h	54;"	d
defineRegQ	vascript/ccg/ccg.h	64;"	d
defineRegQe	vascript/ccg/ccg.h	74;"	d
defineRegSpecial	vascript/ccg/ccg.h	/^defineRegSpecial( defineOperKindComma)$/;"	e	enum:CCG::__anon136
defineRegSpecial	vascript/ccg/ccg.h	115;"	d
defineRegSt	vascript/ccg/ccg.h	104;"	d
defineRegW	vascript/ccg/ccg.h	44;"	d
defineRegX	vascript/ccg/ccg.h	84;"	d
defineRegXe	vascript/ccg/ccg.h	94;"	d
defuse	vascript/gimple.hxx	/^        GimpleBase* defuse;$/;"	m	class:GimpleBase
degree	opencv/include/ml.h	/^    double      degree; \/\/ for poly$/;"	m	struct:CvSVMParams
deleteGimpleNode	vascript/graph.hxx	/^    void deleteGimpleNode(GimpleNode* gnode){$/;"	f	class:FlowGraph
delete_obj	opencv/include/cv.hpp	/^template<> inline void Ptr<CvHaarClassifierCascade>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cv.hpp	/^template<> inline void Ptr<CvHistogram>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cv.hpp	/^template<> inline void Ptr<CvStereoBMState>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<> inline void Ptr<CvFileStorage>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<> inline void Ptr<CvMat>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<> inline void Ptr<CvMatND>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<> inline void Ptr<CvMemStorage>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<> inline void Ptr<CvSparseMat>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<> inline void Ptr<IplImage>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Ptr<_Tp>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/highgui.hpp	/^template<> inline void Ptr<CvCapture>::delete_obj()$/;"	f	class:cv::Ptr
delete_obj	opencv/include/highgui.hpp	/^template<> inline void Ptr<CvVideoWriter>::delete_obj()$/;"	f	class:cv::Ptr
delimiter	opencv/include/ml.h	/^    char delimiter;$/;"	m	class:CvMLData
delta	opencv/include/cv.h	/^    int delta;$/;"	m	struct:CvMSERParams
delta	opencv/include/cvaux.h	/^    float  delta;		\/* Affects color and color co-occurrence quantization, typically set to 2.					*\/$/;"	m	struct:CvFGDStatModelParams
deltaP	opencv/include/cvaux.hpp	/^    CvMat* deltaP; \/\/computed increase of parameters (result of normal system solution )$/;"	m	class:cv::LevMarqSparse
deltas	opencv/include/cvtypes.h	/^    schar     deltas[8][2];$/;"	m	struct:CvChainPtReader
density	opencv/include/cvaux.hpp	/^		double density;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
depth	opencv/include/cvtypes.h	/^    float depth; \/* distance between the farthest point and the convex hull *\/$/;"	m	struct:CvConvexityDefect
depth	opencv/include/cxcore.h	/^    int depth() const { return image ? image->depth : 0; }$/;"	f	class:CvImage
depth	opencv/include/cxcore.h	/^    int depth() const { return matrix ? CV_MAT_DEPTH(matrix->type) : 0; }$/;"	f	class:CvMatrix
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<_Tp>::value, channels = cn, type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::Vec::__anon69
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon70
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon71
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon72
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon73
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon74
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon75
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon76
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon77
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 1,$/;"	e	enum:cv::DataType::__anon78
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon80
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon81
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon82
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon84
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 2,$/;"	e	enum:cv::DataType::__anon87
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 3,$/;"	e	enum:cv::DataType::__anon83
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 4,$/;"	e	enum:cv::DataType::__anon85
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = 4,$/;"	e	enum:cv::DataType::__anon86
depth	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<channel_type>::value, channels = cn,$/;"	e	enum:cv::DataType::__anon79
depth	opencv/include/cxmat.hpp	/^inline int Mat::depth() const { return CV_MAT_DEPTH(flags); }$/;"	f	class:cv::Mat
depth	opencv/include/cxmat.hpp	/^inline int MatND::depth() const { return CV_MAT_DEPTH(flags); }$/;"	f	class:cv::MatND
depth	opencv/include/cxmat.hpp	/^inline int SparseMat::depth() const$/;"	f	class:cv::SparseMat
depth	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int MatND_<_Tp>::depth() const$/;"	f	class:cv::MatND_
depth	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int Mat_<_Tp>::depth() const$/;"	f	class:cv::Mat_
depth	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int SparseMat_<_Tp>::depth() const$/;"	f	class:cv::SparseMat_
depth	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline int Seq<_Tp>::depth() const$/;"	f	class:cv::Seq
depth	opencv/include/cxtypes.h	/^    int  depth;             \/* Pixel depth in bits: IPL_DEPTH_8U, IPL_DEPTH_8S, IPL_DEPTH_16S,$/;"	m	struct:_IplImage
depth	opencv/include/ml.h	/^    int depth;$/;"	m	struct:CvDTreeNode
depthHigh	opencv/include/cvaux.hpp	/^		unsigned int depthLow, depthHigh;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
depthLow	opencv/include/cvaux.hpp	/^		unsigned int depthLow, depthHigh;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
depth_point	opencv/include/cvtypes.h	/^    CvPoint* depth_point; \/* the farthest from the convex hull point within the defect *\/$/;"	m	struct:CvConvexityDefect
derivAperture	opencv/include/cvaux.hpp	/^    int derivAperture;$/;"	m	struct:cv::HOGDescriptor
desc	opencv/include/cv.h	/^CVAPI(struct CvFeatureTree*) cvCreateKDTree(CvMat* desc);$/;"	v
description	vascript/ccg/opcodeDes.h	/^        char* description;$/;"	m	class:CCG::OpInfo
destroy	opencv/include/cxcore.hpp	/^    void destroy(pointer p) { p->~_Tp(); }$/;"	f	class:cv::Allocator
detach	opencv/include/cxcore.h	/^    void detach()$/;"	f	class:CvImage
diag	opencv/include/cxmat.hpp	/^    M diag(int d=0) const { return ((M)e).diag(d); }$/;"	f	class:cv::MatExpr_
diag	opencv/include/cxmat.hpp	/^inline Mat Mat::diag(const Mat& d)$/;"	f	class:cv::Mat
diag	opencv/include/cxmat.hpp	/^inline Mat Mat::diag(int d) const$/;"	f	class:cv::Mat
diag	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::diag(int d) const$/;"	f	class:cv::Mat_
diff	bmptest.cpp	/^void diff(rgb_t* in1, rgb_t* in2, rgb_t* out, int w, int h){$/;"	f
diffKernel	Kernel.hxx	/^inline void diffKernel(char* dataout, char* dataIn1, char* dataIn2)$/;"	f	namespace:dmFrameSimple
difference_type	opencv/include/cxcore.hpp	/^    typedef int difference_type;$/;"	t	class:cv::MatConstIterator_
difference_type	opencv/include/cxcore.hpp	/^    typedef ptrdiff_t difference_type;$/;"	t	class:cv::Allocator
dim	opencv/include/cxtypes.h	/^    dim[CV_MAX_DIM];$/;"	m	struct:CvMatND	typeref:struct:CvMatND::__anon35
dims	opencv/include/cxcore.h	/^    int dims; \/* number of dimensions to iterate *\/$/;"	m	struct:CvNArrayIterator
dims	opencv/include/cxcore.hpp	/^        int dims;$/;"	m	struct:cv::SparseMat::Hdr
dims	opencv/include/cxcore.hpp	/^    int dims;$/;"	m	class:cv::MatND
dims	opencv/include/cxmat.hpp	/^inline int SparseMat::dims() const$/;"	f	class:cv::SparseMat
dims	opencv/include/cxtypes.h	/^    int dims;$/;"	m	struct:CvMatND
dims	opencv/include/cxtypes.h	/^    int dims;$/;"	m	struct:CvSparseMat
dims	opencv/include/ml.h	/^    int dims, count;$/;"	m	struct:CvVectors
dir	opencv/include/cv.h	/^    float dir;$/;"	m	struct:CvSURFPoint
direction	opencv/include/ml.h	/^    CvMat* direction;$/;"	m	struct:CvDTreeTrainData
disasm	vascript/ccg/ccg.h	/^		void disasm(char* buf)const{$/;"	f	class:CCG::MemMod
disp	vascript/ccg/ccg.h	/^        Disp disp;$/;"	m	class:CCG::Instr
dispLeft	opencv/include/cv.h	/^    CvMat* dispLeft;$/;"	m	struct:CvStereoGCState
dispRight	opencv/include/cv.h	/^    CvMat* dispRight;$/;"	m	struct:CvStereoGCState
distortion	opencv/include/cvaux.h	/^    float   distortion[4]; \/* distortion coefficients - two coefficients for radial distortion$/;"	m	struct:CvCamera
distortion	opencv/include/cvaux.h	/^    float distortion[4];$/;"	m	struct:__anon110
disttype	opencv/include/cvcompat.h	/^    int       disttype; \/* distribution type *\/$/;"	m	struct:CvRandState
dmFrameSimple	Kernel.h	/^namespace dmFrameSimple{$/;"	n
dmFrameSimple	Kernel.hxx	/^namespace dmFrameSimple{$/;"	n
dmFrameSimple	cvKernel.h	/^namespace dmFrameSimple{$/;"	n
dmFrameSimple	detect.cpp	/^namespace dmFrameSimple{$/;"	n	file:
dmFrameSimple	filterKernel.cpp	/^namespace dmFrameSimple{$/;"	n	file:
dmFrameSimple	transColor.cpp	/^namespace dmFrameSimple{$/;"	n	file:
dmFrameSimple	transforKernel.cpp	/^namespace dmFrameSimple{$/;"	n	file:
dot	opencv/include/cxmat.hpp	/^    double dot(const M& m) const { return ((M)e).dot(m); }$/;"	f	class:cv::MatExpr_
dot	opencv/include/cxoperations.hpp	/^dot(const Vector<_Tp>& v1, const Vector<_Tp>& v2)$/;"	f	namespace:cv
dot	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline _Tp Vec<_Tp, cn>::dot(const Vec<_Tp, cn>& v) const$/;"	f	class:cv::Vec
dot	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp Point3_<_Tp>::dot(const Point3_& pt) const$/;"	f	class:cv::Point3_
dot	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp Point_<_Tp>::dot(const Point_& pt) const$/;"	f	class:cv::Point_
dst	opencv/include/cxcore.h	/^    CvGraphVtx* dst;       \/* current graph edge destination vertex *\/$/;"	m	struct:CvGraphScanner
dstType	opencv/include/cv.hpp	/^    int srcType, dstType, bufType;$/;"	m	class:cv::FilterEngine
dstY	opencv/include/cv.hpp	/^    int bufStep, startY, startY0, endY, rowCount, dstY;$/;"	m	class:cv::FilterEngine
dstf	vascript/compileflexbison.bat	/^set dstf=vaslexer.cpp$/;"	v
dump	vascript/gimple.hxx	/^        virtual void dump(FILE* fp)const { dumpGimple(fp);};$/;"	f	class:GimpleGraphNode
dump	vascript/gimple.hxx	/^        virtual void dump(FILE* fp)const { dumpGimple(fp);};$/;"	f	class:GimpleNode
dump	vascript/node.h	/^	virtual void dump(FILE* fp)const { fprintf(fp, "Node:%p\\n", this);};$/;"	f	class:Node
dump	vascript/node.hxx	/^	virtual void dump(FILE* fp)const { dumpAst(fp);};$/;"	f	class:AstGraphNode
dump	vascript/node.hxx	/^	virtual void dump(FILE* fp)const { dumpAst(fp);};$/;"	f	class:AstNode
dump	vascript/op.h	/^	void dump(FILE* fp)const{$/;"	f	class:OpCode
dump	vascript/symbol.cpp	/^void SymbolInfo::dump(FILE* fp)const{$/;"	f	class:SymbolInfo
dump	vascript/vacg.h	/^    void dump(FILE* fp){fprintf(fp, "<Type:%3d,Addr:%p>",var_type,var);}$/;"	f	class:VaVar
dumpAst	vascript/gimple.hxx	/^        virtual void dumpAst(FILE* fp)const { };$/;"	f	class:GimpleGraphNode
dumpAst	vascript/graph.hxx	/^    virtual void dumpAst(FILE* fp)const { $/;"	f	class:FlowGraph
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { $/;"	f	class:AstAssginState
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { $/;"	f	class:AstFilterState
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { $/;"	f	class:AstOpExpr
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { $/;"	f	class:AstVarExpr
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { fprintf(fp, "AstConstExpr:%p\\n", this);};$/;"	f	class:AstConstExpr
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { fprintf(fp, "AstNode:%p\\n", this);};$/;"	f	class:AstNode
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { fprintf(fp, "AstStatement:%p\\n", this);};$/;"	f	class:AstStatement
dumpAst	vascript/node.hxx	/^	virtual void dumpAst(FILE* fp)const { m_Graph -> dumpAst(fp); fprintf(fp, "AstNode:%p\\n", this);};$/;"	f	class:AstGraphNode
dumpCode	vascript/vacg.h	/^        void dumpCode(){ for(u8* p = f0; p<f; p++) printf("%0x ", *p);}$/;"	f	class:vaCG
dumpGimple	vascript/gimple.hxx	/^        virtual void dumpGimple(FILE* fp)const { $/;"	f	class:GimpleAssign
dumpGimple	vascript/gimple.hxx	/^        virtual void dumpGimple(FILE* fp)const { $/;"	f	class:GimpleBase
dumpGimple	vascript/gimple.hxx	/^        virtual void dumpGimple(FILE* fp)const {}$/;"	f	class:GimpleNode
dumpGimple	vascript/graph.hxx	/^    virtual void dumpGimple(FILE* fp)const { $/;"	f	class:FlowGraph
dumpGimple	vascript/node.cpp	/^void GimpleGraphNode:: dumpGimple(FILE* fp)const $/;"	f	class:GimpleGraphNode
dval	vascript/release/vasparser.cpp	/^double dval;$/;"	m	union:__anon124	file:
dval	vascript/release/vasparser.h	/^double dval;$/;"	m	union:__anon125
dx	opencv/include/cxcore.h	/^    float       dx; \/* horizontal interval between letters *\/$/;"	m	struct:CvFont
dx1	opencv/include/cv.hpp	/^    int dx1, dx2;$/;"	m	class:cv::FilterEngine
dx2	opencv/include/cv.hpp	/^    int dx1, dx2;$/;"	m	class:cv::FilterEngine
dxyOne	transforKernel.cpp	/^void dxyOne(char* dataOut, char* dataIn,int row,int col,int step,int sLimit)$/;"	f	namespace:dmFrameSimple
e	opencv/include/cxmat.hpp	/^    E e;$/;"	m	class:cv::MatExpr_
ea	opencv/include/cvaux.hpp	/^    CvMat** ea; \/\/ sum_i  AijT * e_ij , used as right part of normal equation$/;"	m	class:cv::LevMarqSparse
eachgray	bmp.h	123;"	d
eachrgb	bmp.h	121;"	d
eb	opencv/include/cvaux.hpp	/^    CvMat** eb; \/\/ sum_j  BijT * e_ij , used as right part of normal equation$/;"	m	class:cv::LevMarqSparse
edge	opencv/include/cxcore.h	/^    CvGraphEdge* edge;     \/* current edge *\/$/;"	m	struct:CvGraphScanner
edgeBlurSize	opencv/include/cv.h	/^    int edgeBlurSize;$/;"	m	struct:CvMSERParams
edgeBuf	opencv/include/cv.h	/^    CvMat* edgeBuf;$/;"	m	struct:CvStereoGCState
edge_operator	vascript/vascript.y	/^edge_operator: TK_SOBEL                     {  $$=new AstVarExpr(Sobel_symblinfo   );debprintf("[%p]",Sobel);}$/;"	l
edge_weights	opencv/include/cvaux.h	/^    float* edge_weights;$/;"	m	struct:CvCliqueFinder
egvals	opencv/include/cvaux.h	/^    float egvals[2];$/;"	m	struct:CvContourOrientation
egvects	opencv/include/cvaux.h	/^    float egvects[4];$/;"	m	struct:CvContourOrientation
ehmm	opencv/include/cvaux.h	/^        struct CvEHMM* ehmm; \/* pointer to an embedded model or NULL, if it is a leaf *\/$/;"	m	union:CvEHMM::__anon106	typeref:struct:CvEHMM::__anon106::CvEHMM
eigenvalues	opencv/include/cxcore.hpp	/^    Mat eigenvalues;$/;"	m	class:cv::PCA
eigenvectors	opencv/include/cxcore.hpp	/^    Mat eigenvectors;$/;"	m	class:cv::PCA
ele	vascript/ccg/parseCoderHtml.cpp	/^char ele[1024];$/;"	v
ele2	vascript/ccg/parseCoderHtml.cpp	/^char ele2[1024];$/;"	v
elemSize	opencv/include/cxmat.hpp	/^inline size_t Mat::elemSize() const { return CV_ELEM_SIZE(flags); }$/;"	f	class:cv::Mat
elemSize	opencv/include/cxmat.hpp	/^inline size_t MatND::elemSize() const { return getElemSize(flags); }$/;"	f	class:cv::MatND
elemSize	opencv/include/cxmat.hpp	/^inline size_t SparseMat::elemSize() const$/;"	f	class:cv::SparseMat
elemSize	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t MatND_<_Tp>::elemSize() const$/;"	f	class:cv::MatND_
elemSize	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t Mat_<_Tp>::elemSize() const$/;"	f	class:cv::Mat_
elemSize	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline size_t Seq<_Tp>::elemSize() const$/;"	f	class:cv::Seq
elemSize1	opencv/include/cxmat.hpp	/^inline size_t Mat::elemSize1() const { return CV_ELEM_SIZE1(flags); }$/;"	f	class:cv::Mat
elemSize1	opencv/include/cxmat.hpp	/^inline size_t MatND::elemSize1() const { return CV_ELEM_SIZE1(flags); }$/;"	f	class:cv::MatND
elemSize1	opencv/include/cxmat.hpp	/^inline size_t SparseMat::elemSize1() const$/;"	f	class:cv::SparseMat
elemSize1	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t MatND_<_Tp>::elemSize1() const$/;"	f	class:cv::MatND_
elemSize1	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t Mat_<_Tp>::elemSize1() const$/;"	f	class:cv::Mat_
element	opencv/include/cv.h	/^CVAPI(void)  cvReleaseStructuringElement( IplConvKernel** element );$/;"	v
eles	vascript/ccg/parseCoderHtml.cpp	/^char eles[32][128];$/;"	v
elesLast	vascript/ccg/parseCoderHtml.cpp	/^char elesLast[32][128];$/;"	v
ellipseAngle	opencv/include/cvaux.hpp	/^		double ellipseAngle;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
ellipseHeight	opencv/include/cvaux.hpp	/^		int width, height, maxWidth, maxHeight, ellipseHeight, ellipseWidth;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
ellipseWidth	opencv/include/cvaux.hpp	/^		int width, height, maxWidth, maxHeight, ellipseHeight, ellipseWidth;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
elname	opencv/include/cxcore.hpp	/^    string elname;$/;"	m	class:cv::FileStorage
elsenode	vascript/node.hxx	/^        AstStatement* elsenode;$/;"	m	class:AstIfNode
empty	opencv/include/cxmat.hpp	/^inline bool Mat::empty() const { return data == 0; }$/;"	f	class:cv::Mat
empty	opencv/include/cxoperations.hpp	/^    bool empty() const { return hdr.size == 0; }$/;"	f	class:cv::Vector
empty	opencv/include/cxoperations.hpp	/^inline bool FileNode::empty() const { return node == 0; }$/;"	f	class:cv::FileNode
empty	opencv/include/cxoperations.hpp	/^inline bool Range::empty() const { return start == end; }$/;"	f	class:cv::Range
empty	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline bool Ptr<_Tp>::empty() const { return obj == 0; }$/;"	f	class:cv::Ptr
empty	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline bool Seq<_Tp>::empty() const$/;"	f	class:cv::Seq
end	opencv/include/cvaux.hpp	/^        int begin, end;$/;"	m	struct:cv::Octree::Node
end	opencv/include/cvtypes.h	/^    CvPoint* end; \/* point of the contour where the defect ends *\/$/;"	m	struct:CvConvexityDefect
end	opencv/include/cxcore.hpp	/^    int start, end;$/;"	m	class:cv::Range
end	opencv/include/cxmat.hpp	/^inline SparseMatConstIterator SparseMat::end() const$/;"	f	class:cv::SparseMat
end	opencv/include/cxmat.hpp	/^inline SparseMatIterator SparseMat::end()$/;"	f	class:cv::SparseMat
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp> Mat::end() const$/;"	f	class:cv::Mat
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp> Mat_<_Tp>::end() const$/;"	f	class:cv::Mat_
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp> Mat::end()$/;"	f	class:cv::Mat
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp> Mat_<_Tp>::end()$/;"	f	class:cv::Mat_
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatConstIterator_<_Tp> SparseMat::end() const$/;"	f	class:cv::SparseMat
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatConstIterator_<_Tp> SparseMat_<_Tp>::end() const$/;"	f	class:cv::SparseMat_
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatIterator_<_Tp> SparseMat::end()$/;"	f	class:cv::SparseMat
end	opencv/include/cxmat.hpp	/^template<typename _Tp> inline SparseMatIterator_<_Tp> SparseMat_<_Tp>::end()$/;"	f	class:cv::SparseMat_
end	opencv/include/cxoperations.hpp	/^    _Tp* end() { return hdr.data + hdr.size; }$/;"	f	class:cv::Vector
end	opencv/include/cxoperations.hpp	/^    const _Tp* end() const { return hdr.data + hdr.size; }$/;"	f	class:cv::Vector
end	opencv/include/cxoperations.hpp	/^inline FileNodeIterator FileNode::end() const$/;"	f	class:cv::FileNode
end	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp> Seq<_Tp>::end() const$/;"	f	class:cv::Seq
end1	opencv/include/cvvidsurv.hpp	/^    int end1,end2;$/;"	m	struct:CvTracksTimePos
end2	opencv/include/cvvidsurv.hpp	/^    int end1,end2;$/;"	m	struct:CvTracksTimePos
endY	opencv/include/cv.hpp	/^    int bufStep, startY, startY0, endY, rowCount, dstY;$/;"	m	class:cv::FilterEngine
end_index	opencv/include/cxtypes.h	/^    int  start_index, end_index;$/;"	m	struct:CvSlice
end_pusharg	vascript/vacg.h	/^        void end_pusharg(){}$/;"	f	class:vaCG
ensemble	opencv/include/ml.h	/^    CvBoost* ensemble;$/;"	m	class:CvBoostTree
epipole	opencv/include/cvaux.h	/^    CvPoint3D32f epipole[2];$/;"	m	struct:CvStereoCamera
eps	opencv/include/ml.h	/^    double eps;$/;"	m	class:CvSVMSolver
epsilon	opencv/include/cxcore.hpp	/^    double epsilon;$/;"	m	class:cv::TermCriteria
epsilon	opencv/include/cxtypes.h	/^    double epsilon;$/;"	m	struct:CvTermCriteria
err	opencv/include/cv.hpp	/^    CvMat* err;$/;"	m	class:CvLevMarq
err	opencv/include/cvaux.hpp	/^    CvMat* err; \/\/error X-hX$/;"	m	class:cv::LevMarqSparse
err	opencv/include/cxcore.hpp	/^    int err, count;$/;"	m	class:cv::LineIterator
err	opencv/include/cxcore.hpp	/^    string err;$/;"	m	class:cv::Exception
err	opencv/include/cxtypes.h	/^    int  err;$/;"	m	struct:CvLineIterator
errNorm	opencv/include/cv.hpp	/^    double prevErrNorm, errNorm;$/;"	m	class:CvLevMarq
errNorm	opencv/include/cvaux.hpp	/^    double prevErrNorm, errNorm;$/;"	m	class:cv::LevMarqSparse
errorCovPost	opencv/include/cv.hpp	/^    Mat errorCovPost;       \/\/ posteriori error estimate covariance matrix (P(k)):$/;"	m	class:cv::KalmanFilter
errorCovPre	opencv/include/cv.hpp	/^    Mat errorCovPre;        \/\/ priori error estimate covariance matrix (P'(k)):$/;"	m	class:cv::KalmanFilter
error_cov_post	opencv/include/cvtypes.h	/^    CvMat* error_cov_post;      \/* posteriori error estimate covariance matrix (P(k)):$/;"	m	struct:CvKalman
error_cov_pre	opencv/include/cvtypes.h	/^    CvMat* error_cov_pre;       \/* priori error estimate covariance matrix (P'(k)):$/;"	m	struct:CvKalman
etalonParamCount	opencv/include/cvaux.h	/^    int     etalonParamCount;$/;"	m	class:CvCalibFilter
etalonParams	opencv/include/cvaux.h	/^    double* etalonParams;$/;"	m	class:CvCalibFilter
etalonPointCount	opencv/include/cvaux.h	/^    int     etalonPointCount;$/;"	m	class:CvCalibFilter
etalonPoints	opencv/include/cvaux.h	/^    CvPoint2D32f* etalonPoints;$/;"	m	class:CvCalibFilter
etalonType	opencv/include/cvaux.h	/^    CvCalibEtalonType  etalonType;$/;"	m	class:CvCalibFilter
exit0	vascript/compileflexbison.bat	/^:exit0/;"	l
expr	vascript/release/vasparser.cpp	/^AstExpression* expr;$/;"	m	union:__anon124	file:
expr	vascript/release/vasparser.h	/^AstExpression* expr;$/;"	m	union:__anon125
expression	vascript/vascript.y	/^expression:	expression '+' expression   {  $$= new AstOpExpr(OpCode('+'),$1,$3);debprintf("e+e\\n");  }$/;"	l
ext_inc	Makefile	/^ext_inc= vascript vascript\/ccg vascript\/OBJ_DIR \/usr\/include\/opencv\/ #opencv\/include $/;"	m
ext_inc	vascript/Makefile	/^ext_inc=..\/opencv\/include ..\/ .\/ ccg\/ $/;"	m
ext_lib	Makefile	/^ext_lib=cxcore highgui $/;"	m
ext_lib	vascript/Makefile	/^ext_lib=cxcore highgui $/;"	m
ext_lib	vascript/Makefile	/^ext_lib=opencv_core opencv_highgui $/;"	m
ext_libpath	vascript/Makefile	/^ext_libpath=..\/opencv\/lib$/;"	m
ext_libpath	vascript/Makefile	/^ext_libpath=..\/opencv\/libx64$/;"	m
extended	opencv/include/cv.h	/^    int extended;$/;"	m	struct:CvSURFParams
eye	opencv/include/cxmat.hpp	/^inline MatExpr_Initializer Mat::eye(Size size, int type)$/;"	f	class:cv::Mat
eye	opencv/include/cxmat.hpp	/^inline MatExpr_Initializer Mat::eye(int rows, int cols, int type)$/;"	f	class:cv::Mat
eye	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatExpr_Initializer Mat_<_Tp>::eye(Size size)$/;"	f	class:cv::Mat_
eye	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatExpr_Initializer Mat_<_Tp>::eye(int rows, int cols)$/;"	f	class:cv::Mat_
f	dmvideo.cpp	/^frameKernel_t f ;$/;"	v
f	opencv/include/cxtypes.h	/^        double f; \/* scalar floating-point number *\/$/;"	m	union:CvFileNode::__anon37
f	opencv/include/cxtypes.h	/^    double f;$/;"	m	union:Cv64suf
f	opencv/include/cxtypes.h	/^    float f;$/;"	m	union:Cv32suf
f	vascript/vacg.h	/^        u8* f;\/\/! From f, the code will be written in.$/;"	m	class:vaCG
f0	vascript/vacg.h	/^        u8* f0;\/\/! From f, the code will be written in.$/;"	m	class:vaCG
fHistogram	opencv/include/cvaux.hpp	/^		CvHistogram *fHistogram;$/;"	m	class:CvAdaptiveSkinDetector::Histogram
fHistogramMergeFactor	opencv/include/cvaux.hpp	/^	double fHistogramMergeFactor, fHuePercentCovered;$/;"	m	class:CvAdaptiveSkinDetector
fHuePercentCovered	opencv/include/cvaux.hpp	/^	double fHistogramMergeFactor, fHuePercentCovered;$/;"	m	class:CvAdaptiveSkinDetector
fKernel	Kernel.h	/^typedef void (* fKernel)(char* dataOut, char* dataIn,int row,int col,int step,int* KernelArray,int mrows,int ncols );$/;"	t	namespace:dmFrameSimple
fKernelArg	Kernel.h	/^void fandFilter fKernelArg;$/;"	m	namespace:dmFrameSimple
fKernelArg	Kernel.h	50;"	d
f_param1	opencv/include/ml.h	/^    double f_param1, f_param2;$/;"	m	class:CvANN_MLP
f_param2	opencv/include/ml.h	/^    double f_param1, f_param2;$/;"	m	class:CvANN_MLP
fandFilter	filterKernel.cpp	/^void fandFilter (char *dataOut, char *dataIn, int row,int col,int step,int* KernelArray,int m,int n )$/;"	f	namespace:dmFrameSimple
featureIdx	opencv/include/cv.hpp	/^        int featureIdx;$/;"	m	struct:cv::CascadeClassifier::DTreeNode
featureType	opencv/include/cv.hpp	/^    int featureType;$/;"	m	class:cv::CascadeClassifier
features	opencv/include/cvaux.hpp	/^    vector<Feature> features;$/;"	m	class:cv::FernClassifier
fernClassifier	opencv/include/cvaux.hpp	/^    FernClassifier fernClassifier;$/;"	m	class:cv::PlanarObjectDetector
feval	opencv/include/cv.hpp	/^    Ptr<FeatureEvaluator> feval;$/;"	m	class:cv::CascadeClassifier
file	opencv/include/cxcore.hpp	/^    string file;$/;"	m	class:cv::Exception
file_header	bmp.h	/^			bitmapFileHeader_t file_header; $/;"	m	struct:__anon115::__anon116::__anon117
filename	opencv/include/cxflann.h	/^	std::string filename;		\/\/ filename of the stored index$/;"	m	struct:cv::flann::SavedIndexParams
filter2D	opencv/include/cv.hpp	/^    Ptr<BaseFilter> filter2D;$/;"	m	class:cv::FilterEngine
filterKernel	vascript/node.hxx	/^	SymbolInfo  filterKernel;$/;"	m	class:AstFilterState
filterkernel	vascript/vascript.y	/^filterkernel: $/;"	l
find	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp* SparseMat::find(const int* idx, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp* SparseMat::find(int i0, int i1, int i2, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp* SparseMat::find(int i0, int i1, size_t* hashval) const$/;"	f	class:cv::SparseMat
find	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp* SparseMat::find(int i0, size_t* hashval) const$/;"	f	class:cv::SparseMat
first	opencv/include/cv.hpp	/^        int first;$/;"	m	struct:cv::CascadeClassifier::Stage
first	opencv/include/cxcore.h	/^    static CvModuleInfo* first;$/;"	m	struct:CvModule
first	opencv/include/cxcore.h	/^    static CvTypeInfo* first;$/;"	m	struct:CvType
first_column	vascript/release/vasparser.cpp	/^      int first_column;$/;"	m	struct:yyltype	file:
first_column	vascript/release/vasparser.h	/^      int first_column;$/;"	m	struct:yyltype
first_column	vascript/yy.lex.parser.h	/^      int first_column;$/;"	m	struct:YYLTYPE
first_line	vascript/release/vasparser.cpp	/^      int first_line;$/;"	m	struct:yyltype	file:
first_line	vascript/release/vasparser.h	/^      int first_line;$/;"	m	struct:yyltype
first_line	vascript/yy.lex.parser.h	/^      int first_line;$/;"	m	struct:YYLTYPE
fixp	opencv/include/cvaux.h	/^    int* fixp; \/\/node with minimal disconnections$/;"	m	struct:CvCliqueFinder
fjac	opencv/include/cvaux.hpp	/^    void (*fjac)(int i, int j, Mat& point_params, Mat& cam_params, Mat& A, Mat& B, void* data);$/;"	m	class:cv::LevMarqSparse
fl	opencv/include/cxtypes.h	/^        float* fl;$/;"	m	union:CvMat::__anon31
fl	opencv/include/cxtypes.h	/^        float* fl;$/;"	m	union:CvMatND::__anon34
fl	opencv/include/ml.h	/^        float** fl;$/;"	m	union:CvVectors::__anon43
flConfidence	opencv/include/cvtypes.h	/^    float* flConfidence;    \/* Confidence for each Sample            *\/$/;"	m	struct:CvConDensation
flCumulative	opencv/include/cvtypes.h	/^    float* flCumulative;    \/* Cumulative confidence                 *\/$/;"	m	struct:CvConDensation
flNewSamples	opencv/include/cvtypes.h	/^    float** flNewSamples;   \/* temporary array of the Sample Vectors *\/$/;"	m	struct:CvConDensation
flSamples	opencv/include/cvtypes.h	/^    float** flSamples;      \/* arr of the Sample Vectors             *\/$/;"	m	struct:CvConDensation
flags	opencv/include/cvtypes.h	/^    int  flags;$/;"	m	struct:CvHaarClassifierCascade
flags	opencv/include/cxcore.hpp	/^    int flags;$/;"	m	class:cv::Mat
flags	opencv/include/cxcore.hpp	/^    int flags;$/;"	m	class:cv::MatND
flags	opencv/include/cxcore.hpp	/^    int flags;$/;"	m	class:cv::SparseMat
flags	opencv/include/cxtypes.h	/^    int flags;$/;"	m	struct:CvTypeInfo
flags	vascript/ccg/ccg.h	/^            int flags;$/;"	m	union:CCG::Instr::__anon162
flann	opencv/include/cxflann.h	/^namespace flann {$/;"	n	namespace:cv
flann	opencv/include/cxflann.h	/^namespace flann$/;"	n
flann_algorithm_t	opencv/include/cxflann.h	/^enum flann_algorithm_t {$/;"	g	namespace:cv::flann
flann_centers_init_t	opencv/include/cxflann.h	/^enum flann_centers_init_t {$/;"	g	namespace:cv::flann
flann_distance_t	opencv/include/cxflann.h	/^enum flann_distance_t {$/;"	g	namespace:cv::flann
flann_log_level_t	opencv/include/cxflann.h	/^enum flann_log_level_t {$/;"	g	namespace:cv::flann
flatidx	Kernel.h	/^inline int flatidx( int row, int col, int step, int rgb)  {return((row)*(step) + (3*col) + (rgb));}$/;"	f	namespace:dmFrameSimple
flatpixel	Kernel.h	/^inline int flatpixel( int row, int col, int step, int rgb){return((row)*(step) + (col) );}$/;"	f	namespace:dmFrameSimple
flex_int16_t	vascript/release/vaslexer.cpp	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	vascript/release/vaslexer.cpp	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	vascript/release/vaslexer.cpp	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	vascript/release/vaslexer.cpp	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	vascript/release/vaslexer.cpp	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	vascript/release/vaslexer.cpp	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	vascript/release/vaslexer.cpp	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	vascript/release/vaslexer.cpp	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	vascript/release/vaslexer.cpp	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	vascript/release/vaslexer.cpp	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	vascript/release/vaslexer.cpp	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	vascript/release/vaslexer.cpp	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon79
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon80
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon81
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon82
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon83
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon84
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon85
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon86
fmt	opencv/include/cxcore.hpp	/^           fmt = ((channels-1)<<8) + DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon87
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon70
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon71
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon72
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon73
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon74
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon75
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon76
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon77
fmt	opencv/include/cxcore.hpp	/^           fmt=DataDepth<channel_type>::fmt,$/;"	e	enum:cv::DataType::__anon78
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<bool> { public: enum { value = CV_8U, fmt=(int)'u' }; };$/;"	e	enum:cv::DataDepth::__anon60
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<double> { public: enum { value = CV_64F, fmt=(int)'d' }; };$/;"	e	enum:cv::DataDepth::__anon67
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<float> { public: enum { value = CV_32F, fmt=(int)'f' }; };$/;"	e	enum:cv::DataDepth::__anon66
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<int> { public: enum { value = CV_32S, fmt=(int)'i' }; };$/;"	e	enum:cv::DataDepth::__anon65
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<schar> { public: enum { value = CV_8S, fmt=(int)'c' }; };$/;"	e	enum:cv::DataDepth::__anon62
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<short> { public: enum { value = CV_16S, fmt=(int)'s' }; };$/;"	e	enum:cv::DataDepth::__anon64
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<uchar> { public: enum { value = CV_8U, fmt=(int)'u' }; };$/;"	e	enum:cv::DataDepth::__anon61
fmt	opencv/include/cxcore.hpp	/^template<> class DataDepth<ushort> { public: enum { value = CV_16U, fmt=(int)'w' }; };$/;"	e	enum:cv::DataDepth::__anon63
fmt	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS DataDepth { public: enum { value = -1, fmt=(int)'\\0' }; };$/;"	e	enum:cv::DataDepth::__anon59
fmt	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataDepth<_Tp*> { public: enum { value = CV_USRTYPE1, fmt=(int)'r' }; };$/;"	e	enum:cv::DataDepth::__anon68
fn_2d	opencv/include/cxmisc.h	/^    void*   fn_2d[CV_DEPTH_MAX*CV_CN_MAX];$/;"	m	struct:CvBigFuncTable
fn_2d	opencv/include/cxmisc.h	/^    void*   fn_2d[CV_DEPTH_MAX];$/;"	m	struct:CvFuncTable
focal_length	opencv/include/cvaux.h	/^    float focal_length[2];$/;"	m	struct:__anon110
font_face	opencv/include/cxcore.h	/^    int         font_face; \/* =CV_FONT_* *\/$/;"	m	struct:CvFont
foreach_gray	bmp.h	159;"	d
foreach_rgb	bmp.h	146;"	d
foreachpix	bmp.h	125;"	d
foremt64	vascript/ccg/ccg.h	/^        bool foremt64;$/;"	m	class:CCG::Instr
forest	opencv/include/ml.h	/^    CvRTrees* forest;$/;"	m	class:CvForestTree
forx32	vascript/ccg/ccg.h	/^        bool forx32(){return foremt64;}$/;"	f	class:CCG::Instr
forx64	vascript/ccg/ccg.h	/^        bool forx64(){return foremt64;}$/;"	f	class:CCG::Instr
frame	vascript/vascript.y	/^frame:$/;"	l
frameKernel_t	detect.cpp	/^typedef void (*frameKernel_t)();$/;"	t	namespace:dmFrameSimple	file:
frameKernel_t	dmvideo.cpp	/^typedef void (*frameKernel_t)();$/;"	t	file:
framesAccepted	opencv/include/cvaux.h	/^    int     framesAccepted;$/;"	m	class:CvCalibFilter
framesTotal	opencv/include/cvaux.h	/^    int     framesTotal;$/;"	m	class:CvCalibFilter
freeList	opencv/include/cvaux.h	/^    CvBGCodeBookElem* freeList;$/;"	m	struct:CvBGCodeBookModel
freeList	opencv/include/cxcore.hpp	/^        size_t freeList;$/;"	m	struct:cv::SparseMat::Hdr
free_space	opencv/include/cxtypes.h	/^    int free_space;               \/* Remaining free space in current block.   *\/$/;"	m	struct:CvMemStorage
free_space	opencv/include/cxtypes.h	/^    int free_space;$/;"	m	struct:CvMemStoragePos
front	opencv/include/cxoperations.hpp	/^    _Tp& front() { CV_DbgAssert(!empty()); return hdr.data[0]; }$/;"	f	class:cv::Vector
front	opencv/include/cxoperations.hpp	/^    const _Tp& front() const { CV_DbgAssert(!empty()); return hdr.data[0]; }$/;"	f	class:cv::Vector
front	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp& Seq<_Tp>::front()$/;"	f	class:cv::Seq
front	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline const _Tp& Seq<_Tp>::front() const$/;"	f	class:cv::Seq
fs	opencv/include/cxcore.h	/^CVAPI(void) cvEndWriteStruct( CvFileStorage* fs );$/;"	v
fs	opencv/include/cxcore.h	/^CVAPI(void) cvReleaseFileStorage( CvFileStorage** fs );$/;"	v
fs	opencv/include/cxcore.h	/^CVAPI(void) cvStartNextStream( CvFileStorage* fs );$/;"	v
fs	opencv/include/cxcore.hpp	/^    Ptr<CvFileStorage> fs;$/;"	m	class:cv::FileStorage
fs	opencv/include/cxcore.hpp	/^    const CvFileStorage* fs;$/;"	m	class:cv::FileNode
fs	opencv/include/cxcore.hpp	/^    const CvFileStorage* fs;$/;"	m	class:cv::FileNodeIterator
fs	opencv/include/cxoperations.hpp	/^    FileStorage* fs;$/;"	m	class:cv::VecWriterProxy
fs	opencv/include/cxoperations.hpp	/^    FileStorage* fs;$/;"	m	class:cv::WriteStructContext
fsize	bmp.h	/^			unsigned int fsize; $/;"	m	struct:__anon115::__anon116::__anon118
fsize	bmp.h	/^	unsigned int fsize;       \/*Specifies the size, in u8s, of the bitmap file.*\/$/;"	m	struct:__anon112
func	opencv/include/cvaux.hpp	/^    void (*func)(int i, int j, Mat& point_params, Mat& cam_params, Mat& estim, void* data );$/;"	m	class:cv::LevMarqSparse
func	opencv/include/cxcore.hpp	/^    string func;$/;"	m	class:cv::Exception
func_addr	opencv/include/cxtypes.h	/^    void** func_addr;$/;"	m	struct:CvPluginFuncInfo
func_names	opencv/include/cxtypes.h	/^    const char* func_names;$/;"	m	struct:CvPluginFuncInfo
func_tab	opencv/include/cxtypes.h	/^    CvPluginFuncInfo* func_tab;$/;"	m	struct:CvModuleInfo
function	vascript/release/vasparser.cpp	/^Function*  function;$/;"	m	union:__anon124	file:
function	vascript/release/vasparser.h	/^Function*  function;$/;"	m	union:__anon125
functionList	vascript/node.cpp	/^FunctionList* functionList=NULL;$/;"	v
function_declarator	vascript/vascript.y	/^function_declarator: type_specifier TK_IDENTIFIER '(' ')' {  $$ = 0; printf("Get a function declaretor");}$/;"	l
function_definition	vascript/vascript.y	/^function_definition: function_definition0 '}' {  $1->pop(); $$ = $1; printf("finish out a function\\n"); functionList->addFunction($1);}$/;"	l
fundMatr	opencv/include/cvaux.h	/^    float fundMatr[9]; \/* fundamental matrix *\/$/;"	m	struct:CvStereoCamera
fuzzyController	opencv/include/cvaux.hpp	/^		CvFuzzyController fuzzyController;$/;"	m	class:CvFuzzyMeanShiftTracker::FuzzyResizer
fuzzyInput1	opencv/include/cvaux.hpp	/^	CvFuzzyCurve *fuzzyInput1, *fuzzyInput2;$/;"	m	class:CvFuzzyRule
fuzzyInput2	opencv/include/cvaux.hpp	/^	CvFuzzyCurve *fuzzyInput1, *fuzzyInput2;$/;"	m	class:CvFuzzyRule
fuzzyOutput	opencv/include/cvaux.hpp	/^	CvFuzzyCurve *fuzzyOutput;$/;"	m	class:CvFuzzyRule
fuzzyResizer	opencv/include/cvaux.hpp	/^		FuzzyResizer *fuzzyResizer;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
fval	vascript/release/vasparser.cpp	/^float fval;$/;"	m	union:__anon124	file:
fval	vascript/release/vasparser.h	/^float fval;$/;"	m	union:__anon125
gArgc	vascript/vacg.cpp	/^int gArgc = 1;$/;"	v
gArgv	vascript/vacg.cpp	/^char** gArgv= NULL;$/;"	v
gBytesinLine	bmp.cpp	/^size_t gBytesinLine;$/;"	v
gHeight	bmp.cpp	/^size_t gHeight;$/;"	v
gVideoIn	vascript/vacg.cpp	/^char* gVideoIn = NULL;$/;"	v
gVideoOut	vascript/vacg.cpp	/^char* gVideoOut = NULL;$/;"	v
gWidth	bmp.cpp	/^size_t gWidth;$/;"	v
g_point	opencv/include/cvaux.h	/^    CvGaussBGPoint*            g_point;    $/;"	m	struct:CvGaussBGModel
g_values	opencv/include/cvaux.h	/^    CvGaussBGValues* g_values;$/;"	m	struct:CvGaussBGPoint
gain	opencv/include/cv.hpp	/^    Mat gain;               \/\/ Kalman gain matrix (K(k)):$/;"	m	class:cv::KalmanFilter
gain	opencv/include/cvtypes.h	/^    CvMat* gain;                \/* Kalman gain matrix (K(k)):$/;"	m	struct:CvKalman
gamma	opencv/include/cvaux.hpp	/^    float gamma;$/;"	m	class:cv::SpinImageModel
gamma	opencv/include/ml.h	/^    double      gamma;  \/\/ for poly\/rbf\/sigmoid$/;"	m	struct:CvSVMParams
gammaCorrection	opencv/include/cvaux.hpp	/^    bool gammaCorrection;$/;"	m	struct:cv::HOGDescriptor
gcd	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp gcd(_Tp a, _Tp b)$/;"	f	namespace:cv
getArgNum	vascript/gimple.hxx	/^        size_t getArgNum(){ return m_args.size();}$/;"	f	class:GimpleBase
getDefnode	vascript/symbol.cpp	/^GimpleBase* SymbolInfo::getDefnode()$/;"	f	class:SymbolInfo
getDefnode	vascript/symbol.h	/^        GimpleBase*& getDefnode(){return def;}$/;"	f	class:Symbol
getEle	vascript/ccg/parseCoderHtml.cpp	/^int getEle(char*& p, char* dst)$/;"	f
getElemSize	opencv/include/cxcore.hpp	/^static inline size_t getElemSize(int type) { return CV_ELEM_SIZE(type); }$/;"	f	namespace:cv
getFirstTopLevelNode	opencv/include/cxoperations.hpp	/^inline FileNode FileStorage::getFirstTopLevelNode() const$/;"	f	class:cv::FileStorage
getFrame	detect.cpp	/^IplImage* getFrame(int nid)$/;"	f	namespace:dmFrameSimple
getFunction	vascript/graph.hxx	/^    Function* getFunction(char* name) {$/;"	f	class:FunctionList
getGimpleHeader	vascript/graph.hxx	/^    GimpleNode* getGimpleHeader(){return gimpleHeader;}$/;"	f	class:FlowGraph
getGimpleTail	vascript/graph.hxx	/^    GimpleNode* getGimpleTail(){return gimpleTail;}$/;"	f	class:FlowGraph
getGraph	vascript/gimple.hxx	/^        FlowGraph* getGraph(){ return m_Graph;}$/;"	f	class:GimpleGraphNode
getLine	vascript/ccg/parseCoderHtml.cpp	/^int getLine(char*& p, char* dst)$/;"	f
getMesh	opencv/include/cvaux.hpp	/^    Mesh3D& getMesh() { return mesh; }$/;"	f	class:cv::SpinImageModel
getMesh	opencv/include/cvaux.hpp	/^    const Mesh3D& getMesh() const { return mesh; }$/;"	f	class:cv::SpinImageModel
getModrm	vascript/ccg/ccg.h	/^		ModRM getModrm()const {return modrm;}$/;"	f	class:CCG::MemMod
getName	vascript/symbol.h	/^        char* getName(){return name;}$/;"	f	class:Symbol
getNext	vascript/node.h	/^    Node*& getNext(){return next;}$/;"	f	class:Node
getNodes	opencv/include/cvaux.hpp	/^    const vector<Node>& getNodes() const { return nodes; }$/;"	f	class:cv::Octree
getNodetype	vascript/gimple.hxx	/^        virtual NodeType getNodetype(){return nt_GimpleAssignNode;}$/;"	f	class:GimpleAssign
getNodetype	vascript/gimple.hxx	/^        virtual NodeType getNodetype(){return nt_GimpleGraphNode ;}$/;"	f	class:GimpleGraphNode
getNodetype	vascript/gimple.hxx	/^        virtual NodeType getNodetype(){return nt_GimpleNode;}$/;"	f	class:GimpleNode
getNodetype	vascript/gimple.hxx	/^        virtual NodeType getNodetype(){return nt_GimpleStatementNode;}$/;"	f	class:GimpleStatement
getNodetype	vascript/node.h	/^	virtual NodeType getNodetype(){return nt_undefined;}$/;"	f	class:Node
getNodetype	vascript/node.hxx	/^	virtual NodeType getNodetype(){return nt_AstNode;}$/;"	f	class:AstGraphNode
getNodetype	vascript/node.hxx	/^	virtual NodeType getNodetype(){return nt_AstNode;}$/;"	f	class:AstNode
getNodetype	vascript/node.hxx	/^	virtual NodeType getNodetype(){return nt_AstOpExpr;}$/;"	f	class:AstOpExpr
getOpInfo	vascript/ccg/ccg.cpp	/^OpInfo* Instr::getOpInfo(MN x, OPerKind dst)$/;"	f	class:CCG::Instr
getOpInfo	vascript/ccg/ccg.cpp	/^OpInfo* Instr::getOpInfo(MN x, OPerKind dst, OPerKind src1 )$/;"	f	class:CCG::Instr
getOpInfo	vascript/ccg/ccg.cpp	/^OpInfo* Instr::getOpInfo(MN x, OPerKind dst, const MemMod& m){$/;"	f	class:CCG::Instr
getOpInfo	vascript/ccg/ccg.cpp	/^OpInfo* Instr::getOpInfo(MN x, const MemMod& m, OPerKind src){$/;"	f	class:CCG::Instr
getOpInfoImm	vascript/ccg/ccg.cpp	/^OpInfo* Instr::getOpInfoImm(MN x, GPRR dst, I64 src)$/;"	f	class:CCG::Instr
getOprand	vascript/gimple.hxx	/^        SymbolInfo& getOprand(int idx) { return m_args[idx];}$/;"	f	class:GimpleBase
getPrev	vascript/node.h	/^    Node*& getPrev(){return prev;}$/;"	f	class:Node
getRegGroup	vascript/ccg/ccg.h	/^inline rGroup getRegGroup(GPR r){    return (rGroup) ((r & RGROUPMASK) >> 3);}$/;"	f	namespace:CCG
getRegType	vascript/ccg/ccg.h	/^        rGroup getRegType()const{return (rGroup) regType.Reg;} $/;"	f	class:CCG::MemMod
getReplace	vascript/symbol.h	/^        Symbol* getReplace(){return replace;}$/;"	f	class:Symbol
getRex	vascript/ccg/ccg.h	/^		REX   getRex()const { return rex;}$/;"	f	class:CCG::MemMod
getSib	vascript/ccg/ccg.h	/^		SIB   getSib()const { return sib;}$/;"	f	class:CCG::MemMod
getSpinCount	opencv/include/cvaux.hpp	/^    size_t getSpinCount() const { return spinImages.rows; }$/;"	f	class:cv::SpinImageModel
getSpinImage	opencv/include/cvaux.hpp	/^    Mat getSpinImage(size_t index) const { return spinImages.row(index); }$/;"	f	class:cv::SpinImageModel
getSpinNormal	opencv/include/cvaux.hpp	/^    const Point3f& getSpinNormal(size_t index) const { return mesh.normals[subset[index]]; }$/;"	f	class:cv::SpinImageModel
getSpinVertex	opencv/include/cvaux.hpp	/^    const Point3f& getSpinVertex(size_t index) const { return mesh.vtx[subset[index]]; }$/;"	f	class:cv::SpinImageModel
getSymbol	vascript/graph.hxx	/^    Symbol* getSymbol(SymbolInfo s){ return &((*varTable)[s.getSymbolID()]);}$/;"	f	class:FlowGraph
getSymbol	vascript/node.hxx	/^    virtual SymbolInfo& getSymbol(){return *(SymbolInfo*)NULL;}$/;"	f	class:AstExpression
getSymbol	vascript/node.hxx	/^    virtual SymbolInfo& getSymbol(){return oprand0->getSymbol();}$/;"	f	class:AstOpExpr
getSymbol	vascript/node.hxx	/^    virtual SymbolInfo& getSymbol(){return var;}$/;"	f	class:AstVarExpr
getSymbol	vascript/symbol.cpp	/^Symbol* SymbolInfo::getSymbol(){return graph->getSymbol(*this);}$/;"	f	class:SymbolInfo
getSymbolID	vascript/symbol.h	/^        int getSymbolID(){return symbolID;}$/;"	f	class:SymbolInfo
getSymbolInfo	vascript/graph.cpp	/^SymbolInfo* FlowGraph::getSymbolInfo(FlowGraph* graph, char* name){$/;"	f	class:FlowGraph
getSymbolInfo	vascript/graph.cpp	/^SymbolInfo* FlowGraph::getSymbolInfo(char* name){$/;"	f	class:FlowGraph
getSymbolInfo	vascript/symbol.h	/^        SymbolInfo* getSymbolInfo(){return &info;}$/;"	f	class:Symbol
getType	vascript/symbol.h	/^        argtype_t getType(){return info.getType();}$/;"	f	class:Symbol
getType	vascript/symbol.h	/^        argtype_t getType(){return type;}$/;"	f	class:SymbolInfo
getVar	vascript/graph.hxx	/^    VaVar& getVar(int idx){ return (*varTable)[idx].getobj();}$/;"	f	class:FlowGraph
getVar	vascript/node.hxx	/^	virtual VaVar& getVar(){VaVar tmp; return *(VaVar*)NULL; }$/;"	f	class:AstExpression
getVar	vascript/node.hxx	/^	virtual VaVar& getVar(){return  var.getVar(); }$/;"	f	class:AstVarExpr
getVar	vascript/node.hxx	/^	virtual VaVar& getVar(){return  var; }$/;"	f	class:AstConstExpr
getVar	vascript/node.hxx	/^	virtual VaVar& getVar(){return oprand0-> getVar(); }$/;"	f	class:AstOpExpr
getVar	vascript/symbol.cpp	/^VaVar& SymbolInfo::getVar()$/;"	f	class:SymbolInfo
get_back_project	opencv/include/cvaux.hpp	/^    virtual IplImage* get_back_project()$/;"	f	class:CvCamShiftTracker
get_center	opencv/include/cvaux.hpp	/^    CvPoint2D32f get_center() const \/\/ center of the object$/;"	f	class:CvCamShiftTracker
get_delimiter	opencv/include/ml.h	/^    char get_delimiter() { return delimiter; };$/;"	f	class:CvMLData
get_hist_dims	opencv/include/cvaux.hpp	/^    int     get_hist_dims( int* dims = 0 ) const \/\/ returns number of histogram dimensions and sets$/;"	f	class:CvCamShiftTracker
get_key_name	vascript/token.h	/^inline char const* get_key_name(int key)$/;"	f
get_layer_count	opencv/include/ml.h	/^    int get_layer_count() { return layer_sizes ? layer_sizes->cols : 0; }$/;"	f	class:CvANN_MLP
get_layer_sizes	opencv/include/ml.h	/^    const CvMat* get_layer_sizes() { return layer_sizes; }$/;"	f	class:CvANN_MLP
get_length	opencv/include/cvaux.hpp	/^    float   get_length() const \/\/ the larger linear size of the object$/;"	f	class:CvCamShiftTracker
get_log_likelihood	opencv/include/ml.h	/^    inline double         get_log_likelihood     () const { return log_likelihood;     };$/;"	f	class:CvEM
get_max_ch_val	opencv/include/cvaux.hpp	/^    int     get_max_ch_val( int channel ) const \/\/ get the maximum allowed value of the specified channel$/;"	f	class:CvCamShiftTracker
get_min_ch_val	opencv/include/cvaux.hpp	/^    int     get_min_ch_val( int channel ) const \/\/ get the minimum allowed value of the specified channel$/;"	f	class:CvCamShiftTracker
get_miss_ch	opencv/include/ml.h	/^    char get_miss_ch() { return miss_ch; };$/;"	f	class:CvMLData
get_missing	opencv/include/ml.h	/^    const CvMat* get_missing(){ return missing; };$/;"	f	class:CvMLData
get_num_valid	opencv/include/ml.h	/^    int get_num_valid(int vi) { return num_valid ? num_valid[vi] : sample_count; }$/;"	f	struct:CvDTreeNode
get_orientation	opencv/include/cvaux.hpp	/^    float   get_orientation() const \/\/ orientation of the object in degrees$/;"	f	class:CvCamShiftTracker
get_params	opencv/include/ml.h	/^    virtual CvSVMParams get_params() const { return params; };$/;"	f	class:CvSVM
get_response_idx	opencv/include/ml.h	/^    int get_response_idx() { return response_idx; }$/;"	f	class:CvMLData
get_row_func	opencv/include/ml.h	/^    GetRow get_row_func;$/;"	m	class:CvSVMSolver
get_test_sample_idx	opencv/include/ml.h	/^    const CvMat* get_test_sample_idx() { return test_sample_idx; };$/;"	f	class:CvMLData
get_threshold	opencv/include/cvaux.hpp	/^    int     get_threshold() const \/\/ thresholding value that applied to back project$/;"	f	class:CvCamShiftTracker
get_train_sample_idx	opencv/include/ml.h	/^    const CvMat* get_train_sample_idx() { return train_sample_idx; };$/;"	f	class:CvMLData
get_values	opencv/include/ml.h	/^    const CvMat* get_values(){ return values; };$/;"	f	class:CvMLData
get_var_count	opencv/include/ml.h	/^    int get_var_count() const { return var_idx ? var_idx->cols : var_all; }$/;"	f	class:CvSVM
get_var_count	opencv/include/ml.h	/^    virtual int get_var_count() const {return data ? data->var_count : 0;}$/;"	f	class:CvForestTree
get_var_type	opencv/include/ml.h	/^    int get_var_type( int var_idx ) { return var_types->data.ptr[var_idx]; };$/;"	f	class:CvMLData
get_weights	opencv/include/ml.h	/^    double* get_weights(int layer)$/;"	f	class:CvANN_MLP
get_width	opencv/include/cvaux.hpp	/^    float   get_width() const \/\/ the smaller linear size of the object$/;"	f	class:CvCamShiftTracker
get_window	opencv/include/cvaux.hpp	/^    CvRect get_window() const \/\/ bounding rectangle for the object$/;"	f	class:CvCamShiftTracker
get_work_var_count	opencv/include/ml.h	/^    int get_work_var_count() const {return work_var_count;}$/;"	f	struct:CvDTreeTrainData
getf	vascript/vacg.h	/^        u8*& getf(){return f;}$/;"	f	class:vaCG
getf0	vascript/vacg.h	/^        u8* getf0(){return f0;}$/;"	f	class:vaCG
getobj	vascript/symbol.h	/^        VaVar& getobj(){return obj;}$/;"	f	class:Symbol
getoff32	vascript/ccg/ccg.h	/^        int  getoff32()const{return off32;}$/;"	f	class:CCG::MemMod
getoff64	vascript/ccg/ccg.h	/^        I64  getoff64()const{return off64;}$/;"	f	class:CCG::MemMod
getoff8	vascript/ccg/ccg.h	/^        char getoff8()const{return off8;}$/;"	f	class:CCG::MemMod
getop	vascript/op.h	/^	char getop(){return op;}$/;"	f	class:OpCode
getornewSymbolInfo	vascript/graph.cpp	/^SymbolInfo* FlowGraph::getornewSymbolInfo(char* name){$/;"	f	class:FlowGraph
gimpleCodeGento	vascript/graph.hxx	/^    void gimpleCodeGento(u8*& f){ $/;"	f	class:FlowGraph
gimpleHeader	vascript/graph.hxx	/^    GimpleNode* gimpleHeader;$/;"	m	class:FlowGraph
gimpleTail	vascript/graph.hxx	/^    GimpleNode* gimpleTail;$/;"	m	class:FlowGraph
gimplehxx_header_INC	vascript/gimple.hxx	20;"	d
gimplified	vascript/graph.hxx	/^    bool gimplified() { return getGimpleHeader() != NULL;}$/;"	f	class:FlowGraph
gimplify	vascript/graph.hxx	/^    virtual GimpleNode* gimplify(FlowGraph* thisGraph){$/;"	f	class:FlowGraph
gimplify	vascript/node.cpp	/^GimpleNode* AstAssginState::gimplify(FlowGraph* thisGraph){$/;"	f	class:AstAssginState
gimplify	vascript/node.cpp	/^GimpleNode* AstFilterState::gimplify(FlowGraph* thisGraph){$/;"	f	class:AstFilterState
gimplify	vascript/node.cpp	/^GimpleNode* AstOpExpr::gimplify(FlowGraph* thisGraph){$/;"	f	class:AstOpExpr
gimplify	vascript/node.hxx	/^    virtual GimpleNode* gimplify(FlowGraph* thisGraph){ $/;"	f	class:AstGraphNode
gimplify	vascript/node.hxx	/^    virtual GimpleNode* gimplify(FlowGraph* thisGraph){return NULL;}$/;"	f	class:AstNode
globalFK	Kernel.hxx	/^static int globalFK[9] = {$/;"	m	namespace:dmFrameSimple
gnuDir	vascript/compileflexbison.bat	/^@set gnuDir=E:\\daizh\\GnuWin32\\bin\\$/;"	v
graph	opencv/include/cvaux.h	/^    CvGraph* graph;$/;"	m	struct:CvCliqueFinder
graph	opencv/include/cxcore.h	/^    CvGraph* graph;        \/* the graph *\/$/;"	m	struct:CvGraphScanner
graph	opencv/include/cxcore.h	/^CVAPI(void)  cvClearGraph( CvGraph* graph );$/;"	v
graph	vascript/release/vasparser.cpp	/^FlowGraph* graph;$/;"	m	union:__anon124	file:
graph	vascript/release/vasparser.h	/^FlowGraph* graph;$/;"	m	union:__anon125
graph	vascript/symbol.h	/^        FlowGraph* graph;$/;"	m	class:SymbolInfo
graph_header_INC	vascript/graph.hxx	19;"	d
gray2rgbTable	transColor.cpp	/^static RGB24_t gray2rgbTable[256];$/;"	m	namespace:dmFrameSimple	file:
gray2rgbTableTmp	transColor.cpp	/^static gray2rgb_t gray2rgbTableTmp[256][256];$/;"	m	namespace:dmFrameSimple	file:
gray2rgb_t	transColor.cpp	/^}gray2rgb_t;$/;"	t	namespace:dmFrameSimple	typeref:struct:dmFrameSimple::_gray2rgb_t	file:
grayImg	opencv/include/cvaux.h	/^    CvMat*  grayImg;$/;"	m	class:CvCalibFilter
greek	opencv/include/cxcore.h	/^    const int*  greek;$/;"	m	struct:CvFont
gvacg	vascript/vacg.cpp	/^vaCG gvacg;$/;"	v
h	opencv/include/cvvidsurv.hpp	/^    float   w,h; \/* blob sizes      *\/$/;"	m	struct:CvBlob
h1	opencv/include/cv.hpp	/^  int h1, h2;$/;"	m	struct:lsh_hash
h2	opencv/include/cv.hpp	/^  int h1, h2;$/;"	m	struct:lsh_hash
hSize	bmp.h	/^			unsigned int hSize; $/;"	m	struct:__anon115::__anon116::__anon118
hX	opencv/include/cvaux.hpp	/^    CvMat* hX; \/\/current measurement extimation given new parameter vector $/;"	m	class:cv::LevMarqSparse
haar_feature	opencv/include/cvtypes.h	/^    CvHaarFeature* haar_feature;$/;"	m	struct:CvHaarClassifier
hasChild	vascript/treeNode.h	/^    virtual bool hasChild(){ return (mChild !=NULL);}$/;"	f	class:Node
hasDisp	vascript/ccg/ccg.h	/^                unsigned int hasDisp: 3;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasImm	vascript/ccg/ccg.h	/^                unsigned int hasImm: 3;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasInit	vascript/ccg/ccg.cpp	/^int hasInit = initOpIndex();$/;"	m	namespace:CCG	file:
hasModRM	vascript/ccg/ccg.h	/^                unsigned int hasModRM: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasOpc1	vascript/ccg/ccg.h	/^                unsigned int hasOpc1: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasOpc2	vascript/ccg/ccg.h	/^                unsigned int hasOpc2: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasOpc3	vascript/ccg/ccg.h	/^                unsigned int hasOpc3: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasOpc4	vascript/ccg/ccg.h	/^                unsigned int hasOpc4: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasPre0f	vascript/ccg/ccg.h	/^                unsigned int hasPre0f: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasPre1	vascript/ccg/ccg.h	/^                unsigned int hasPre1: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasPre2	vascript/ccg/ccg.h	/^                unsigned int hasPre2: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasPre3	vascript/ccg/ccg.h	/^                unsigned int hasPre3: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasPre4	vascript/ccg/ccg.h	/^                unsigned int hasPre4: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasRex	vascript/ccg/ccg.h	/^                unsigned int hasRex: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hasSib	vascript/ccg/ccg.h	/^                unsigned int hasSib: 1;$/;"	m	struct:CCG::Instr::__anon162::__anon163
hash	opencv/include/cxmat.hpp	/^inline size_t SparseMat::hash(const int* idx) const$/;"	f	class:cv::SparseMat
hash	opencv/include/cxmat.hpp	/^inline size_t SparseMat::hash(int i0) const$/;"	f	class:cv::SparseMat
hash	opencv/include/cxmat.hpp	/^inline size_t SparseMat::hash(int i0, int i1) const$/;"	f	class:cv::SparseMat
hash	opencv/include/cxmat.hpp	/^inline size_t SparseMat::hash(int i0, int i1, int i2) const$/;"	f	class:cv::SparseMat
hashidx	opencv/include/cxcore.hpp	/^    size_t hashidx;$/;"	m	class:cv::SparseMatConstIterator
hashsize	opencv/include/cxtypes.h	/^    int hashsize;$/;"	m	struct:CvSparseMat
hashtab	opencv/include/cxcore.hpp	/^        vector<size_t> hashtab;$/;"	m	struct:cv::SparseMat::Hdr
hashtable	opencv/include/cxtypes.h	/^    void** hashtable;$/;"	m	struct:CvSparseMat
hashval	opencv/include/cxcore.hpp	/^        size_t hashval;$/;"	m	struct:cv::SparseMat::Node
hashval	opencv/include/cxtypes.h	/^    unsigned hashval;$/;"	m	struct:CvSparseNode
hashval	opencv/include/cxtypes.h	/^    unsigned hashval;$/;"	m	struct:CvStringHashNode
haveDisp	vascript/ccg/ccg.h	/^		int haveDisp()const {$/;"	f	class:CCG::MemMod
haveSib	vascript/ccg/ccg.h	/^		int haveSib() const { return ((modrm.RM == 4)&&(modrm.Mod != 3));}$/;"	f	class:CCG::MemMod
have_active_cat_vars	opencv/include/ml.h	/^    bool have_active_cat_vars;$/;"	m	class:CvBoost
have_labels	opencv/include/ml.h	/^    bool have_labels, have_priors;$/;"	m	struct:CvDTreeTrainData
have_priors	opencv/include/ml.h	/^    bool have_labels, have_priors;$/;"	m	struct:CvDTreeTrainData
have_subsample	opencv/include/ml.h	/^    bool have_subsample;$/;"	m	class:CvBoost
hdr	opencv/include/cxcore.h	/^    CvMatND* hdr[CV_MAX_ARR]; \/* pointers to the headers of the$/;"	m	struct:CvNArrayIterator
hdr	opencv/include/cxcore.hpp	/^    Hdr* hdr;$/;"	m	class:cv::SparseMat
hdr	opencv/include/cxoperations.hpp	/^    Hdr hdr;$/;"	m	class:cv::Vector
hdr_refcount	opencv/include/cxtypes.h	/^    int hdr_refcount;$/;"	m	struct:CvMat
hdr_refcount	opencv/include/cxtypes.h	/^    int hdr_refcount;$/;"	m	struct:CvMatND
hdr_refcount	opencv/include/cxtypes.h	/^    int hdr_refcount;$/;"	m	struct:CvSparseMat
header_	opencv/include/cvwimage.h	/^    IplImage header_;$/;"	m	class:cv::WImageView
header_	opencv/include/cvwimage.h	/^    IplImage header_;$/;"	m	class:cv::WImageViewC
header_size	opencv/include/cxtypes.h	/^    int header_size;$/;"	m	struct:CvTypeInfo
heap	opencv/include/cxtypes.h	/^    struct CvSet* heap;$/;"	m	struct:CvSparseMat	typeref:struct:CvSparseMat::CvSet
height	Kernel.h	/^	int height;$/;"	m	struct:dmFrameSimple::__anon165
height	bmp.h	/^			unsigned int height; $/;"	m	struct:__anon115::__anon116::__anon118
height	bmp.h	/^	unsigned int height;     \/**\/$/;"	m	struct:__anon113
height	opencv/include/cvaux.hpp	/^		int width, height, maxWidth, maxHeight, ellipseHeight, ellipseWidth;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
height	opencv/include/cvcompat.h	/^    int     height;                 \/* height of the image  ( in pixels )               *\/$/;"	m	struct:_CvPixelPosition8u
height	opencv/include/cvcompat.h	/^    int     height;$/;"	m	struct:_CvPixelPosition32f
height	opencv/include/cvcompat.h	/^    int     height;$/;"	m	struct:_CvPixelPosition8s
height	opencv/include/cxcore.h	/^    int height() const { return image ? image->height : 0; }$/;"	f	class:CvImage
height	opencv/include/cxcore.hpp	/^    _Tp width, height;$/;"	m	class:cv::Size_
height	opencv/include/cxcore.hpp	/^    _Tp x, y, width, height;$/;"	m	class:cv::Rect_
height	opencv/include/cxtypes.h	/^        int height;$/;"	m	union:CvMat::__anon32
height	opencv/include/cxtypes.h	/^    float height;$/;"	m	struct:CvSize2D32f
height	opencv/include/cxtypes.h	/^    int  height;            \/* Image height in pixels.                          *\/$/;"	m	struct:_IplImage
height	opencv/include/cxtypes.h	/^    int  height;$/;"	m	struct:_IplROI
height	opencv/include/cxtypes.h	/^    int height;$/;"	m	struct:CvRect
height	opencv/include/cxtypes.h	/^    int height;$/;"	m	struct:__anon36
hessian	opencv/include/cv.h	/^    float hessian;$/;"	m	struct:CvSURFPoint
hessianThreshold	opencv/include/cv.h	/^    double hessianThreshold;$/;"	m	struct:CvSURFParams
hid_cascade	opencv/include/cvtypes.h	/^    CvHidHaarClassifierCascade* hid_cascade;$/;"	m	struct:CvHaarClassifierCascade
hist	opencv/include/cv.h	/^CVAPI(void)  cvClearHist( CvHistogram* hist );$/;"	v
hist	opencv/include/cv.h	/^CVAPI(void)  cvReleaseHist( CvHistogram** hist );$/;"	v
histogramHueMotion	opencv/include/cvaux.hpp	/^	Histogram histogramHueMotion, skinHueHistogram;$/;"	m	class:CvAdaptiveSkinDetector
histogramNormType	opencv/include/cvaux.hpp	/^    int histogramNormType;$/;"	m	struct:cv::HOGDescriptor
histogramNormalize	cvKernel.h	/^inline void histogramNormalize(IplImage *out, IplImage *in,mKernel func )$/;"	f	namespace:dmFrameSimple
histogramNormalize	transforKernel.cpp	/^void histogramNormalize( char* dataOut, char* dataIn, int w, int h, int bytesinLine)\/\/(IplImage *out, IplImage *in,mKernel func )$/;"	f	namespace:dmFrameSimple
hmm	opencv/include/cvaux.h	/^CVAPI(void)  cvRelease2DHMM( CvEHMM** hmm );$/;"	v
horizontalEdgeBottom	opencv/include/cvaux.hpp	/^		int verticalEdgeLeft, verticalEdgeRight, horizontalEdgeTop, horizontalEdgeBottom;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
horizontalEdgeTop	opencv/include/cvaux.hpp	/^		int verticalEdgeLeft, verticalEdgeRight, horizontalEdgeTop, horizontalEdgeBottom;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
hscale	opencv/include/cxcore.h	/^    float       hscale, vscale;$/;"	m	struct:CvFont
hsize	bmp.h	/^	unsigned int hsize;       \/*sizeof(bitmapInfoHeader_t), 40.*\/$/;"	m	struct:__anon113
hu1	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
hu2	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
hu3	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
hu4	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
hu5	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
hu6	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
hu7	opencv/include/cvtypes.h	/^    double hu1, hu2, hu3, hu4, hu5, hu6, hu7; \/* Hu invariants *\/$/;"	m	struct:CvHuMoments
i	opencv/include/cxtypes.h	/^        int i;    \/* scalar integer number *\/$/;"	m	union:CvFileNode::__anon37
i	opencv/include/cxtypes.h	/^        int* i;$/;"	m	union:CvMat::__anon31
i	opencv/include/cxtypes.h	/^        int* i;$/;"	m	union:CvMatND::__anon34
i	opencv/include/cxtypes.h	/^    int i;$/;"	m	union:Cv32suf
i	opencv/include/cxtypes.h	/^    int64 i;$/;"	m	union:Cv64suf
i	opencv/include/ml.h	/^    int* i;$/;"	m	struct:CvPair16u32s
i32	vascript/vacg.h	/^typedef int i32;$/;"	t
i64	vascript/vacg.h	/^typedef long long i64;$/;"	t
iInput	opencv/include/cvaux.hpp	/^		CvFuzzyFunction iInput, iOutput;$/;"	m	class:CvFuzzyMeanShiftTracker::FuzzyResizer
iOutput	opencv/include/cvaux.hpp	/^		CvFuzzyFunction iInput, iOutput;$/;"	m	class:CvFuzzyMeanShiftTracker::FuzzyResizer
icvSqDist2D32f	opencv/include/cvaux.h	/^CV_INLINE double icvSqDist2D32f( CvPoint2D32f pt1, CvPoint2D32f pt2 )$/;"	f
id	opencv/include/cvaux.h	/^    int id;$/;"	m	struct:__anon107
id	opencv/include/cvaux.h	/^    int id;$/;"	m	struct:__anon108
idx	opencv/include/cxcore.hpp	/^        int idx;            \/\/ split dimension; >=0 for nodes (dim),$/;"	m	struct:cv::KDTree::Node
idx	opencv/include/cxcore.hpp	/^        int idx[CV_MAX_DIM];$/;"	m	struct:cv::SparseMat::Node
idx	opencv/include/cxcore.hpp	/^    int iterdepth, idx;$/;"	m	class:cv::NAryMatNDIterator
idxoffset	opencv/include/cxtypes.h	/^    int idxoffset;$/;"	m	struct:CvSparseMat
iext	vascript/ccg/opcodeDes.h	/^        Uchar iext;   	\/\/ instruction extention$/;"	m	class:CCG::OpInfo
if_statement	vascript/vascript.y	/^if_statement:$/;"	l
ifnode	vascript/node.hxx	/^        AstStatement* ifnode;$/;"	m	class:AstIfNode
im	opencv/include/cxcore.hpp	/^    _Tp re, im;$/;"	m	class:cv::Complex
image	opencv/include/cxcore.h	/^    IplImage* image;$/;"	m	class:CvImage
image	opencv/include/cxcore.h	/^CVAPI(CvRect) cvGetImageROI( const IplImage* image );$/;"	v
image	opencv/include/cxcore.h	/^CVAPI(IplImage*) cvCloneImage( const IplImage* image );$/;"	v
image	opencv/include/cxcore.h	/^CVAPI(int)  cvGetImageCOI( const IplImage* image );$/;"	v
image	opencv/include/cxcore.h	/^CVAPI(void)  cvReleaseImage( IplImage** image );$/;"	v
image	opencv/include/cxcore.h	/^CVAPI(void)  cvReleaseImageHeader( IplImage** image );$/;"	v
image	opencv/include/cxcore.h	/^CVAPI(void)  cvResetImageROI( IplImage* image );$/;"	v
imageData	opencv/include/cxtypes.h	/^    char *imageData;        \/* Pointer to aligned image data.         *\/$/;"	m	struct:_IplImage
imageDataOrigin	opencv/include/cxtypes.h	/^    char *imageDataOrigin;  \/* Pointer to very origin of image data$/;"	m	struct:_IplImage
imageId	opencv/include/cxtypes.h	/^    void  *imageId;                 \/* "           " *\/$/;"	m	struct:_IplImage
imageSize	opencv/include/cxtypes.h	/^    int  imageSize;         \/* Image data size in bytes$/;"	m	struct:_IplImage
imageWidth	opencv/include/cvaux.hpp	/^    int imageWidth;$/;"	m	class:cv::SpinImageModel
image_	opencv/include/cvwimage.h	/^    IplImage* image_;$/;"	m	class:cv::WImage
imax	opencv/include/cvaux.h	/^    int imax, imin;$/;"	m	struct:CvContourOrientation
img	opencv/include/cvaux.h	/^CVAPI(void)  cvDeleteMoire( IplImage*  img );$/;"	v
imgDFT	cvKernel.h	/^inline void imgDFT(IplImage *out, IplImage *in,mKernel func )$/;"	f	namespace:dmFrameSimple
imgDFTChannel	cvKernel.h	/^inline void imgDFTChannel(CvMat *s, CvMat *d,float *sdata,float *ddata,char *dataIn,char * dataOut,int w,int h,int step,int rgb)$/;"	f	namespace:dmFrameSimple
imgFilteredFrame	opencv/include/cvaux.hpp	/^	IplImage *imgHueFrame, *imgSaturationFrame, *imgLastGrayFrame, *imgMotionFrame, *imgFilteredFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgGrayFrame	opencv/include/cvaux.hpp	/^	IplImage *imgShrinked, *imgTemp, *imgGrayFrame, *imgHSVFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgHSVFrame	opencv/include/cvaux.hpp	/^	IplImage *imgShrinked, *imgTemp, *imgGrayFrame, *imgHSVFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgHueFrame	opencv/include/cvaux.hpp	/^	IplImage *imgHueFrame, *imgSaturationFrame, *imgLastGrayFrame, *imgMotionFrame, *imgFilteredFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgLastGrayFrame	opencv/include/cvaux.hpp	/^	IplImage *imgHueFrame, *imgSaturationFrame, *imgLastGrayFrame, *imgMotionFrame, *imgFilteredFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgMotionFrame	opencv/include/cvaux.hpp	/^	IplImage *imgHueFrame, *imgSaturationFrame, *imgLastGrayFrame, *imgMotionFrame, *imgFilteredFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgSaturationFrame	opencv/include/cvaux.hpp	/^	IplImage *imgHueFrame, *imgSaturationFrame, *imgLastGrayFrame, *imgMotionFrame, *imgFilteredFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgShrinked	opencv/include/cvaux.hpp	/^	IplImage *imgShrinked, *imgTemp, *imgGrayFrame, *imgHSVFrame;$/;"	m	class:CvAdaptiveSkinDetector
imgSize	opencv/include/cvaux.h	/^    CvSize  imgSize;$/;"	m	class:CvCalibFilter
imgSize	opencv/include/cvaux.h	/^    float   imgSize[2]; \/* size of the camera view, used during calibration *\/$/;"	m	struct:CvCamera
imgTemp	opencv/include/cvaux.hpp	/^	IplImage *imgShrinked, *imgTemp, *imgGrayFrame, *imgHSVFrame;$/;"	m	class:CvAdaptiveSkinDetector
imin	opencv/include/cvaux.h	/^    int imax, imin;$/;"	m	struct:CvContourOrientation
imm	vascript/ccg/ccg.h	/^        Imm imm;$/;"	m	class:CCG::Instr
impl	opencv/include/cvvidsurv.hpp	/^    class CvObjectDetectorImpl* impl;$/;"	m	class:CvObjectDetector	typeref:class:CvObjectDetector::CvObjectDetectorImpl
in	bmp.h	135;"	d
inFrame	vascript/node.hxx	/^	SymbolInfo  inFrame;$/;"	m	class:AstFilterState
index	opencv/include/cxcore.h	/^    int      index;        \/* the lower bound of certainly visited vertices *\/$/;"	m	struct:CvGraphScanner
index	opencv/include/cxcore.hpp	/^    int index;$/;"	m	class:cv::SeqIterator
index	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline size_t Seq<_Tp>::index(const _Tp& elem) const$/;"	f	class:cv::Seq
index1	opencv/include/cvaux.h	/^    int index1;$/;"	m	struct:CvLCMEdge
index2	opencv/include/cvaux.h	/^    int index2;$/;"	m	struct:CvLCMEdge
info	opencv/include/cxcore.h	/^    CvModuleInfo* info;$/;"	m	struct:CvModule
info	opencv/include/cxcore.h	/^    CvTypeInfo* info;$/;"	m	struct:CvType
info	opencv/include/cxcore.h	/^CVAPI(void) cvRegisterType( const CvTypeInfo* info );$/;"	v
info	opencv/include/cxtypes.h	/^    struct CvTypeInfo* info; \/* type information$/;"	m	struct:CvFileNode	typeref:struct:CvFileNode::CvTypeInfo
info	vascript/symbol.h	/^        SymbolInfo info;$/;"	m	class:Symbol
info_header	bmp.h	/^			bitmapInfoHeader_t info_header;$/;"	m	struct:__anon115::__anon116::__anon117
init	vascript/ccg/ccg.h	/^		void init(){c = 0; reserve = 4;}$/;"	f	class:CCG::REX
init	vascript/ccg/ccg.h	/^        void init(){ $/;"	f	class:CCG::Instr
init	vascript/graph.hxx	/^	void init(){gimpleHeader=gimpleTail = NULL; parent=0; child=0;nextSib=0; lastChild=0;lastSymbolID = -1;varTable = new VarTable(100);}$/;"	f	class:FlowGraph
init	vascript/treeNode.h	/^    void init(){mParent = mNext = mPrevious = mChild =  NULL;}$/;"	f	class:Node
init	vascript/vacg.h	/^        void init(int size=1024){ if(f0)release_function((void*&)f0, this->size); setf(vacgmalloc(size)); this->size= size;}$/;"	f	class:vaCG
initOpIndex	vascript/ccg/ccg.cpp	/^int initOpIndex()$/;"	f	namespace:CCG
initOpIndex	vascript/ccg/ccg.cpp	/^int initOpIndex(OpInfo opDesTable[], int opIndex[])$/;"	f	namespace:CCG
initParser	vascript/node.cpp	/^void initParser()$/;"	f
insert	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::insert(int idx, const _Tp& elem)$/;"	f	class:cv::Seq
insert	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::insert(int idx, const _Tp* elems, size_t count)$/;"	f	class:cv::Seq
inside	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline bool Point_<_Tp>::inside( const Rect_<_Tp>& r ) const$/;"	f	class:cv::Point_
instructionNum	vascript/ccg/opcodeDes.h	/^        instructionNum$/;"	e	enum:CCG::__anon129
int64	opencv/include/cxtypes.h	/^typedef __int64 int64;$/;"	t
int64	opencv/include/cxtypes.h	/^typedef int64_t int64;$/;"	t
int_size	vascript/vacg.cpp	/^const int int_size = 4;\/\/ the least size of arg.$/;"	v
interactionRadius	opencv/include/cv.h	/^    int interactionRadius;$/;"	m	struct:CvStereoGCState
inv	opencv/include/cxmat.hpp	/^    MatExpr_<MatExpr_Op2_<M, int, M, MatOp_Inv_<Mat> >, M> inv(int method=DECOMP_LU) const$/;"	f	class:cv::MatExpr_
inv	opencv/include/cxmat.hpp	/^Mat::inv(int method) const$/;"	f	class:cv::Mat
inv	opencv/include/cxmat.hpp	/^Mat_<_Tp>::inv(int method) const$/;"	f	class:cv::Mat_
inv_V_star	opencv/include/cvaux.hpp	/^    CvMat** inv_V_star; \/\/inverse of V*$/;"	m	class:cv::LevMarqSparse
inv_eigen_values	opencv/include/ml.h	/^    CvMat* inv_eigen_values;$/;"	m	class:CvEM
inv_eigen_values	opencv/include/ml.h	/^    CvMat** inv_eigen_values;$/;"	m	class:CvNormalBayesClassifier
inv_sqrt_m00	opencv/include/cvtypes.h	/^    double  inv_sqrt_m00; \/* m00 != 0 ? 1\/sqrt(m00) : 0 *\/$/;"	m	struct:CvMoments
inv_var	opencv/include/cvaux.h	/^    float* inv_var;     \/* square root of inversed variances corresp. to each mixture*\/$/;"	m	struct:CvEHMMState
inversed	opencv/include/ml.h	/^    int inversed;$/;"	m	struct:CvDTreeSplit
iplHeight	opencv/include/highgui.h	/^CV_INLINE int iplHeight( const IplImage* img )$/;"	f
iplWidth	opencv/include/highgui.h	/^CV_INLINE int iplWidth( const IplImage* img )$/;"	f
is	vascript/graph.hxx	/^    bool is(char* fn) {return strcmp(fn, m_fn) == 0;}$/;"	f	class:Function
is16	vascript/ccg/ccg.h	/^        int is16(){return (uq & ~0xffff) == 0;}$/;"	f	class:CCG::Imm
is32	vascript/ccg/ccg.h	/^        int is32(){return (uq & ~0xffffffff) == 0;}$/;"	f	class:CCG::Imm
is64	vascript/ccg/ccg.h	/^        int is64(){return (uq & ~0xffffffff) != 0;}$/;"	f	class:CCG::Imm
is8	vascript/ccg/ccg.h	/^        int is8(){ return (uq & ~255) == 0;}$/;"	f	class:CCG::Imm
isAstNode	vascript/node.h	/^inline bool isAstNode(NodeType t){ return ((t>0) && (t< 128));}$/;"	f
isCalibrated	opencv/include/cvaux.h	/^    bool    isCalibrated;$/;"	m	class:CvCalibFilter
isCodeOneByte	vascript/ccg/opcodeDes.h	/^        int isCodeOneByte()const{ return opreg == regop_s;}$/;"	f	class:CCG::OpInfo
isContinuous	opencv/include/cxmat.hpp	/^inline bool Mat::isContinuous() const { return (flags & CONTINUOUS_FLAG) != 0; }$/;"	f	class:cv::Mat
isContinuous	opencv/include/cxmat.hpp	/^inline bool MatND::isContinuous() const { return (flags & CONTINUOUS_FLAG) != 0; }$/;"	f	class:cv::MatND
isDefFlagEmpty	vascript/ccg/opcodeDes.h	/^        int isDefFlagEmpty()   const{}$/;"	f	class:CCG::OpInfo
isDescriptionEmpty	vascript/ccg/opcodeDes.h	/^        int isDescriptionEmpty()const{}$/;"	f	class:CCG::OpInfo
isEq	vascript/ccg/ccg.h	/^        bool isEq(Uchar* ref){$/;"	f	class:CCG::InstructionCoder
isExt	vascript/ccg/ccg.h	/^inline int isExt(GPR reg){$/;"	f	namespace:CCG
isFlagValuesEmpty	vascript/ccg/opcodeDes.h	/^        int isFlagValuesEmpty()const{}$/;"	f	class:CCG::OpInfo
isGimpleNode	vascript/node.h	/^inline bool isGimpleNode(NodeType t){ return ((t> 128));}$/;"	f
isGimpleStatement	vascript/gimple.hxx	/^inline bool isGimpleStatement(Node* gn) { return (gn->getNodetype()==nt_GimpleAssignNode || gn->getNodetype()== nt_GimpleStatementNode);}$/;"	f
isIextEmpty	vascript/ccg/opcodeDes.h	/^        int isIextEmpty()const{}   	\/\/ instruction extention$/;"	f	class:CCG::OpInfo
isInt	opencv/include/cxoperations.hpp	/^inline bool FileNode::isInt() const { return type() == INT; }$/;"	f	class:cv::FileNode
isLeaf	opencv/include/cvaux.hpp	/^        bool isLeaf;$/;"	m	struct:cv::Octree::Node
isMap	opencv/include/cxoperations.hpp	/^inline bool FileNode::isMap() const { return type() == MAP; }$/;"	f	class:cv::FileNode
isMnEmpty	vascript/ccg/opcodeDes.h	/^        int isMnEmpty()   const{}$/;"	f	class:CCG::OpInfo
isModeEmpty	vascript/ccg/opcodeDes.h	/^        int isModeEmpty() const{} 	\/\/ mode of operation$/;"	f	class:CCG::OpInfo
isModifFlagEmpty	vascript/ccg/opcodeDes.h	/^        int isModifFlagEmpty() const{}$/;"	f	class:CCG::OpInfo
isNamed	opencv/include/cxoperations.hpp	/^inline bool FileNode::isNamed() const { return !node ? false : (node->tag & NAMED) != 0; }$/;"	f	class:cv::FileNode
isNone	opencv/include/cxoperations.hpp	/^inline bool FileNode::isNone() const { return type() == NONE; }$/;"	f	class:cv::FileNode
isOpc1Empty	vascript/ccg/opcodeDes.h	/^        int isOpc1Empty() const{} 	\/\/ first OPCODE$/;"	f	class:CCG::OpInfo
isOpc2Empty	vascript/ccg/opcodeDes.h	/^        int isOpc2Empty() const{} 	\/\/ second OPCODE$/;"	f	class:CCG::OpInfo
isOpcReg2RM	vascript/ccg/ccg.h	/^        int isOpcReg2RM(){ return (opc1 & 2);}$/;"	f	class:CCG::Instr
isOper1Empty	vascript/ccg/opcodeDes.h	/^        int isOper1Empty()const{} 	\/\/OPerKind$/;"	f	class:CCG::OpInfo
isOper1RM	vascript/ccg/opcodeDes.h	/^		int isOper1RM()const{ return (oper1 >= 224);}$/;"	f	class:CCG::OpInfo
isOper2Empty	vascript/ccg/opcodeDes.h	/^        int isOper2Empty()const{return (oper2 == oper_Empty); } 	\/\/OPerKind$/;"	f	class:CCG::OpInfo
isOper2RM	vascript/ccg/opcodeDes.h	/^		int isOper2RM()const{ return (oper2 >= 224);}$/;"	f	class:CCG::OpInfo
isOper3Empty	vascript/ccg/opcodeDes.h	/^        int isOper3Empty()const{} 	\/\/OPerKind$/;"	f	class:CCG::OpInfo
isOper4Empty	vascript/ccg/opcodeDes.h	/^        int isOper4Empty()const{} 	\/\/OPerKind$/;"	f	class:CCG::OpInfo
isOpregEmpty	vascript/ccg/opcodeDes.h	/^        int isOpregEmpty()const{ return (opreg == regop_ );} 	\/\/ third 3-bit OPCODE or register$/;"	f	class:CCG::OpInfo
isOpregReg	vascript/ccg/opcodeDes.h	/^        int isOpregReg()const{ return (opreg == regop_r );} 	\/\/ third 3-bit OPCODE or register$/;"	f	class:CCG::OpInfo
isPrefix2Empty	vascript/ccg/opcodeDes.h	/^        int isPrefix2Empty()const{return (prefix0F == 0xFF);}$/;"	f	class:CCG::OpInfo
isPrefixEmpty	vascript/ccg/opcodeDes.h	/^        int isPrefixEmpty()  const{ return (prefix==0xFF);}$/;"	f	class:CCG::OpInfo
isPrefixLockEmpty	vascript/ccg/opcodeDes.h	/^        int isPrefixLockEmpty()const{}$/;"	f	class:CCG::OpInfo
isProcEmpty	vascript/ccg/opcodeDes.h	/^        int isProcEmpty() const{} 	\/\/ introduce with processor$/;"	f	class:CCG::OpInfo
isReal	opencv/include/cxoperations.hpp	/^inline bool FileNode::isReal() const { return type() == REAL; }$/;"	f	class:cv::FileNode
isRegE	vascript/ccg/ccg.h	/^inline int isRegE(GPR reg) { return  ( reg & RGROUPMASK) == (regE << 3);}$/;"	f	namespace:CCG
isRegL	vascript/ccg/ccg.h	/^inline int isRegL(GPR reg) { return  ( reg & RGROUPMASK) == (regL << 3);}$/;"	f	namespace:CCG
isRegR	vascript/ccg/ccg.h	/^inline int isRegR(GPR reg) { return  ( reg & RGROUPMASK) == (regR << 3);}$/;"	f	namespace:CCG
isRegRext	vascript/ccg/ccg.h	/^inline int isRegRext(GPR reg) { return  ( reg & RGROUPMASK) == (regRext << 3);}$/;"	f	namespace:CCG
isRegW	vascript/ccg/ccg.h	/^inline int isRegW(GPR reg) { return  ( reg & RGROUPMASK) == (regW << 3);}$/;"	f	namespace:CCG
isRegX	vascript/ccg/ccg.h	/^inline int isRegX(GPR reg) { return  ( reg & RGROUPMASK) == (regX << 3);}$/;"	f	namespace:CCG
isRegXext	vascript/ccg/ccg.h	/^inline int isRegXext(GPR reg){  return ( reg & RGROUPMASK) == (regXext << 3);}$/;"	f	namespace:CCG
isRingLevelEmpty	vascript/ccg/opcodeDes.h	/^        int isRingLevelEmpty() const{}$/;"	f	class:CCG::OpInfo
isSeparable	opencv/include/cv.hpp	/^    bool isSeparable() const { return (const BaseFilter*)filter2D == 0; }$/;"	f	class:cv::FilterEngine
isSeq	opencv/include/cxoperations.hpp	/^inline bool FileNode::isSeq() const { return type() == SEQ; }$/;"	f	class:cv::FileNode
isStEmpty	vascript/ccg/opcodeDes.h	/^        int isStEmpty()   const{}   	\/\/ status of document$/;"	f	class:CCG::OpInfo
isString	opencv/include/cxoperations.hpp	/^inline bool FileNode::isString() const { return type() == STR; }$/;"	f	class:cv::FileNode
isTestedFlagEmpty	vascript/ccg/opcodeDes.h	/^        int isTestedFlagEmpty()const{}$/;"	f	class:CCG::OpInfo
isUndefFlagEmpty	vascript/ccg/opcodeDes.h	/^        int isUndefFlagEmpty() const{}$/;"	f	class:CCG::OpInfo
is_buf_16u	opencv/include/ml.h	/^    int is_buf_16u;$/;"	m	struct:CvDTreeTrainData
is_classifier	opencv/include/ml.h	/^    bool is_classifier;$/;"	m	struct:CvDTreeTrainData
is_instance	opencv/include/cxtypes.h	/^    CvIsInstanceFunc is_instance;$/;"	m	struct:CvTypeInfo
is_obj_without_holes	opencv/include/cvaux.h	/^    int    is_obj_without_holes;\/* If TRUE we ignore holes within foreground blobs. Defaults to TRUE.						*\/$/;"	m	struct:CvFGDStatModelParams
is_stump_based	opencv/include/cv.hpp	/^    bool is_stump_based;$/;"	m	class:cv::CascadeClassifier
is_trained_dyn_model	opencv/include/cvaux.h	/^    uchar                 is_trained_dyn_model;$/;"	m	struct:CvBGPixelStat
is_trained_st_model	opencv/include/cvaux.h	/^    uchar                 is_trained_st_model;$/;"	m	struct:CvBGPixelStat
is_valid	opencv/include/cxcore.h	/^    bool is_valid() { return image != 0; }$/;"	f	class:CvImage
is_valid	opencv/include/cxcore.h	/^    bool is_valid() { return matrix != 0; }$/;"	f	class:CvMatrix
ismoff16	vascript/ccg/ccg.h	/^        bool ismoff16()const{ return ( modrm.Mod==0 && modrm.RM==5 && (unsigned int)(off32 < 65536));}$/;"	f	class:CCG::MemMod
ismoff32	vascript/ccg/ccg.h	/^        bool ismoff32()const{ return ( modrm.Mod==0 && modrm.RM==5 );}$/;"	f	class:CCG::MemMod
ismoff8	vascript/ccg/ccg.h	/^        bool ismoff8()const{ return ( modrm.Mod==0 && modrm.RM==5 && ((unsigned int)off32 < 256));}$/;"	f	class:CCG::MemMod
it	opencv/include/cxoperations.hpp	/^    FileNodeIterator* it;$/;"	m	class:cv::VecReaderProxy
iterations	opencv/include/cxflann.h	/^	int iterations;            \/\/ max iterations to perform in one kmeans clustering (kmeans tree)$/;"	m	struct:cv::flann::CompositeIndexParams
iterations	opencv/include/cxflann.h	/^	int iterations;            \/\/ max iterations to perform in one kmeans clustering (kmeans tree)$/;"	m	struct:cv::flann::KMeansIndexParams
iterator	opencv/include/cxcore.hpp	/^    typedef MatIterator_<_Tp> iterator;$/;"	t	class:cv::Mat_
iterator	opencv/include/cxcore.hpp	/^    typedef SeqIterator<_Tp> iterator;$/;"	t	class:cv::Seq
iterator	opencv/include/cxcore.hpp	/^    typedef SparseMatIterator iterator;$/;"	t	class:cv::SparseMat
iterator	opencv/include/cxcore.hpp	/^    typedef SparseMatIterator_<_Tp> iterator;$/;"	t	class:cv::SparseMat_
iterator	opencv/include/cxoperations.hpp	/^    typedef _Tp* iterator;$/;"	t	class:cv::Vector
iterator_category	opencv/include/cxcore.hpp	/^    typedef std::forward_iterator_tag iterator_category;$/;"	t	class:cv::SparseMatConstIterator_
iterator_category	opencv/include/cxcore.hpp	/^    typedef std::forward_iterator_tag iterator_category;$/;"	t	class:cv::SparseMatIterator_
iterator_category	opencv/include/cxcore.hpp	/^    typedef std::random_access_iterator_tag iterator_category;$/;"	t	class:cv::MatIterator_
iterdepth	opencv/include/cxcore.hpp	/^    int iterdepth, idx;$/;"	m	class:cv::NAryMatNDIterator
iters	opencv/include/cv.hpp	/^    int iters;$/;"	m	class:CvLevMarq
iters	opencv/include/cvaux.hpp	/^    int iters;$/;"	m	class:cv::LevMarqSparse
ival	vascript/release/vasparser.cpp	/^int ival;$/;"	m	union:__anon124	file:
ival	vascript/release/vasparser.h	/^int ival;$/;"	m	union:__anon125
ivar	vascript/vacg.h	/^        int ivar;$/;"	m	union:VaVar::__anon122
k	opencv/include/cvaux.h	/^    int k; \/\/stack size$/;"	m	struct:CvCliqueFinder
k	opencv/include/cvcompat.h	/^                                const float* A, const float* k,$/;"	v
kChannels	opencv/include/cvwimage.h	/^    enum { kChannels = C };$/;"	e	enum:cv::WImageBufferC::__anon40
kChannels	opencv/include/cvwimage.h	/^    enum { kChannels = C };$/;"	e	enum:cv::WImageC::__anon39
kChannels	opencv/include/cvwimage.h	/^    enum { kChannels = C };$/;"	e	enum:cv::WImageViewC::__anon41
kalman	opencv/include/cv.h	/^CVAPI(void)  cvReleaseKalman( CvKalman** kalman);$/;"	v
kernel	opencv/include/cvaux.hpp	/^	SearchWindow kernel;$/;"	m	class:CvFuzzyMeanShiftTracker
kernel	opencv/include/ml.h	/^    CvSVMKernel* kernel;$/;"	m	class:CvSVM
kernel	opencv/include/ml.h	/^    CvSVMKernel* kernel;$/;"	m	class:CvSVMSolver
kernel_type	opencv/include/ml.h	/^    int         kernel_type;$/;"	m	struct:CvSVMParams
keywd_name	vascript/token.h	/^static char* keywd_name[]={$/;"	v
ksize	opencv/include/cv.hpp	/^    Size ksize;$/;"	m	class:cv::BaseFilter
ksize	opencv/include/cv.hpp	/^    Size ksize;$/;"	m	class:cv::FilterEngine
ksize	opencv/include/cv.hpp	/^    int ksize, anchor;$/;"	m	class:cv::BaseColumnFilter
ksize	opencv/include/cv.hpp	/^    int ksize, anchor;$/;"	m	class:cv::BaseRowFilter
l	vascript/ccg/ccg.h	/^	long long l;$/;"	m	union:CCG::__anon160
l	vascript/ccg/ccg.h	/^            I64 l;$/;"	m	union:CCG::Imm::__anon161
lambda	opencv/include/cv.h	/^    float K, lambda, lambda1, lambda2;$/;"	m	struct:CvStereoGCState
lambda	opencv/include/cvaux.hpp	/^    double lambda;$/;"	m	class:cv::LevMarqSparse
lambda	opencv/include/cvaux.hpp	/^    float lambda;                        $/;"	m	class:cv::SpinImageModel
lambda1	opencv/include/cv.h	/^    float K, lambda, lambda1, lambda2;$/;"	m	struct:CvStereoGCState
lambda2	opencv/include/cv.h	/^    float K, lambda, lambda1, lambda2;$/;"	m	struct:CvStereoGCState
lambdaLg10	opencv/include/cv.hpp	/^    int lambdaLg10;$/;"	m	class:CvLevMarq
lambdaMax	opencv/include/cvaux.hpp	/^    double lambdaMin, lambdaMax;$/;"	m	class:cv::PatchGenerator
lambdaMin	opencv/include/cvaux.hpp	/^    double lambdaMin, lambdaMax;$/;"	m	class:cv::PatchGenerator
laplacian	opencv/include/cv.h	/^    int laplacian;$/;"	m	struct:CvSURFPoint
largeSize	opencv/include/cvaux.hpp	/^	int largeSize;$/;"	m	class:cv::SelfSimDescriptor
last	opencv/include/cxcore.h	/^    static CvModuleInfo* last;$/;"	m	struct:CvModule
last	opencv/include/cxcore.h	/^    static CvTypeInfo* last;$/;"	m	struct:CvType
lastChild	vascript/graph.hxx	/^	FlowGraph *lastChild;$/;"	m	class:FlowGraph
lastSymbolID	vascript/graph.hxx	/^	int lastSymbolID ;$/;"	m	class:FlowGraph
last_column	vascript/release/vasparser.cpp	/^      int last_column;$/;"	m	struct:yyltype	file:
last_column	vascript/release/vasparser.h	/^      int last_column;$/;"	m	struct:yyltype
last_column	vascript/yy.lex.parser.h	/^      int last_column;$/;"	m	struct:YYLTYPE
last_line	vascript/release/vasparser.cpp	/^      int last_line;$/;"	m	struct:yyltype	file:
last_line	vascript/release/vasparser.h	/^      int last_line;$/;"	m	struct:yyltype
last_line	vascript/yy.lex.parser.h	/^      int last_line;$/;"	m	struct:YYLTYPE
latestCounts	opencv/include/cvaux.h	/^    int     latestCounts[MAX_CAMERAS];$/;"	m	class:CvCalibFilter
latestPoints	opencv/include/cvaux.h	/^    CvPoint2D32f* latestPoints[MAX_CAMERAS];$/;"	m	class:CvCalibFilter
layer_sizes	opencv/include/ml.h	/^    CvMat* layer_sizes;$/;"	m	class:CvANN_MLP
ldetector	opencv/include/cvaux.hpp	/^    LDetector ldetector;$/;"	m	class:cv::PlanarObjectDetector
ldh	opencv/include/cvaux.hpp	/^		int ldx, ldy, ldw, ldh, numShifts, numIters;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
ldw	opencv/include/cvaux.hpp	/^		int ldx, ldy, ldw, ldh, numShifts, numIters;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
ldx	opencv/include/cvaux.hpp	/^		int ldx, ldy, ldw, ldh, numShifts, numIters;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
ldy	opencv/include/cvaux.hpp	/^		int ldx, ldy, ldw, ldh, numShifts, numIters;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
learnMax	opencv/include/cvaux.h	/^    uchar learnMax[3];$/;"	m	struct:CvBGCodeBookElem
learnMin	opencv/include/cvaux.h	/^    uchar learnMin[3];$/;"	m	struct:CvBGCodeBookElem
leaves	opencv/include/cv.hpp	/^    vector<float> leaves;$/;"	m	class:cv::CascadeClassifier
leavesPerStruct	opencv/include/cvaux.hpp	/^    int leavesPerStruct;$/;"	m	class:cv::FernClassifier
left	opencv/include/cv.h	/^    CvMat* left;$/;"	m	struct:CvStereoGCState
left	opencv/include/cv.hpp	/^        int left;$/;"	m	struct:cv::CascadeClassifier::DTreeNode
left	opencv/include/cvtypes.h	/^    int* left;$/;"	m	struct:CvHaarClassifier
left	opencv/include/cxcore.hpp	/^        int left, right;    \/\/ node indices of left and right branches$/;"	m	struct:cv::KDTree::Node
left	opencv/include/ml.h	/^    CvDTreeNode* left;$/;"	m	struct:CvDTreeNode
len	opencv/include/cxtypes.h	/^    int len;$/;"	m	struct:CvString
len	vascript/ccg/ccg.h	/^        int len;$/;"	m	class:CCG::InstructionCoder
len	vascript/ccg/testccg.cpp	/^        int len;$/;"	m	class:OpCodeRef	file:
len1	opencv/include/cvvidsurv.hpp	/^    int len1,len2;$/;"	m	struct:CvTracksTimePos
len2	opencv/include/cvvidsurv.hpp	/^    int len1,len2;$/;"	m	struct:CvTracksTimePos
level	opencv/include/cvaux.h	/^    int level; \/* 0 - lowest(i.e its states are real states), ..... *\/$/;"	m	struct:CvEHMM
level	opencv/include/cxcore.h	/^    int level;$/;"	m	struct:CvTreeNodeIterator
lhVaVar	vascript/node.hxx	/^	SymbolInfo lhVaVar;$/;"	m	class:AstAssginState
lhv	vascript/node.hxx	/^	AstExpression* lhv;$/;"	m	class:AstAssginState
line	opencv/include/cxcore.hpp	/^    int line;$/;"	m	class:cv::Exception
lineBytes	bmp.h	/^inline int lineBytes(int width){ return (realWidth(width* sizeof(rgb_t)));}$/;"	f
lineCoeffs	opencv/include/cvaux.h	/^    CvStereoLineCoeff* lineCoeffs;$/;"	m	struct:CvStereoCamera
lineThresholdBinarized	opencv/include/cv.h	/^    int lineThresholdBinarized;$/;"	m	struct:CvStarDetectorParams
lineThresholdProjected	opencv/include/cv.h	/^    int lineThresholdProjected;$/;"	m	struct:CvStarDetectorParams
line_type	opencv/include/cxcore.h	/^    int         line_type;$/;"	m	struct:CvFont
lineno	vascript/flexbison/flexlexer.h	/^	int lineno() const		{ return yylineno; }$/;"	f	class:FlexLexer
loaded_from	opencv/include/cxtypes.h	/^    int loaded_from;$/;"	m	struct:CvPluginFuncInfo
locateROI	opencv/include/cxmat.hpp	/^inline void Mat::locateROI( Size& wholeSize, Point& ofs ) const$/;"	f	class:cv::Mat
log_create	vascript/node.hxx	31;"	d
log_dbg	vascript/node.hxx	32;"	d
log_likelihood	opencv/include/ml.h	/^    double log_likelihood;$/;"	m	class:CvEM
log_var_val	opencv/include/cvaux.h	/^    float* log_var_val; \/* sum of 0.5 (LN2PI + ln(variance[i]) ) for i=1,n *\/$/;"	m	struct:CvEHMMState
log_weight_div_det	opencv/include/ml.h	/^    CvMat* log_weight_div_det;$/;"	m	class:CvEM
lru_list	opencv/include/ml.h	/^    CvSVMKernelRow lru_list;$/;"	m	class:CvSVMSolver
lsh_hash	opencv/include/cv.hpp	/^struct lsh_hash {$/;"	s
m	opencv/include/cvtypes.h	/^    float m[3][3];$/;"	m	struct:CvMatrix3
m	opencv/include/cxcore.hpp	/^    const Mat_<_Tp>* m;$/;"	m	class:cv::MatConstIterator_
m	opencv/include/cxcore.hpp	/^    const SparseMat* m;$/;"	m	class:cv::SparseMatConstIterator
m	vascript/ccg/ccg.h	/^        Instr m;$/;"	m	class:CCG::InstructionCoder
m00	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m00	opencv/include/cvaux.hpp	/^		long m00, m01, m10, m11, m02, m20;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
m00	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m01	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m01	opencv/include/cvaux.hpp	/^		long m00, m01, m10, m11, m02, m20;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
m01	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m02	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m02	opencv/include/cvaux.hpp	/^		long m00, m01, m10, m11, m02, m20;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
m02	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m03	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m03	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m10	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m10	opencv/include/cvaux.hpp	/^		long m00, m01, m10, m11, m02, m20;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
m10	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m11	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m11	opencv/include/cvaux.hpp	/^		long m00, m01, m10, m11, m02, m20;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
m11	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m12	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m12	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m20	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m20	opencv/include/cvaux.hpp	/^		long m00, m01, m10, m11, m02, m20;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
m20	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m21	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m21	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
m30	opencv/include/cv.hpp	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/\/ spatial moments$/;"	m	class:cv::Moments
m30	opencv/include/cvtypes.h	/^    double  m00, m10, m01, m20, m11, m02, m30, m21, m12, m03; \/* spatial moments *\/$/;"	m	struct:CvMoments
mChild	vascript/treeNode.h	/^    Node* mChild;$/;"	m	class:Node
mKernel	Kernel.h	/^typedef void (* mKernel)(char* dataOut, char* dataIn,int row,int col,int step,int sLimit);$/;"	t	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void CopyFrame mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void FreiChen mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void LapLas   mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void Prewitt  mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void Robert   mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void Sobel    mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	/^void dxyOne   mKernelArg;$/;"	m	namespace:dmFrameSimple
mKernelArg	Kernel.h	33;"	d
mNext	vascript/treeNode.h	/^    Node* mNext;$/;"	m	class:Node
mParent	vascript/treeNode.h	/^    Node* mParent;$/;"	m	class:Node
mPrevious	vascript/treeNode.h	/^    Node* mPrevious;$/;"	m	class:Node
m_Graph	vascript/gimple.hxx	/^        FlowGraph* m_Graph;$/;"	m	class:GimpleGraphNode
m_Graph	vascript/node.hxx	/^        FlowGraph* m_Graph;$/;"	m	class:AstGraphNode
m_Wnd	opencv/include/cvvidsurv.hpp	/^    int         m_Wnd;$/;"	m	class:CvVSModule
m_affine_poses	opencv/include/cvaux.hpp	/^    AffinePose* m_affine_poses; \/\/ an array of poses$/;"	m	class:cv::OneWayDescriptor
m_args	vascript/gimple.hxx	/^        std::vector<SymbolInfo> m_args;$/;"	m	class:GimpleBase
m_back_project	opencv/include/cvaux.hpp	/^    IplImage*  m_back_project;$/;"	m	class:CvCamShiftTracker
m_box	opencv/include/cvaux.hpp	/^    CvBox2D    m_box;$/;"	m	class:CvCamShiftTracker
m_center	opencv/include/cvaux.hpp	/^    Point m_center; \/\/ the coordinates of the feature (the center of the input image ROI)$/;"	m	class:cv::OneWayDescriptor
m_color_planes	opencv/include/cvaux.hpp	/^    IplImage*  m_color_planes[CV_MAX_DIM];$/;"	m	class:CvCamShiftTracker
m_comp	opencv/include/cvaux.hpp	/^    CvConnectedComp m_comp;$/;"	m	class:CvCamShiftTracker
m_descriptors	opencv/include/cvaux.hpp	/^    OneWayDescriptor* m_descriptors; \/\/ array of train feature descriptors$/;"	m	class:cv::OneWayDescriptorBase
m_feature_name	opencv/include/cvaux.hpp	/^    String m_feature_name; \/\/ the name of the feature associated with the descriptor$/;"	m	class:cv::OneWayDescriptor
m_fn	vascript/graph.hxx	/^    char* m_fn;$/;"	m	class:Function
m_functions	vascript/graph.hxx	/^    std::vector<Function*> * m_functions;$/;"	m	class:FunctionList
m_hist	opencv/include/cvaux.hpp	/^    CvHistogram* m_hist;$/;"	m	class:CvCamShiftTracker
m_hist_ranges	opencv/include/cvaux.hpp	/^    float*     m_hist_ranges[CV_MAX_DIM];$/;"	m	class:CvCamShiftTracker
m_hist_ranges_data	opencv/include/cvaux.hpp	/^    float      m_hist_ranges_data[CV_MAX_DIM][2];$/;"	m	class:CvCamShiftTracker
m_image	opencv/include/cvvidsurv.hpp	/^    IplImage* m_image;$/;"	m	class:CvImageDrawer
m_img	opencv/include/highgui.h	/^    IplImage*  m_img;$/;"	m	class:CvvImage
m_mask	opencv/include/cvaux.hpp	/^    IplImage*  m_mask;$/;"	m	class:CvCamShiftTracker
m_max_ch_val	opencv/include/cvaux.hpp	/^    int        m_max_ch_val[CV_MAX_DIM];$/;"	m	class:CvCamShiftTracker
m_min_ch_val	opencv/include/cvaux.hpp	/^    int        m_min_ch_val[CV_MAX_DIM];$/;"	m	class:CvCamShiftTracker
m_object_feature_count	opencv/include/cvaux.hpp	/^    int m_object_feature_count; \/\/ the number of the positive features$/;"	m	class:cv::OneWayDescriptorObject
m_op	vascript/gimple.hxx	/^        OpCode m_op;   $/;"	m	class:GimpleBase
m_pElemFormat	opencv/include/cvvidsurv.hpp	/^    char            m_pElemFormat[1024];$/;"	m	class:CvBlobSeq
m_pMem	opencv/include/cvvidsurv.hpp	/^    CvMemStorage*   m_pMem;$/;"	m	class:CvBlobSeq
m_pMem	opencv/include/cvvidsurv.hpp	/^    CvMemStorage*   m_pMem;$/;"	m	class:CvBlobTrackSeq
m_pModuleName	opencv/include/cvvidsurv.hpp	/^    char*       m_pModuleName;$/;"	m	class:CvVSModule
m_pModuleTypeName	opencv/include/cvvidsurv.hpp	/^    char*       m_pModuleTypeName;$/;"	m	class:CvVSModule
m_pNickName	opencv/include/cvvidsurv.hpp	/^    char*       m_pNickName;$/;"	m	class:CvVSModule
m_pParamList	opencv/include/cvvidsurv.hpp	/^    CvDefParam*   m_pParamList;$/;"	m	class:CvVSModule
m_pSeq	opencv/include/cvvidsurv.hpp	/^    CvSeq*          m_pSeq;$/;"	m	class:CvBlobSeq
m_pSeq	opencv/include/cvvidsurv.hpp	/^    CvSeq*          m_pSeq;$/;"	m	class:CvBlobTrackSeq
m_params	vascript/graph.hxx	/^    int   m_params;$/;"	m	class:Function
m_part_id	opencv/include/cvaux.hpp	/^    int* m_part_id; \/\/ contains part id for each of object descriptors$/;"	m	class:cv::OneWayDescriptorObject
m_patch_size	opencv/include/cvaux.hpp	/^    Size m_patch_size; \/\/ patch size$/;"	m	class:cv::OneWayDescriptorBase
m_patch_size	opencv/include/cvaux.hpp	/^    Size m_patch_size; \/\/ size of each image$/;"	m	class:cv::OneWayDescriptor
m_pca_avg	opencv/include/cvaux.hpp	/^    CvMat* m_pca_avg; \/\/ PCA average vector for small patches$/;"	m	class:cv::OneWayDescriptorBase
m_pca_coeffs	opencv/include/cvaux.hpp	/^    CvMat** m_pca_coeffs; \/\/ an array of length m_pose_count containing pca decomposition of the patch in different poses$/;"	m	class:cv::OneWayDescriptor
m_pca_descriptors	opencv/include/cvaux.hpp	/^    OneWayDescriptor* m_pca_descriptors; \/\/ an array of PCA descriptors$/;"	m	class:cv::OneWayDescriptorBase
m_pca_dim_high	opencv/include/cvaux.hpp	/^    int m_pca_dim_high; \/\/ the number of descriptor pca components to use for generating affine poses$/;"	m	class:cv::OneWayDescriptor
m_pca_dim_high	opencv/include/cvaux.hpp	/^    int m_pca_dim_high;$/;"	m	class:cv::OneWayDescriptorBase
m_pca_dim_low	opencv/include/cvaux.hpp	/^    int m_pca_dim_low; \/\/ the number of pca components to use for comparison$/;"	m	class:cv::OneWayDescriptor
m_pca_dim_low	opencv/include/cvaux.hpp	/^    int m_pca_dim_low;$/;"	m	class:cv::OneWayDescriptorBase
m_pca_eigenvectors	opencv/include/cvaux.hpp	/^    CvMat* m_pca_eigenvectors; \/\/ PCA eigenvectors for small patches$/;"	m	class:cv::OneWayDescriptorBase
m_pca_hr_avg	opencv/include/cvaux.hpp	/^    CvMat* m_pca_hr_avg; \/\/ PCA average vector for large patches$/;"	m	class:cv::OneWayDescriptorBase
m_pca_hr_eigenvectors	opencv/include/cvaux.hpp	/^    CvMat* m_pca_hr_eigenvectors; \/\/ PCA eigenvectors for large patches$/;"	m	class:cv::OneWayDescriptorBase
m_pose_count	opencv/include/cvaux.hpp	/^    int m_pose_count; \/\/ the number of poses for each descriptor$/;"	m	class:cv::OneWayDescriptorBase
m_pose_count	opencv/include/cvaux.hpp	/^    int m_pose_count; \/\/ the number of poses$/;"	m	class:cv::OneWayDescriptor
m_poses	opencv/include/cvaux.hpp	/^    AffinePose* m_poses; \/\/ array of poses$/;"	m	class:cv::OneWayDescriptorBase
m_pyr_levels	opencv/include/cvaux.hpp	/^    int m_pyr_levels;$/;"	m	class:cv::OneWayDescriptorBase
m_retType	vascript/graph.hxx	/^    int   m_retType;$/;"	m	class:Function
m_samples	opencv/include/cvaux.hpp	/^    IplImage** m_samples; \/\/ an array of length m_pose_count containing the patch in different poses $/;"	m	class:cv::OneWayDescriptor
m_shape	opencv/include/cvvidsurv.hpp	/^    CvDrawShape m_shape[16];$/;"	m	class:CvImageDrawer
m_temp	opencv/include/cvaux.hpp	/^    IplImage*  m_temp;$/;"	m	class:CvCamShiftTracker
m_threshold	opencv/include/cvaux.hpp	/^    int        m_threshold;$/;"	m	class:CvCamShiftTracker
m_train_feature_count	opencv/include/cvaux.hpp	/^    int m_train_feature_count; \/\/ the number of the training features$/;"	m	class:cv::OneWayDescriptorBase
m_train_features	opencv/include/cvaux.hpp	/^    vector<KeyPoint> m_train_features; \/\/ train features$/;"	m	class:cv::OneWayDescriptorObject
m_transforms	opencv/include/cvaux.hpp	/^    CvMat** m_transforms; \/\/ an array of affine transforms corresponding to poses$/;"	m	class:cv::OneWayDescriptor
m_transforms	opencv/include/cvaux.hpp	/^    CvMat** m_transforms; \/\/ array of affine transformations corresponding to poses$/;"	m	class:cv::OneWayDescriptorBase
main	KeyBoard.cpp	/^int main(int argc,char** argv) {$/;"	f
main	bmptest.cpp	/^int main(int argc, char** argv)$/;"	f
main	dmvideo.cpp	/^int main(int argc,char** argv) {$/;"	f
main	mouse.cpp	/^int main( int argc, char** argv )$/;"	f
main	testtok.cpp	/^int main()$/;"	f
main	vascript/ccg/parseCoderHtml.cpp	/^int main(int argc, char** argv)$/;"	f
main	vascript/ccg/testccg.cpp	/^int main()$/;"	f
main	vascript/ccg/testopcode.cpp	/^int main()$/;"	f
main	vascript/dis.c	/^int main()$/;"	f
main	vascript/main.cpp	/^int main(int argc, char** argv)$/;"	f
main	vascript/testvas.cpp	/^int main(int argc, char** argv)$/;"	f
map	opencv/include/cxtypes.h	/^        CvFileNodeHash* map; \/* map (collection of named file nodes) *\/$/;"	m	union:CvFileNode::__anon37
mask	opencv/include/cv.hpp	/^    CvMat* mask;$/;"	m	class:CvLevMarq
mask	opencv/include/cxcore.h	/^    int      mask;         \/* event mask *\/$/;"	m	struct:CvGraphScanner
maskROI	opencv/include/cxtypes.h	/^    struct _IplImage *maskROI;      \/* Must be NULL. *\/$/;"	m	struct:_IplImage	typeref:struct:_IplImage::_IplImage
masm	vascript/ccg/ccg.h	/^        char masm[128];$/;"	m	class:CCG::biTrans
mat	opencv/include/cvaux.h	/^    float mat[4][4];              \/* maps camera coordinates to world coordinates *\/$/;"	m	struct:__anon109
mat	opencv/include/cxcore.h	/^CVAPI(CvMat*) cvCloneMat( const CvMat* mat );$/;"	v
mat	opencv/include/cxcore.h	/^CVAPI(CvMatND*) cvCloneMatND( const CvMatND* mat );$/;"	v
mat	opencv/include/cxcore.h	/^CVAPI(CvScalar) cvTrace( const CvArr* mat );$/;"	v
mat	opencv/include/cxcore.h	/^CVAPI(CvSparseMat*) cvCloneSparseMat( const CvSparseMat* mat );$/;"	v
mat	opencv/include/cxcore.h	/^CVAPI(double) cvDet( const CvArr* mat );$/;"	v
mat	opencv/include/cxcore.h	/^CVAPI(void)  cvReleaseMat( CvMat** mat );$/;"	v
mat	opencv/include/cxcore.h	/^CVAPI(void)  cvReleaseSparseMat( CvSparseMat** mat );$/;"	v
mat	opencv/include/cxtypes.h	/^    CvMatND mat;                    \/* Embedded matrix header for array histograms. *\/$/;"	m	struct:CvHistogram
mat	opencv/include/cxtypes.h	/^    CvSparseMat* mat;$/;"	m	struct:CvSparseMatIterator
matchOper	vascript/ccg/ccg.cpp	/^int matchOper(OPerKind container, OPerKind input )$/;"	f	namespace:CCG
matchOperImm	vascript/ccg/ccg.cpp	/^int matchOperImm(OPerKind container, OPerKind input )$/;"	f	namespace:CCG
matchOperMem	vascript/ccg/ccg.cpp	/^int matchOperMem(OPerKind container, OPerKind input )$/;"	f	namespace:CCG
matchOperMem	vascript/ccg/ccg.cpp	/^int matchOperMem(OPerKind container, const  MemMod& m)$/;"	f	namespace:CCG
matchOperReg	vascript/ccg/ccg.cpp	/^int matchOperReg(OPerKind container, OPerKind input )$/;"	f	namespace:CCG
match_sum	opencv/include/cvaux.h	/^    int         match_sum;$/;"	m	struct:CvGaussBGValues
matrix	opencv/include/cvaux.h	/^    float   matrix[9]; \/* intinsic camera parameters:  [ fx 0 cx; 0 fy cy; 0 0 1 ] *\/$/;"	m	struct:CvCamera
matrix	opencv/include/cxcore.h	/^    CvMat* matrix;$/;"	m	class:CvMatrix
max	opencv/include/cvaux.h	/^    float max, min; \/\/ minimum and maximum projections$/;"	m	struct:CvContourOrientation
max	opencv/include/cxcore.hpp	63;"	d
max	opencv/include/cxmat.hpp	/^max(const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
max	opencv/include/cxmat.hpp	/^max(const Mat& a, const Mat& b)$/;"	f	namespace:cv
max	opencv/include/cxmat.hpp	/^max(const MatExpr_<A, M>& a, const M& b)$/;"	f	namespace:cv
max	opencv/include/cxmat.hpp	/^max(const MatExpr_<A, M>& a, const MatExpr_<B, M>& b)$/;"	f	namespace:cv
max	opencv/include/cxmat.hpp	/^max(const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
max	opencv/include/cxoperations.hpp	93;"	d
maxArea	opencv/include/cv.h	/^    int maxArea;$/;"	m	struct:CvMSERParams
maxCount	opencv/include/cxcore.hpp	/^    int maxCount;$/;"	m	class:cv::TermCriteria
maxDepth	opencv/include/cxcore.hpp	/^    int maxDepth;$/;"	m	class:cv::KDTree
maxEvolution	opencv/include/cv.h	/^    int maxEvolution;$/;"	m	struct:CvMSERParams
maxHeight	opencv/include/cvaux.hpp	/^		int width, height, maxWidth, maxHeight, ellipseHeight, ellipseWidth;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
maxIters	opencv/include/cv.h	/^    int maxIters;$/;"	m	struct:CvStereoGCState
maxLevels	opencv/include/cvaux.hpp	/^        int maxLevels;$/;"	m	struct:cv::Octree::Node
maxPoints	opencv/include/cvaux.h	/^    int     maxPoints;$/;"	m	class:CvCalibFilter
maxSize	opencv/include/cv.h	/^    int maxSize;$/;"	m	struct:CvStarDetectorParams
maxVariation	opencv/include/cv.h	/^    float maxVariation;$/;"	m	struct:CvMSERParams
maxWidth	opencv/include/cv.hpp	/^    int maxWidth;$/;"	m	class:cv::FilterEngine
maxWidth	opencv/include/cvaux.hpp	/^		int width, height, maxWidth, maxHeight, ellipseHeight, ellipseWidth;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
max_buf_sz	opencv/include/ml.h	/^    int max_count, max_buf_sz;$/;"	m	class:CvANN_MLP
max_c_count	opencv/include/ml.h	/^    int sample_count, var_all, var_count, max_c_count;$/;"	m	struct:CvDTreeTrainData
max_categories	opencv/include/ml.h	/^    int   max_categories;$/;"	m	struct:CvDTreeParams
max_count	opencv/include/ml.h	/^    int max_count, max_buf_sz;$/;"	m	class:CvANN_MLP
max_depth	opencv/include/ml.h	/^    int   max_depth;$/;"	m	struct:CvDTreeParams
max_iter	opencv/include/cxtypes.h	/^    int    max_iter;$/;"	m	struct:CvTermCriteria
max_iter	opencv/include/ml.h	/^    int max_iter;$/;"	m	class:CvSVMSolver
max_k	opencv/include/ml.h	/^    int max_k, var_count;$/;"	m	class:CvKNearest
max_level	opencv/include/cxcore.h	/^    int max_level;$/;"	m	struct:CvTreeNodeIterator
max_size	opencv/include/cxcore.hpp	/^    size_type max_size() const$/;"	f	class:cv::Allocator
max_val	opencv/include/ml.h	/^    double max_val;$/;"	m	struct:CvParamGrid
max_val	opencv/include/ml.h	/^    double min_val, max_val, min_val1, max_val1;$/;"	m	class:CvANN_MLP
max_val1	opencv/include/ml.h	/^    double min_val, max_val, min_val1, max_val1;$/;"	m	class:CvANN_MLP
maxlr	opencv/include/ml.h	/^    double maxlr;$/;"	m	struct:CvDTreeNode
mean	opencv/include/cvaux.h	/^    double      mean[CV_BGFG_MOG_NCOLORS];$/;"	m	struct:CvGaussBGValues
mean	opencv/include/cxcore.hpp	/^    Mat mean;$/;"	m	class:cv::PCA
means	opencv/include/ml.h	/^    CvMat* means;$/;"	m	class:CvEM
means	opencv/include/ml.h	/^    const CvMat* means;$/;"	m	struct:CvEMParams
meanshift_profile	opencv/include/cvvidsurv.hpp	/^    int     meanshift_profile;$/;"	m	struct:CvBlobTrackerParamMS
measurementMatrix	opencv/include/cv.hpp	/^    Mat measurementMatrix;  \/\/ measurement matrix (H)$/;"	m	class:cv::KalmanFilter
measurementNoiseCov	opencv/include/cv.hpp	/^    Mat measurementNoiseCov;\/\/ measurement noise covariance matrix (R)$/;"	m	class:cv::KalmanFilter
measurement_matrix	opencv/include/cvtypes.h	/^    CvMat* measurement_matrix;  \/* measurement matrix (H) *\/$/;"	m	struct:CvKalman
measurement_noise_cov	opencv/include/cvtypes.h	/^    CvMat* measurement_noise_cov; \/* measurement noise covariance matrix (R) *\/$/;"	m	struct:CvKalman
memory_weight	opencv/include/cxflann.h	/^	float memory_weight;       \/\/ index memory weighting factor$/;"	m	struct:cv::flann::AutotunedIndexParams
merge	opencv/include/cxmat.hpp	/^static inline void merge(const vector<Mat>& mv, Mat& dst)$/;"	f	namespace:cv
merge	opencv/include/cxmat.hpp	/^static inline void merge(const vector<MatND>& mv, MatND& dst)$/;"	f	namespace:cv
merge	opencv/include/cxmat.hpp	/^template<typename _Tp> void merge(const Mat_<_Tp>* mvbegin, size_t count, Mat& dst)$/;"	f	namespace:cv
mesh	opencv/include/cvaux.hpp	/^    Mesh3D mesh;$/;"	m	class:cv::SpinImageModel
min	opencv/include/cvaux.h	/^    float max, min; \/\/ minimum and maximum projections$/;"	m	struct:CvContourOrientation
min	opencv/include/cxcore.hpp	62;"	d
min	opencv/include/cxmat.hpp	/^min(const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
min	opencv/include/cxmat.hpp	/^min(const Mat& a, const Mat& b)$/;"	f	namespace:cv
min	opencv/include/cxmat.hpp	/^min(const MatExpr_<A, M>& a, const M& b)$/;"	f	namespace:cv
min	opencv/include/cxmat.hpp	/^min(const MatExpr_<A, M>& a, const MatExpr_<B, M>& b)$/;"	f	namespace:cv
min	opencv/include/cxmat.hpp	/^min(const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
min	opencv/include/cxoperations.hpp	92;"	d
minArea	opencv/include/cv.h	/^    int minArea;$/;"	m	struct:CvMSERParams
minArea	opencv/include/cvaux.h	/^    double  bg_threshold, std_threshold, minArea;$/;"	m	struct:CvGaussBGStatModelParams
minArea	opencv/include/cvaux.h	/^    float  minArea;		\/* Discard foreground blobs whose bounding box is smaller than this threshold.					*\/$/;"	m	struct:CvFGDStatModelParams
minDisparity	opencv/include/cv.h	/^    int minDisparity;  \/\/ minimum disparity (can be negative)$/;"	m	struct:CvStereoBMState
minDisparity	opencv/include/cv.h	/^    int minDisparity;$/;"	m	struct:CvStereoGCState
minDiversity	opencv/include/cv.h	/^    float minDiversity;$/;"	m	struct:CvMSERParams
minMargin	opencv/include/cv.h	/^    double minMargin;$/;"	m	struct:CvMSERParams
minNeighbors	opencv/include/cvaux.hpp	/^    int minNeighbors;$/;"	m	class:cv::SpinImageModel
minPoints	opencv/include/cvaux.hpp	/^    int minPoints;$/;"	m	class:cv::Octree
min_sample_count	opencv/include/ml.h	/^    int   min_sample_count;$/;"	m	struct:CvDTreeParams
min_val	opencv/include/ml.h	/^    double min_val, max_val, min_val1, max_val1;$/;"	m	class:CvANN_MLP
min_val	opencv/include/ml.h	/^    double min_val;$/;"	m	struct:CvParamGrid
min_val1	opencv/include/ml.h	/^    double min_val, max_val, min_val1, max_val1;$/;"	m	class:CvANN_MLP
minusDelta	opencv/include/cxcore.hpp	/^    int minusDelta, plusDelta;$/;"	m	class:cv::LineIterator
minusStep	opencv/include/cxcore.hpp	/^    int minusStep, plusStep;$/;"	m	class:cv::LineIterator
minus_delta	opencv/include/cxtypes.h	/^    int  minus_delta;$/;"	m	struct:CvLineIterator
minus_step	opencv/include/cxtypes.h	/^    int  minus_step;$/;"	m	struct:CvLineIterator
miss_ch	opencv/include/ml.h	/^    char miss_ch;$/;"	m	class:CvMLData
missing	opencv/include/ml.h	/^    CvMat* missing;$/;"	m	class:CvMLData
missing_mask	opencv/include/ml.h	/^    const CvMat* missing_mask;$/;"	m	struct:CvERTreeTrainData
mix	opencv/include/cvaux.h	/^    int* mix;  \/* number of mixture to which observation belong *\/$/;"	m	struct:CvImgObsInfo
mix	opencv/include/ml.h	/^    bool mix;    $/;"	m	struct:CvTrainTestSplit
mix	opencv/include/ml.h	/^    bool mix;$/;"	m	class:CvMLData
mixChannels	opencv/include/cxmat.hpp	/^static inline void mixChannels(const vector<Mat>& src, vector<Mat>& dst,$/;"	f	namespace:cv
mixChannels	opencv/include/cxmat.hpp	/^static inline void mixChannels(const vector<MatND>& src, vector<MatND>& dst,$/;"	f	namespace:cv
mn	vascript/ccg/opcodeDes.h	/^        MN    mn;$/;"	m	class:CCG::OpInfo
modMax	opencv/include/cvaux.h	/^    uchar modMax[3];$/;"	m	struct:CvBGCodeBookModel
modMin	opencv/include/cvaux.h	/^    uchar modMin[3];$/;"	m	struct:CvBGCodeBookModel
mode	vascript/ccg/opcodeDes.h	/^        Uchar mode ; 	\/\/ mode of operation$/;"	m	class:CCG::OpInfo
model	opencv/include/cvaux.h	/^CVAPI(void) cvReleaseBGCodeBookModel( CvBGCodeBookModel** model );$/;"	v
modelPoints	opencv/include/cvaux.hpp	/^    vector<KeyPoint> modelPoints;$/;"	m	class:cv::PlanarObjectDetector
modelROI	opencv/include/cvaux.hpp	/^    Rect modelROI;$/;"	m	class:cv::PlanarObjectDetector
modifFlag	vascript/ccg/opcodeDes.h	/^        unsigned int modifFlag;$/;"	m	class:CCG::OpInfo
modrm	vascript/ccg/ccg.h	/^		ModRM modrm;$/;"	m	class:CCG::MemMod
module_info	opencv/include/cxcore.h	/^CVAPI(int)  cvRegisterModule( const CvModuleInfo* module_info );$/;"	v
morphologyDefaultBorderValue	opencv/include/cv.hpp	/^static inline Scalar morphologyDefaultBorderValue() { return Scalar::all(DBL_MAX); }$/;"	f	namespace:cv
mu	opencv/include/cvaux.h	/^    float* mu;          \/*mean vectors corresponding to each mixture*\/$/;"	m	struct:CvEHMMState
mu02	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu02	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mu03	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu03	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mu11	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu11	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mu12	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu12	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mu20	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu20	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mu21	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu21	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mu30	opencv/include/cv.hpp	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/\/ central moments$/;"	m	class:cv::Moments
mu30	opencv/include/cvtypes.h	/^    double  mu20, mu11, mu02, mu30, mu21, mu12, mu03; \/* central moments *\/$/;"	m	struct:CvMoments
mul	opencv/include/cxmat.hpp	/^    mul(const M& m, double scale=1) const$/;"	f	class:cv::MatExpr_
mul	opencv/include/cxmat.hpp	/^    mul(const MatExpr_<A, M>& m, double scale=1) const$/;"	f	class:cv::MatExpr_
mul	opencv/include/cxmat.hpp	/^Mat::mul(const Mat& m, double scale) const$/;"	f	class:cv::Mat
mul	opencv/include/cxmat.hpp	/^Mat::mul(const MatExpr_<MatExpr_Op2_<Mat, double, Mat, MatOp_DivRS_<Mat> >, Mat>& m, double scale) const$/;"	f	class:cv::Mat
mul	opencv/include/cxmat.hpp	/^Mat::mul(const MatExpr_<MatExpr_Op2_<Mat, double, Mat, MatOp_Scale_<Mat> >, Mat>& m, double scale) const$/;"	f	class:cv::Mat
mul	opencv/include/cxmat.hpp	/^Mat_<_Tp>::mul(const MatExpr_<MatExpr_Op2_<Mat_<_Tp>, double, Mat_<_Tp>, MatOp_DivRS_<Mat> >, Mat_<_Tp> >& m, double scale) const$/;"	f	class:cv::Mat_
mul	opencv/include/cxmat.hpp	/^Mat_<_Tp>::mul(const MatExpr_<MatExpr_Op2_<Mat_<_Tp>, double, Mat_<_Tp>, MatOp_Scale_<Mat> >, Mat_<_Tp> >& m, double scale) const$/;"	f	class:cv::Mat_
mul	opencv/include/cxmat.hpp	/^Mat_<_Tp>::mul(const Mat_<_Tp>& m, double scale) const$/;"	f	class:cv::Mat_
mul	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp> Scalar_<_Tp>::mul(const Scalar_<_Tp>& t, double scale ) const$/;"	f	class:cv::Scalar_
mustChangeAddressSize	vascript/ccg/ccg.h	/^        inline Uchar  mustChangeAddressSize(GPR r){$/;"	f	class:CCG::Instr
mustChangeAddressSize	vascript/ccg/ccg.h	/^        template<typename T> inline Uchar  mustChangeAddressSize(T r){ return mustChangeAddressSize((GPR) r);}$/;"	f	class:CCG::Instr
mustChangeOprandSize	vascript/ccg/ccg.h	/^        inline Uchar  mustChangeOprandSize(GPR r){$/;"	f	class:CCG::Instr
mustChangeOprandSize	vascript/ccg/ccg.h	/^        template<typename T> inline Uchar  mustChangeOprandSize(T r){ return mustChangeOprandSize((GPR) r);}$/;"	f	class:CCG::Instr
mystr	vascript/compileflexbison.bat	/^set mystr=%%i$/;"	v
mystr	vascript/compileflexbison.bat	/^set mystr=%mystr:class istream;=;%$/;"	v
nChannels	opencv/include/cxtypes.h	/^    int  nChannels;         \/* Most of OpenCV functions support 1,2,3 or 4 channels *\/$/;"	m	struct:_IplImage
nCols	opencv/include/cxtypes.h	/^    int  nCols;$/;"	m	struct:_IplConvKernel
nCols	opencv/include/cxtypes.h	/^    int  nCols;$/;"	m	struct:_IplConvKernelFP
nFrameCount	opencv/include/cvaux.hpp	/^	int nStartCounter, nFrameCount, nSkinHueLowerBound, nSkinHueUpperBound, nMorphingMethod, nSamplingDivider;$/;"	m	class:CvAdaptiveSkinDetector
nFrame_in_pool	KeyBoard.cpp	/^const int nFrame_in_pool=3;$/;"	v
nFrame_in_pool	vascript/vacg.h	/^const int nFrame_in_pool =3;$/;"	v
nMorphingMethod	opencv/include/cvaux.hpp	/^	int nStartCounter, nFrameCount, nSkinHueLowerBound, nSkinHueUpperBound, nMorphingMethod, nSamplingDivider;$/;"	m	class:CvAdaptiveSkinDetector
nOctaveLayers	opencv/include/cv.h	/^    int nOctaveLayers;$/;"	m	struct:CvSURFParams
nOctaves	opencv/include/cv.h	/^    int nOctaves;$/;"	m	struct:CvSURFParams
nOctaves	opencv/include/cvaux.hpp	/^    int nOctaves;$/;"	m	class:cv::LDetector
nRows	opencv/include/cxtypes.h	/^    int  nRows;$/;"	m	struct:_IplConvKernel
nRows	opencv/include/cxtypes.h	/^    int  nRows;$/;"	m	struct:_IplConvKernelFP
nSamplingDivider	opencv/include/cvaux.hpp	/^	int nStartCounter, nFrameCount, nSkinHueLowerBound, nSkinHueUpperBound, nMorphingMethod, nSamplingDivider;$/;"	m	class:CvAdaptiveSkinDetector
nShiftR	opencv/include/cxtypes.h	/^    int  nShiftR;$/;"	m	struct:_IplConvKernel
nSize	opencv/include/cxtypes.h	/^    int  nSize;             \/* sizeof(IplImage) *\/$/;"	m	struct:_IplImage
nSkinHueLowerBound	opencv/include/cvaux.hpp	/^	int nStartCounter, nFrameCount, nSkinHueLowerBound, nSkinHueUpperBound, nMorphingMethod, nSamplingDivider;$/;"	m	class:CvAdaptiveSkinDetector
nSkinHueUpperBound	opencv/include/cvaux.hpp	/^	int nStartCounter, nFrameCount, nSkinHueLowerBound, nSkinHueUpperBound, nMorphingMethod, nSamplingDivider;$/;"	m	class:CvAdaptiveSkinDetector
nStartCounter	opencv/include/cvaux.hpp	/^	int nStartCounter, nFrameCount, nSkinHueLowerBound, nSkinHueUpperBound, nMorphingMethod, nSamplingDivider;$/;"	m	class:CvAdaptiveSkinDetector
nViews	opencv/include/cvaux.hpp	/^    int nViews;$/;"	m	class:cv::LDetector
n_gauss	opencv/include/cvaux.h	/^    int     n_gauss;$/;"	m	struct:CvGaussBGStatModelParams
nactive_vars	opencv/include/ml.h	/^    int nactive_vars;$/;"	m	struct:CvRTParams
name	opencv/include/cxoperations.hpp	/^inline string FileNode::name() const$/;"	f	class:cv::FileNode
name	opencv/include/cxtypes.h	/^    const char* name;$/;"	m	struct:CvModuleInfo
name	vascript/release/vasparser.cpp	/^char* name;$/;"	m	union:__anon124	file:
name	vascript/release/vasparser.h	/^char* name;$/;"	m	union:__anon125
name	vascript/symbol.h	/^        char* name;$/;"	m	class:Symbol
nbins	opencv/include/cvaux.hpp	/^    int nbins;$/;"	m	struct:cv::HOGDescriptor
ncategories	opencv/include/cv.hpp	/^    int ncategories;$/;"	m	class:cv::CascadeClassifier
nclasses	opencv/include/cvaux.hpp	/^    int nclasses;$/;"	m	class:cv::FernClassifier
nclasses	opencv/include/ml.h	/^    int nclasses;$/;"	m	class:CvRTrees
nclusters	opencv/include/ml.h	/^    int nclusters;$/;"	m	struct:CvEMParams
ne	opencv/include/cvaux.h	/^    int* ne;$/;"	m	struct:CvCliqueFinder
needSwapCameras	opencv/include/cvaux.h	/^    int needSwapCameras;\/* flag set to 1 if need to swap cameras for good reconstruction *\/$/;"	m	struct:CvStereoCamera
neighbors	opencv/include/cvtypes.h	/^    int neighbors;$/;"	m	struct:CvAvgComp
newSymbol	vascript/graph.cpp	/^SymbolInfo* FlowGraph::newSymbol(char* name, argtype_t t, size_t imm)$/;"	f	class:FlowGraph
newSymbol	vascript/graph.hxx	/^        SymbolInfo* newSymbol(char* name, argtype_t t, T*& ref){$/;"	f	class:FlowGraph
newtmpSymbol	vascript/graph.cpp	/^SymbolInfo* FlowGraph::newtmpSymbol()$/;"	f	class:FlowGraph
next	opencv/include/cvaux.h	/^    struct CvBGCodeBookElem* next;$/;"	m	struct:CvBGCodeBookElem	typeref:struct:CvBGCodeBookElem::CvBGCodeBookElem
next	opencv/include/cvaux.h	/^    struct CvVoronoiSite2D *next[2];$/;"	m	struct:CvVoronoiSite2D	typeref:struct:CvVoronoiSite2D::CvVoronoiSite2D
next	opencv/include/cvtypes.h	/^    int next;$/;"	m	struct:CvHaarStageClassifier
next	opencv/include/cvvidsurv.hpp	/^    struct CvDefParam*    next;$/;"	m	struct:CvDefParam	typeref:struct:CvDefParam::CvDefParam
next	opencv/include/cxcore.hpp	/^        size_t next;$/;"	m	struct:cv::SparseMat::Node
next	opencv/include/cxoperations.hpp	/^inline unsigned RNG::next()$/;"	f	class:cv::RNG
next	opencv/include/cxtypes.h	/^    struct CvAttrList* next;   \/* Pointer to next chunk of the attributes list.                    *\/$/;"	m	struct:CvAttrList	typeref:struct:CvAttrList::CvAttrList
next	opencv/include/cxtypes.h	/^    struct CvMemBlock*  next;$/;"	m	struct:CvMemBlock	typeref:struct:CvMemBlock::CvMemBlock
next	opencv/include/cxtypes.h	/^    struct CvModuleInfo* next;$/;"	m	struct:CvModuleInfo	typeref:struct:CvModuleInfo::CvModuleInfo
next	opencv/include/cxtypes.h	/^    struct CvSeqBlock*  next; \/* Next sequence block.                       *\/$/;"	m	struct:CvSeqBlock	typeref:struct:CvSeqBlock::CvSeqBlock
next	opencv/include/cxtypes.h	/^    struct CvSparseNode* next;$/;"	m	struct:CvSparseNode	typeref:struct:CvSparseNode::CvSparseNode
next	opencv/include/cxtypes.h	/^    struct CvStringHashNode* next;$/;"	m	struct:CvStringHashNode	typeref:struct:CvStringHashNode::CvStringHashNode
next	opencv/include/cxtypes.h	/^    struct CvTypeInfo* next;$/;"	m	struct:CvTypeInfo	typeref:struct:CvTypeInfo::CvTypeInfo
next	opencv/include/ml.h	/^    CvDTreeSplit* next;$/;"	m	struct:CvDTreeSplit
next	opencv/include/ml.h	/^    CvSVMKernelRow* next;$/;"	m	struct:CvSVMKernelRow
next	opencv/include/ml.h	/^    CvVectors* next;$/;"	m	struct:CvVectors
next	vascript/node.h	/^    Node* next;$/;"	m	class:Node
next	vascript/treeNode.h	/^    Node* next()  { return mNext;}$/;"	f	class:Node
next	vascript/treeNode.h	/^    void next(Node* o){ mNext = o;}$/;"	f	class:Node
next	vascript/vastree.h	/^        node* next;$/;"	m	class:node
nextSib	vascript/graph.hxx	/^	FlowGraph *nextSib;$/;"	m	class:FlowGraph
nnIndex	opencv/include/cxflann.h	/^	::flann::Index* nnIndex;$/;"	m	class:cv::flann::Index
noOfSigBits	opencv/include/cvvidsurv.hpp	/^    int     noOfSigBits;$/;"	m	struct:CvBlobTrackerParamMS
nod	opencv/include/cvaux.h	/^    int* nod;$/;"	m	struct:CvCliqueFinder
node	opencv/include/cxcore.h	/^    const void* node;$/;"	m	struct:CvTreeNodeIterator
node	opencv/include/cxcore.h	/^CVAPI(const char*) cvGetFileNodeName( const CvFileNode* node );$/;"	v
node	opencv/include/cxcore.hpp	/^    const CvFileNode* node;$/;"	m	class:cv::FileNode
node	opencv/include/cxmat.hpp	/^inline SparseMat::Node* SparseMat::node(size_t nidx)$/;"	f	class:cv::SparseMat
node	opencv/include/cxmat.hpp	/^inline SparseMat::Node* SparseMatIterator::node() const$/;"	f	class:cv::SparseMatIterator
node	opencv/include/cxmat.hpp	/^inline const SparseMat::Node* SparseMat::node(size_t nidx) const$/;"	f	class:cv::SparseMat
node	opencv/include/cxmat.hpp	/^inline const SparseMat::Node* SparseMatConstIterator::node() const$/;"	f	class:cv::SparseMatConstIterator
node	opencv/include/cxtypes.h	/^    CvSparseNode* node;$/;"	m	struct:CvSparseMatIterator
node	vascript/release/vasparser.cpp	/^AstNode* node;$/;"	m	union:__anon124	file:
node	vascript/release/vasparser.h	/^AstNode* node;$/;"	m	union:__anon125
node	vascript/vastree.h	/^class node$/;"	c
nodeCount	opencv/include/cv.hpp	/^        int nodeCount;$/;"	m	struct:cv::CascadeClassifier::DTree
nodeCount	opencv/include/cxcore.hpp	/^        size_t nodeCount;$/;"	m	struct:cv::SparseMat::Hdr
nodeSize	opencv/include/cxcore.hpp	/^        size_t nodeSize;$/;"	m	struct:cv::SparseMat::Hdr
node_header_INC	vascript/node.h	20;"	d
node_heap	opencv/include/ml.h	/^    CvSet* node_heap;$/;"	m	struct:CvDTreeTrainData
node_risk	opencv/include/ml.h	/^    double node_risk, tree_risk, tree_error;$/;"	m	struct:CvDTreeNode
nodehxx_header_INC	vascript/node.hxx	18;"	d
nodes	opencv/include/cv.hpp	/^    vector<DTreeNode> nodes;$/;"	m	class:cv::CascadeClassifier
nodes	opencv/include/cvaux.hpp	/^    vector<Node> nodes;$/;"	m	class:cv::Octree
nodes	opencv/include/cxcore.hpp	/^    vector<Node> nodes;$/;"	m	class:cv::KDTree
noiseRange	opencv/include/cvaux.hpp	/^    double noiseRange;$/;"	m	class:cv::PatchGenerator
norm	opencv/include/cxoperations.hpp	/^double norm(const Vec<T1, n>& a)$/;"	f	namespace:cv
norm	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline double norm(const Point3_<_Tp>& pt)$/;"	f	namespace:cv
norm	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline double norm(const Point_<_Tp>& pt)$/;"	f	namespace:cv
normType	opencv/include/cxcore.hpp	/^    int normType;$/;"	m	class:cv::KDTree
normalRadius	opencv/include/cvaux.hpp	/^    float normalRadius;$/;"	m	class:cv::SpinImageModel
normals	opencv/include/cvaux.hpp	/^    vector<Point3f> normals;$/;"	m	class:cv::Mesh3D
nplanes	opencv/include/cxcore.hpp	/^    int nplanes;$/;"	m	class:cv::NAryMatNDIterator
nsamples	opencv/include/ml.h	/^    int nsamples;$/;"	m	class:CvRTrees
nstructs	opencv/include/cvaux.hpp	/^    int nstructs;$/;"	m	class:cv::FernClassifier
nt_AstNode	vascript/node.h	/^    nt_AstNode=1, nt_AstOpExpr,$/;"	e	enum:__anon123
nt_AstOpExpr	vascript/node.h	/^    nt_AstNode=1, nt_AstOpExpr,$/;"	e	enum:__anon123
nt_GimpleAssignNode	vascript/node.h	/^    nt_GimpleNode=128, nt_GimpleStatementNode,nt_GimpleAssignNode, nt_GimpleGraphNode $/;"	e	enum:__anon123
nt_GimpleGraphNode	vascript/node.h	/^    nt_GimpleNode=128, nt_GimpleStatementNode,nt_GimpleAssignNode, nt_GimpleGraphNode $/;"	e	enum:__anon123
nt_GimpleNode	vascript/node.h	/^    nt_GimpleNode=128, nt_GimpleStatementNode,nt_GimpleAssignNode, nt_GimpleGraphNode $/;"	e	enum:__anon123
nt_GimpleStatementNode	vascript/node.h	/^    nt_GimpleNode=128, nt_GimpleStatementNode,nt_GimpleAssignNode, nt_GimpleGraphNode $/;"	e	enum:__anon123
nt_undefined	vascript/node.h	/^typedef enum {nt_undefined=0,$/;"	e	enum:__anon123
ntrees	opencv/include/cv.hpp	/^        int ntrees;$/;"	m	struct:cv::CascadeClassifier::Stage
ntrees	opencv/include/ml.h	/^    int ntrees;$/;"	m	class:CvRTrees
nu	opencv/include/ml.h	/^    double      nu; \/\/ for CV_SVM_NU_SVC, CV_SVM_ONE_CLASS, and CV_SVM_NU_SVR$/;"	m	struct:CvSVMParams
nu02	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
nu03	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
nu11	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
nu12	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
nu20	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
nu21	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
nu30	opencv/include/cv.hpp	/^    double  nu20, nu11, nu02, nu30, nu21, nu12, nu03; \/\/ central normalized moments$/;"	m	class:cv::Moments
numAstNode	global.cpp	/^int numAstNode=0;$/;"	v
numIters	opencv/include/cvaux.hpp	/^		int ldx, ldy, ldw, ldh, numShifts, numIters;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
numShifts	opencv/include/cvaux.hpp	/^		int ldx, ldy, ldw, ldh, numShifts, numIters;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
num_cam_param	opencv/include/cvaux.hpp	/^    int num_cam_param;$/;"	m	class:cv::LevMarqSparse
num_cams	opencv/include/cvaux.hpp	/^    int num_cams;$/;"	m	class:cv::LevMarqSparse
num_err_param	opencv/include/cvaux.hpp	/^    int num_err_param;$/;"	m	class:cv::LevMarqSparse
num_mix	opencv/include/cvaux.h	/^    int num_mix;        \/*number of mixtures in this state*\/$/;"	m	struct:CvEHMMState
num_point_param	opencv/include/cvaux.hpp	/^    int num_point_param;$/;"	m	class:cv::LevMarqSparse
num_points	opencv/include/cvaux.hpp	/^    int num_points;$/;"	m	class:cv::LevMarqSparse
num_states	opencv/include/cvaux.h	/^    int num_states; \/* number of HMM states *\/$/;"	m	struct:CvEHMM
num_valid	opencv/include/ml.h	/^    int* num_valid;$/;"	m	struct:CvDTreeNode
numberOfAngles	opencv/include/cvaux.hpp	/^    int numberOfAngles;$/;"	m	class:cv::SelfSimDescriptor
numberOfDisparities	opencv/include/cv.h	/^    int numberOfDisparities; \/\/ maximum disparity - minimum disparity (> 0)$/;"	m	struct:CvStereoBMState
numberOfDisparities	opencv/include/cv.h	/^    int numberOfDisparities;$/;"	m	struct:CvStereoGCState
numberOfDistanceBuckets	opencv/include/cvaux.hpp	/^    int numberOfDistanceBuckets;$/;"	m	class:cv::SelfSimDescriptor
nv_heap	opencv/include/ml.h	/^    CvSet* nv_heap;$/;"	m	struct:CvDTreeTrainData
nxtFrame_symblinfo	vascript/symbol.h	107;"	d
nzcount	opencv/include/cxmat.hpp	/^inline size_t SparseMat::nzcount() const$/;"	f	class:cv::SparseMat
o	vascript/ccg/opcodeDes.h	/^                unsigned int o:6;$/;"	m	struct:CCG::OPC1::__anon130::__anon131
oFrame	global.cpp	/^IplImage* oFrame ;$/;"	v
oFrame_symblinfo	vascript/symbol.h	104;"	d
obj	opencv/include/cxcore.hpp	/^    _Tp* obj;$/;"	m	class:cv::Ptr
obj	opencv/include/ml.h	/^    double obj;$/;"	m	struct:CvSVMSolutionInfo
obj	vascript/symbol.h	/^        VaVar obj;$/;"	m	class:Symbol
obs	opencv/include/cvaux.h	/^    float* obs;\/\/consequtive observations$/;"	m	struct:CvImgObsInfo
obsProb	opencv/include/cvaux.h	/^    float** obsProb; \/* if level == 0 - array of brob matrices corresponding to hmm$/;"	m	struct:CvEHMM
obs_info	opencv/include/cvaux.h	/^CVAPI(void)  cvReleaseObsInfo( CvImgObsInfo** obs_info );$/;"	v
obs_size	opencv/include/cvaux.h	/^    int obs_size;$/;"	m	struct:CvImgObsInfo
obs_x	opencv/include/cvaux.h	/^    int obs_x;$/;"	m	struct:CvImgObsInfo
obs_y	opencv/include/cvaux.h	/^    int obs_y;$/;"	m	struct:CvImgObsInfo
occlusionCost	opencv/include/cv.h	/^    int occlusionCost;$/;"	m	struct:CvStereoGCState
octave	opencv/include/cv.hpp	/^    int octave;$/;"	m	class:cv::KeyPoint
octree	opencv/include/cvaux.hpp	/^    Octree octree;$/;"	m	class:cv::Mesh3D
off32	vascript/ccg/ccg.h	/^			int  off32;$/;"	m	union:CCG::MemMod::__anon159
off64	vascript/ccg/ccg.h	/^			I64 off64;$/;"	m	union:CCG::MemMod::__anon159
off8	vascript/ccg/ccg.h	/^			char off8;$/;"	m	union:CCG::MemMod::__anon159
offset	opencv/include/ml.h	/^    int offset;$/;"	m	struct:CvDTreeNode
offsetbytes	bmp.h	/^			unsigned int offsetbytes; $/;"	m	struct:__anon115::__anon116::__anon118
offsetbytes	bmp.h	/^	unsigned int offsetbytes;  \/*Specifies the offset, in u8s, from the bitmapFileHeader_t structure to the bitmap bits*\/$/;"	m	struct:__anon112
oldCascade	opencv/include/cv.hpp	/^    Ptr<CvHaarClassifierCascade> oldCascade;$/;"	m	class:cv::CascadeClassifier
on_postprocess	opencv/include/highgui.h	/^CVAPI(void) cvSetPostprocessFuncWin32( CvWin32WindowCallback on_postprocess );$/;"	v
on_preprocess	opencv/include/highgui.h	/^CVAPI(void) cvSetPreprocessFuncWin32( CvWin32WindowCallback on_preprocess );$/;"	v
ones	opencv/include/cxmat.hpp	/^inline MatExpr_Initializer Mat::ones(Size size, int type)$/;"	f	class:cv::Mat
ones	opencv/include/cxmat.hpp	/^inline MatExpr_Initializer Mat::ones(int rows, int cols, int type)$/;"	f	class:cv::Mat
ones	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatExpr_Initializer Mat_<_Tp>::ones(Size size)$/;"	f	class:cv::Mat_
ones	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatExpr_Initializer Mat_<_Tp>::ones(int rows, int cols)$/;"	f	class:cv::Mat_
oob_error	opencv/include/ml.h	/^    double oob_error;$/;"	m	class:CvRTrees
op	vascript/op.h	/^	char op;$/;"	m	class:OpCode
opDesTable	vascript/ccg/ccg.cpp	/^OpInfo opDesTable[] = {$/;"	m	namespace:CCG	file:
opDesTable32	vascript/ccg/ccg.cpp	/^OpInfo opDesTable32[] = {$/;"	m	namespace:CCG	file:
opDesTableSize	vascript/ccg/ccg.cpp	/^static int opDesTableSize = sizeof(opDesTable)\/sizeof(OpInfo);$/;"	m	namespace:CCG	file:
opDesTableSize32	vascript/ccg/ccg.cpp	/^static int opDesTableSize32 = sizeof(opDesTable32)\/sizeof(OpInfo);$/;"	m	namespace:CCG	file:
opIndex	vascript/ccg/ccg.cpp	/^int opIndex[instructionNum];$/;"	m	namespace:CCG	file:
opIndex32	vascript/ccg/ccg.cpp	/^int opIndex32[instructionNum];$/;"	m	namespace:CCG	file:
opName	vascript/ccg/opcodeDes.h	39;"	d
opNameList	vascript/ccg/opcodeDes.h	/^    opNameList(declareOpName)$/;"	e	enum:CCG::__anon129
opNameList	vascript/ccg/opname_x86.h	3;"	d
opNameList32_	vascript/ccg/op_x86_32.h	971;"	d
opNameList64	vascript/ccg/op_x86_64.h	953;"	d
opPattern	vascript/ccg/ccg.h	/^}opPattern;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon149
op_X2X	vascript/ccg/ccg.h	/^	op_X2X,$/;"	e	enum:CCG::__anon149
op_e2e	vascript/ccg/ccg.h	/^	op_e2e,$/;"	e	enum:CCG::__anon149
op_r2r	vascript/ccg/ccg.h	/^	op_r2r,$/;"	e	enum:CCG::__anon149
op_x	vascript/ccg/ccg.h	/^	op_x = 0,$/;"	e	enum:CCG::__anon149
opc1	vascript/ccg/ccg.h	/^        Uchar opc1;$/;"	m	class:CCG::Instr
opc1	vascript/ccg/opcodeDes.h	/^        OPC1 opc1; 	\/\/ first OPCODE$/;"	m	class:CCG::OpInfo
opc1_R2RM	vascript/ccg/opcodeDes.h	57;"	d
opc1_RM2R	vascript/ccg/opcodeDes.h	58;"	d
opc2	vascript/ccg/ccg.h	/^        Uchar opc2;$/;"	m	class:CCG::Instr
opc2	vascript/ccg/opcodeDes.h	/^        Uchar opc2; 	\/\/ second OPCODE$/;"	m	class:CCG::OpInfo
opc3	vascript/ccg/ccg.h	/^        Uchar opc3;$/;"	m	class:CCG::Instr
opc4	vascript/ccg/ccg.h	/^        Uchar opc4;$/;"	m	class:CCG::Instr
opcode	vascript/ccg/ccg.h	/^inline unsigned int opcode(MN x)$/;"	f	namespace:CCG
opcode	vascript/node.hxx	/^	OpCode opcode;$/;"	m	class:AstOpExpr
opcode_header_INC	vascript/op.h	20;"	d
oper1	vascript/ccg/opcodeDes.h	/^        Uchar oper1; 	\/\/OPerKind$/;"	m	class:CCG::OpInfo
oper2	vascript/ccg/opcodeDes.h	/^        Uchar oper2; 	\/\/OPerKind$/;"	m	class:CCG::OpInfo
oper3	vascript/ccg/opcodeDes.h	/^        Uchar oper3; 	\/\/OPerKind$/;"	m	class:CCG::OpInfo
oper4	vascript/ccg/opcodeDes.h	/^        Uchar oper4; 	\/\/OPerKind$/;"	m	class:CCG::OpInfo
oper_	vascript/ccg/opcodeDes.h	106;"	d
oper_EFlags	vascript/ccg/ccg.h	173;"	d
oper_Empty	vascript/ccg/opcodeDes.h	107;"	d
oper_Flags	vascript/ccg/ccg.h	172;"	d
oper_RFlags	vascript/ccg/ccg.h	175;"	d
oper_ST	vascript/ccg/ccg.h	160;"	d
oper_ST1	vascript/ccg/ccg.h	162;"	d
oper_ST2	vascript/ccg/ccg.h	163;"	d
oper_STi	vascript/ccg/ccg.h	161;"	d
oper_eAX	vascript/ccg/ccg.h	156;"	d
oper_eBP	vascript/ccg/ccg.h	184;"	d
oper_eCX	vascript/ccg/ccg.h	157;"	d
oper_eDX	vascript/ccg/ccg.h	158;"	d
oper_eFlags	vascript/ccg/ccg.h	174;"	d
oper_imm8	vascript/ccg/ccg.h	154;"	d
oper_immWD	vascript/ccg/ccg.h	164;"	d
oper_immWDQ	vascript/ccg/ccg.h	165;"	d
oper_m14o28B	vascript/ccg/ccg.h	176;"	d
oper_m16int	vascript/ccg/ccg.h	170;"	d
oper_m32f	vascript/ccg/ccg.h	166;"	d
oper_m32int	vascript/ccg/ccg.h	167;"	d
oper_m64f	vascript/ccg/ccg.h	168;"	d
oper_m64int	vascript/ccg/ccg.h	169;"	d
oper_m64o16	vascript/ccg/ccg.h	178;"	d
oper_m80real	vascript/ccg/ccg.h	171;"	d
oper_m94o108B	vascript/ccg/ccg.h	177;"	d
oper_mDQ	vascript/ccg/ccg.h	181;"	d
oper_mm	vascript/ccg/ccg.h	159;"	d
oper_ooo	vascript/ccg/ccg.h	182;"	d
oper_r64o16	vascript/ccg/ccg.h	180;"	d
oper_relWD	vascript/ccg/ccg.h	183;"	d
oper_rm64o16	vascript/ccg/ccg.h	179;"	d
oper_xmm	vascript/ccg/ccg.h	155;"	d
operator !	opencv/include/cxoperations.hpp	/^static inline bool operator !(const Range& r)$/;"	f	namespace:cv
operator !=	opencv/include/cxmat.hpp	/^operator != (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator !=	opencv/include/cxmat.hpp	/^operator != (const Mat& a, double alpha)$/;"	f	namespace:cv
operator !=	opencv/include/cxmat.hpp	/^operator != (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv/include/cxmat.hpp	/^operator != (double alpha, const Mat& a)$/;"	f	namespace:cv
operator !=	opencv/include/cxmat.hpp	/^static inline bool operator != (const SparseMatConstIterator& it1, const SparseMatConstIterator& it2)$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^bool operator != (const Vec<T1, n>& a, const Vec<T1, n>& b)$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^static inline bool operator != (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^static inline bool operator != (const Range& r1, const Range& r2)$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline bool operator != (const SeqIterator<_Tp>& a,$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator != ( const Scalar_<_Tp>& a, const Scalar_<_Tp>& b )$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator != (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator !=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator != (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator !=	vascript/symbol.h	/^        bool operator !=(SymbolInfo& s){ return ((this->graph != s.graph)||(this->symbolID!=s.symbolID)||(this->type!=s.type));}$/;"	f	class:SymbolInfo
operator &	opencv/include/cxmat.hpp	/^operator & (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const MatExpr_<A, M>& a, const M& b)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const MatExpr_<A, M>& a, const MatExpr_<B, M>& b)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const MatExpr_<A, M>& a, const Scalar& s)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Scalar& s, const Mat& a)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Scalar& s, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator &	opencv/include/cxmat.hpp	/^operator & (const Scalar& s, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator &	opencv/include/cxoperations.hpp	/^static inline Range operator & (const Range& r1, const Range& r2)$/;"	f	namespace:cv
operator &	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp> operator & (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator &=	opencv/include/cxmat.hpp	/^operator &= (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator &=	opencv/include/cxmat.hpp	/^operator &= (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator &=	opencv/include/cxmat.hpp	/^operator &= (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator &=	opencv/include/cxmat.hpp	/^static inline Mat& operator &= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator &=	opencv/include/cxmat.hpp	/^static inline Mat& operator &= (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator &=	opencv/include/cxoperations.hpp	/^static inline Range& operator &= (Range& r1, const Range& r2)$/;"	f	namespace:cv
operator &=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp>& operator &= ( Rect_<_Tp>& a, const Rect_<_Tp>& b )$/;"	f	namespace:cv
operator ()	opencv/include/cvaux.hpp	/^        template<typename _Tp> bool operator ()(const Mat_<_Tp>& patch) const$/;"	f	struct:cv::FernClassifier::Feature
operator ()	opencv/include/cvwimage.h	/^    inline T* operator() (int c, int r)  {$/;"	f	class:cv::WImage
operator ()	opencv/include/cvwimage.h	/^    inline const T* operator() (int c, int r) const  {$/;"	f	class:cv::WImage
operator ()	opencv/include/cxmat.hpp	/^    M operator()( const Range& rowRange, const Range& colRange ) const$/;"	f	class:cv::MatExpr_
operator ()	opencv/include/cxmat.hpp	/^    M operator()( const Rect& roi ) const { return ((M)e)(roi); }$/;"	f	class:cv::MatExpr_
operator ()	opencv/include/cxmat.hpp	/^MatND_<_Tp>::operator()(const Range* ranges) const$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator()(const int* idx, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator()(int i0, int i1, int i2, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator()(int i0, int i1, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator()(int i0, size_t* hashval) const$/;"	f	class:cv::SparseMat_
operator ()	opencv/include/cxmat.hpp	/^inline Mat Mat::operator()( Range rowRange, Range colRange ) const$/;"	f	class:cv::Mat
operator ()	opencv/include/cxmat.hpp	/^inline Mat Mat::operator()( const Rect& roi ) const$/;"	f	class:cv::Mat
operator ()	opencv/include/cxmat.hpp	/^inline MatND MatND::operator()(const Range* ranges) const$/;"	f	class:cv::MatND
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::operator()( const Range& rowRange, const Range& colRange ) const$/;"	f	class:cv::Mat_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::operator()( const Rect& roi ) const$/;"	f	class:cv::Mat_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND_<_Tp>::operator ()(const int* idx)$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND_<_Tp>::operator ()(int i0)$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND_<_Tp>::operator ()(int i0, int i1)$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatND_<_Tp>::operator ()(int i0, int i1, int i2)$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& Mat_<_Tp>::operator ()(Point pt)$/;"	f	class:cv::Mat_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& Mat_<_Tp>::operator ()(int row, int col)$/;"	f	class:cv::Mat_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND_<_Tp>::operator ()(const int* idx) const$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND_<_Tp>::operator ()(int i0) const$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND_<_Tp>::operator ()(int i0, int i1) const$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& MatND_<_Tp>::operator ()(int i0, int i1, int i2) const$/;"	f	class:cv::MatND_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& Mat_<_Tp>::operator ()(Point pt) const$/;"	f	class:cv::Mat_
operator ()	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& Mat_<_Tp>::operator ()(int row, int col) const$/;"	f	class:cv::Mat_
operator ()	opencv/include/cxoperations.hpp	/^    Vector operator() (const Range& r) const { return Vector(*this, r); }$/;"	f	class:cv::Vector
operator ()	opencv/include/cxoperations.hpp	/^    bool operator()(const _Tp& a, const _Tp& b) const { return a < b; }$/;"	f	class:cv::LessThan
operator ()	opencv/include/cxoperations.hpp	/^    bool operator()(const _Tp& a, const _Tp& b) const { return a >= b; }$/;"	f	class:cv::GreaterEq
operator ()	opencv/include/cxoperations.hpp	/^    bool operator()(int a, int b) const { return arr[a] < arr[b]; }$/;"	f	class:cv::LessThanIdx
operator ()	opencv/include/cxoperations.hpp	/^    bool operator()(int a, int b) const { return arr[a] >= arr[b]; }$/;"	f	class:cv::GreaterEqIdx
operator ()	opencv/include/cxoperations.hpp	/^    void operator()(const vector<_Tp>& vec) const$/;"	f	class:cv::VecWriterProxy
operator ()	opencv/include/cxoperations.hpp	/^    void operator()(vector<_Tp>& vec, size_t count) const$/;"	f	class:cv::VecReaderProxy
operator *	opencv/include/cxcore.hpp	/^    CvFileStorage* operator *() { return fs; }$/;"	f	class:cv::FileStorage
operator *	opencv/include/cxcore.hpp	/^    const CvFileStorage* operator *() const { return fs; }$/;"	f	class:cv::FileStorage
operator *	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::operator *() const$/;"	f	class:cv::SparseMatConstIterator_
operator *	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::operator *() const$/;"	f	class:cv::SparseMatIterator_
operator *	opencv/include/cxmat.hpp	/^operator * ( const M& a, const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_ScaleAddS_<Mat> >, M>& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const M& a, const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_T_<Mat> >, M>& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const M& b, const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const Mat& a, const Mat& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<A, M>& a, const MatExpr_<B, M>& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_ScaleAddS_<Mat> >, M>& a, const M& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_ScaleAddS_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a, const M& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_T_<Mat> >, M>& a, const M& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_T_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<B, double, M, MatOp_Scale_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op2_<B, double, M, MatOp_T_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op4_<A, B, double, int, M, MatOp_MatMul_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const MatExpr_<MatExpr_Op6_<A, B, double, C,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( const Mat_<_Tp>& a, const Mat_<_Tp>& b )$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( double alpha, const MatExpr_<MatExpr_Op6_<A, B, double, C,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * ( double alpha,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const Mat& a, double alpha)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<A, M>& a, double alpha)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<MatExpr_Op2_<A, B, M, MatOp_Sub_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<MatExpr_Op2_<A, int, M, MatOp_Inv_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<MatExpr_Op4_<A, B, double, char, M, MatOp_MulDiv_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const MatExpr_<MatExpr_Op5_<A, double, B, double, double, M, MatOp_AddEx_<Mat> >, M>& a,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (const Mat_<_Tp>& a, double alpha)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (double alpha, const Mat& a)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (double alpha, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (double alpha, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (double alpha,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (double beta, const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^operator * (double beta,$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^static inline MatExpr_Initializer operator * (const MatExpr_Initializer& a, double alpha)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^static inline MatExpr_Initializer operator * (double alpha, MatExpr_Initializer& a)$/;"	f	namespace:cv
operator *	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> MatCommaInitializer_<_Tp>::operator *() const$/;"	f	class:cv::MatCommaInitializer_
operator *	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp MatConstIterator_<_Tp>::operator *() const { return *ptr; }$/;"	f	class:cv::MatConstIterator_
operator *	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatIterator_<_Tp>::operator *() const { return *(this->ptr); }$/;"	f	class:cv::MatIterator_
operator *	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator * (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator * (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator * (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^inline CvFileNode* FileNode::operator *() { return (CvFileNode*)node; }$/;"	f	class:cv::FileNode
operator *	opencv/include/cxoperations.hpp	/^inline FileNode FileNodeIterator::operator *() const$/;"	f	class:cv::FileNodeIterator
operator *	opencv/include/cxoperations.hpp	/^inline const CvFileNode* FileNode::operator* () const { return node; }$/;"	f	class:cv::FileNode
operator *	opencv/include/cxoperations.hpp	/^inline uchar* LineIterator::operator *() { return ptr; }$/;"	f	class:cv::LineIterator
operator *	opencv/include/cxoperations.hpp	/^operator * (_Tp alpha, const Vec<_Tp, cn>& a)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^operator * (const Vec<_Tp, cn>& a, _Tp alpha)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp& SeqIterator<_Tp>::operator *()$/;"	f	class:cv::SeqIterator
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline const _Tp& SeqIterator<_Tp>::operator *() const$/;"	f	class:cv::SeqIterator
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point3_<_Tp> operator * (_Tp a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point3_<_Tp> operator * (const Point3_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point_<_Tp> operator * (_Tp a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point_<_Tp> operator * (const Point_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp> operator * (_Tp alpha, const Scalar_<_Tp>& a)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp> operator * (const Scalar_<_Tp>& a, _Tp alpha)$/;"	f	namespace:cv
operator *	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Size_<_Tp> operator * (const Size_<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *=	opencv/include/cxmat.hpp	/^M& operator *= (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator *=	opencv/include/cxmat.hpp	/^M& operator *= (const M& a,$/;"	f	namespace:cv
operator *=	opencv/include/cxmat.hpp	/^Mat_<_Tp>& operator *= (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator *=	opencv/include/cxmat.hpp	/^static inline Mat& operator *= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator *=	opencv/include/cxmat.hpp	/^static inline Mat& operator *= (const Mat& a, double alpha)$/;"	f	namespace:cv
operator *=	opencv/include/cxoperations.hpp	/^Complex<_Tp>& operator *= (Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator *=	opencv/include/cxoperations.hpp	/^Vec<_Tp, 2>& operator *= (Vec<_Tp, 2>& a, _Tp alpha)$/;"	f	namespace:cv
operator *=	opencv/include/cxoperations.hpp	/^Vec<_Tp, 3>& operator *= (Vec<_Tp, 3>& a, _Tp alpha)$/;"	f	namespace:cv
operator *=	opencv/include/cxoperations.hpp	/^Vec<_Tp, 4>& operator *= (Vec<_Tp, 4>& a, _Tp alpha)$/;"	f	namespace:cv
operator *=	opencv/include/cxoperations.hpp	/^operator *= (Point_<_Tp>& a, _Tp b) { a.x *= b; a.y *= b; return a; }$/;"	f	namespace:cv
operator *=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp>& operator *= ( Scalar_<_Tp>& a, _Tp v )$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + ( const M& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + ( const MatExpr_<C, M>& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + ( const MatExpr_<MatExpr_Op2_<C, double, M, MatOp_Scale_<Mat> >, M>& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + ( const MatExpr_<MatExpr_Op2_<C, double, M, MatOp_T_<Mat> >, M>& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + ( const MatExpr_<MatExpr_Op4_<A, B, double, int, M, MatOp_MatMul_<Mat> >, M>& a,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const M& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatConstIterator_<_Tp>& a, int ofs)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<A, M>& a, const MatExpr_<B, M>& b )$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<A, M>& a, const Scalar& alpha)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<A, M>& a, double alpha)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<B, M>& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& b,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatExpr_<MatExpr_Op5_<A, double, B, double, double, M, MatOp_AddEx_<Mat> >, M>& a,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const MatIterator_<_Tp>& a, int ofs)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const Mat_<_Tp>& a, const Scalar& alpha)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const Mat_<_Tp>& a, double alpha)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const Scalar& alpha, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (const Scalar& alpha, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (double alpha, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (double alpha, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (double beta, const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (double beta,$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (int ofs, const MatConstIterator_<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxmat.hpp	/^operator + (int ofs, const MatIterator_<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator + (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator + (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator + (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^operator + (const Vec<_Tp, cn>& a, const Vec<_Tp, cn>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^static inline Range operator + (const Range& r1, int delta)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^static inline Range operator + (int delta, const Range& r1)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point3_<_Tp> operator + (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point_<_Tp> operator + (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp> operator + (const Rect_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp> operator + (const Rect_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp> operator + (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator +	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Size_<_Tp> operator + (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ++	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::operator ++()$/;"	f	class:cv::SparseMatConstIterator_
operator ++	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::SparseMatConstIterator_
operator ++	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::operator ++()$/;"	f	class:cv::SparseMatIterator_
operator ++	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::SparseMatIterator_
operator ++	opencv/include/cxmat.hpp	/^inline SparseMatConstIterator SparseMatConstIterator::operator ++(int)$/;"	f	class:cv::SparseMatConstIterator
operator ++	opencv/include/cxmat.hpp	/^inline SparseMatIterator SparseMatIterator::operator ++(int)$/;"	f	class:cv::SparseMatIterator
operator ++	opencv/include/cxmat.hpp	/^inline SparseMatIterator& SparseMatIterator::operator ++()$/;"	f	class:cv::SparseMatIterator
operator ++	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp> MatConstIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::MatConstIterator_
operator ++	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator ++()$/;"	f	class:cv::MatConstIterator_
operator ++	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp> MatIterator_<_Tp>::operator ++(int)$/;"	f	class:cv::MatIterator_
operator ++	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>& MatIterator_<_Tp>::operator ++()$/;"	f	class:cv::MatIterator_
operator ++	opencv/include/cxoperations.hpp	/^inline LineIterator LineIterator::operator ++(int)$/;"	f	class:cv::LineIterator
operator ++	opencv/include/cxoperations.hpp	/^inline LineIterator& LineIterator::operator ++()$/;"	f	class:cv::LineIterator
operator ++	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp> SeqIterator<_Tp>::operator ++(int) const$/;"	f	class:cv::SeqIterator
operator ++	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator ++()$/;"	f	class:cv::SeqIterator
operator +=	opencv/include/cxmat.hpp	/^M& operator += (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxmat.hpp	/^M& operator += (const M& a,$/;"	f	namespace:cv
operator +=	opencv/include/cxmat.hpp	/^Mat_<_Tp>& operator += (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxmat.hpp	/^Mat_<_Tp>& operator += (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator +=	opencv/include/cxmat.hpp	/^static inline Mat& operator += (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxmat.hpp	/^static inline Mat& operator += (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator +=	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator += (int ofs)$/;"	f	class:cv::MatConstIterator_
operator +=	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>& MatIterator_<_Tp>::operator += (int ofs)$/;"	f	class:cv::MatIterator_
operator +=	opencv/include/cxoperations.hpp	/^Complex<_Tp>& operator += (Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^Complex<_Tp>& operator += (Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^Vec<T1, 2>& operator += (Vec<T1, 2>& a, const Vec<T2, 2>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^Vec<T1, 3>& operator += (Vec<T1, 3>& a, const Vec<T2, 3>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^Vec<T1, 4>& operator += (Vec<T1, 4>& a, const Vec<T2, 4>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^operator += (Point3_<_Tp>& a, const Point3_<_Tp>& b) { a.x += b.x; a.y += b.y; a.z += b.z; return a; }$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^operator += (Point_<_Tp>& a, const Point_<_Tp>& b) { a.x += b.x; a.y += b.y; return a; }$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^operator += (Vec<_Tp1, cn>& a, const Vec<_Tp2, cn>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator +=(int delta)$/;"	f	class:cv::SeqIterator
operator +=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp>& operator += ( Rect_<_Tp>& a, const Point_<_Tp>& b )$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp>& operator += ( Rect_<_Tp>& a, const Size_<_Tp>& b )$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp>& operator += (Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator +=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Size_<_Tp>& operator += (Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ,	opencv/include/cxmat.hpp	/^MatCommaInitializer_<_Tp>::operator , (T2 v)$/;"	f	class:cv::MatCommaInitializer_
operator -	opencv/include/cxmat.hpp	/^operator - ( const M& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - ( const MatExpr_<C, M>& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - ( const MatExpr_<MatExpr_Op2_<C, double, M, MatOp_Scale_<Mat> >, M>& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - ( const MatExpr_<MatExpr_Op2_<C, double, M, MatOp_T_<Mat> >, M>& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - ( const MatExpr_<MatExpr_Op4_<A, B, double, int, M, MatOp_MatMul_<Mat> >, M>& a )$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - ( const MatExpr_<MatExpr_Op4_<A, B, double, int, M, MatOp_MatMul_<Mat> >, M>& a,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - ( const MatExpr_<MatExpr_Op6_<A, B, double, C,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const M& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const Mat& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatConstIterator_<_Tp>& a, int ofs)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatConstIterator_<_Tp>& b, const MatConstIterator_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<A, M>& a, const MatExpr_<B, M>& b )$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<A, M>& a, const Scalar& alpha)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<A, M>& a, double alpha)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<B, M>& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op2_<A, B, M, MatOp_Sub_<Mat> >, M>& a )$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& b,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op5_<A, double, B, double, double, M, MatOp_AddEx_<Mat> >, M>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatExpr_<MatExpr_Op5_<A, double, B, double, double, M, MatOp_AddEx_<Mat> >, M>& a,$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const MatIterator_<_Tp>& a, int ofs)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const Mat_<_Tp>& a, const Scalar& alpha)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (const Mat_<_Tp>& a, double alpha)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (double alpha, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (double alpha, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (double beta, const MatExpr_<MatExpr_Op3_<A, double, double, M, MatOp_ScaleAddS_<Mat> >, M>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxmat.hpp	/^operator - (double beta,$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator - (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator - (const Complex<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator - (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator - (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^operator - (const Vec<_Tp, cn>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^operator - (const Vec<_Tp, cn>& a, const Vec<_Tp, cn>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^static inline Range operator - (const Range& r1, int delta)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^static inline ptrdiff_t operator - (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline ptrdiff_t operator - (const SeqIterator<_Tp>& a,$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point3_<_Tp> operator - (const Point3_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point3_<_Tp> operator - (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point_<_Tp> operator - (const Point_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Point_<_Tp> operator - (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp> operator - (const Rect_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp> operator - (const Scalar_<_Tp>& a)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp> operator - (const Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator -	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Size_<_Tp> operator - (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator --	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp> MatConstIterator_<_Tp>::operator --(int)$/;"	f	class:cv::MatConstIterator_
operator --	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator --()$/;"	f	class:cv::MatConstIterator_
operator --	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp> MatIterator_<_Tp>::operator --(int)$/;"	f	class:cv::MatIterator_
operator --	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>& MatIterator_<_Tp>::operator --()$/;"	f	class:cv::MatIterator_
operator --	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp> SeqIterator<_Tp>::operator --(int) const$/;"	f	class:cv::SeqIterator
operator --	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator --()$/;"	f	class:cv::SeqIterator
operator -=	opencv/include/cxmat.hpp	/^M& operator -= (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator -=	opencv/include/cxmat.hpp	/^M& operator -= (const M& a,$/;"	f	namespace:cv
operator -=	opencv/include/cxmat.hpp	/^Mat_<_Tp>& operator -= (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv/include/cxmat.hpp	/^Mat_<_Tp>& operator -= (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator -=	opencv/include/cxmat.hpp	/^static inline Mat& operator -= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator -=	opencv/include/cxmat.hpp	/^static inline Mat& operator -= (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator -=	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatConstIterator_<_Tp>& MatConstIterator_<_Tp>::operator -= (int ofs)$/;"	f	class:cv::MatConstIterator_
operator -=	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>& MatIterator_<_Tp>::operator -= (int ofs)$/;"	f	class:cv::MatIterator_
operator -=	opencv/include/cxoperations.hpp	/^Complex<_Tp>& operator -= (Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^Complex<_Tp>& operator -= (Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^operator -= (Point3_<_Tp>& a, const Point3_<_Tp>& b) { a.x -= b.x; a.y -= b.y; a.z -= b.z; return a; }$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^operator -= (Point_<_Tp>& a, const Point_<_Tp>& b) { a.x -= b.x; a.y -= b.y; return a; }$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^operator -= (Vec<_Tp1, cn>& a, const Vec<_Tp2, cn>& b)$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline SeqIterator<_Tp>& SeqIterator<_Tp>::operator -=(int delta)$/;"	f	class:cv::SeqIterator
operator -=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp>& operator -= ( Rect_<_Tp>& a, const Point_<_Tp>& b )$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp>& operator -= ( Rect_<_Tp>& a, const Size_<_Tp>& b )$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Scalar_<_Tp>& operator -= (Scalar_<_Tp>& a, const Scalar_<_Tp>& b)$/;"	f	namespace:cv
operator -=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Size_<_Tp>& operator -= (Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ->	opencv/include/cxoperations.hpp	/^inline FileNode FileNodeIterator::operator ->() const$/;"	f	class:cv::FileNodeIterator
operator ->	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp* Ptr<_Tp>::operator -> () { return obj; }$/;"	f	class:cv::Ptr
operator ->	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline const _Tp* Ptr<_Tp>::operator -> () const { return obj; }$/;"	f	class:cv::Ptr
operator /	opencv/include/cxmat.hpp	/^operator \/ (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const M& a,$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const Mat& a, double alpha)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const MatExpr_<A, M>& a, const M& b)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const MatExpr_<A, M>& a, const MatExpr_<B, M>& b)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const MatExpr_<A, M>& a, double alpha)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const MatExpr_<A, M>& a,$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const MatExpr_<MatExpr_Op2_<A, double, M, MatOp_Scale_<Mat> >, M>& a,$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (const Mat_<_Tp>& a, double alpha)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (double alpha, const Mat& a)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (double alpha, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (double alpha, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator /	opencv/include/cxmat.hpp	/^operator \/ (double alpha,$/;"	f	namespace:cv
operator /	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator \/ (_Tp b, const Complex<_Tp>& a)$/;"	f	namespace:cv
operator /	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator \/ (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator /	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator \/ (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator /=	opencv/include/cxmat.hpp	/^static inline M& operator \/= (const M& a, const MatExpr_<MatExpr_Op2_<A, double,$/;"	f	namespace:cv
operator /=	opencv/include/cxmat.hpp	/^static inline Mat& operator \/= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator /=	opencv/include/cxmat.hpp	/^static inline Mat& operator \/= (const Mat& a, double alpha)$/;"	f	namespace:cv
operator /=	opencv/include/cxmat.hpp	/^static inline Mat_<_Tp>& operator \/= (const Mat_<_Tp>& a, double alpha)$/;"	f	namespace:cv
operator /=	opencv/include/cxoperations.hpp	/^Complex<_Tp> operator \/= (const Complex<_Tp>& a, _Tp b)$/;"	f	namespace:cv
operator /=	opencv/include/cxoperations.hpp	/^Complex<_Tp>& operator \/= (Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator <	opencv/include/cxmat.hpp	/^operator < (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator <	opencv/include/cxmat.hpp	/^operator < (const Mat& a, double alpha)$/;"	f	namespace:cv
operator <	opencv/include/cxmat.hpp	/^operator < (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator <	opencv/include/cxmat.hpp	/^operator < (double alpha, const Mat& a)$/;"	f	namespace:cv
operator <	opencv/include/cxoperations.hpp	/^static inline bool operator < (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator <<	opencv/include/cxmat.hpp	/^operator << (const Mat_<_Tp>& m, T2 val)$/;"	f	namespace:cv
operator <<	opencv/include/cxoperations.hpp	/^operator << ( FileStorage& fs, const vector<_Tp>& vec )$/;"	f	namespace:cv
operator <<	opencv/include/cxoperations.hpp	/^static inline FileStorage& operator << (FileStorage& fs, const char* str)$/;"	f	namespace:cv
operator <<	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline FileStorage& operator << (FileStorage& fs, const _Tp& value)$/;"	f	namespace:cv
operator <=	opencv/include/cxmat.hpp	/^operator <= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator <=	opencv/include/cxmat.hpp	/^operator <= (const Mat& a, double alpha)$/;"	f	namespace:cv
operator <=	opencv/include/cxmat.hpp	/^operator <= (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator <=	opencv/include/cxmat.hpp	/^operator <= (double alpha, const Mat& a)$/;"	f	namespace:cv
operator =	opencv/include/cvwimage.h	/^    WImageView& operator=(const WImage<T>& img) {$/;"	f	class:cv::WImageView
operator =	opencv/include/cvwimage.h	/^    WImageViewC& operator=(const WImageC<T, C>& img) {$/;"	f	class:cv::WImageViewC
operator =	opencv/include/cvwimage.h	/^    WImageViewC& operator=(const WImageViewC<T, C>& img) {$/;"	f	class:cv::WImageViewC
operator =	opencv/include/cxcore.h	/^    CvImage& operator = (const CvImage& img)$/;"	f	class:CvImage
operator =	opencv/include/cxcore.h	/^    CvMatrix& operator = (const CvMatrix& _m)$/;"	f	class:CvMatrix
operator =	opencv/include/cxcore.hpp	/^    Exception& operator = (const Exception& exc)$/;"	f	class:cv::Exception
operator =	opencv/include/cxmat.hpp	/^    MatConstIterator_<_Tp>::operator = (const MatConstIterator_& it )$/;"	f	class:cv::MatConstIterator_
operator =	opencv/include/cxmat.hpp	/^SparseMatConstIterator_<_Tp>::operator = (const SparseMatConstIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatConstIterator_
operator =	opencv/include/cxmat.hpp	/^SparseMatIterator_<_Tp>::operator = (const SparseMatIterator_<_Tp>& it)$/;"	f	class:cv::SparseMatIterator_
operator =	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator = (const Mat& m)$/;"	f	class:cv::SparseMat_
operator =	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator = (const MatND& m)$/;"	f	class:cv::SparseMat_
operator =	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator = (const SparseMat& m)$/;"	f	class:cv::SparseMat_
operator =	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator = (const SparseMat_<_Tp>& m)$/;"	f	class:cv::SparseMat_
operator =	opencv/include/cxmat.hpp	/^inline Mat& Mat::operator = (const Mat& m)$/;"	f	class:cv::Mat
operator =	opencv/include/cxmat.hpp	/^inline Mat& Mat::operator = (const MatExpr_Base& expr)$/;"	f	class:cv::Mat
operator =	opencv/include/cxmat.hpp	/^inline MatND& MatND::operator = (const MatND& m)$/;"	f	class:cv::MatND
operator =	opencv/include/cxmat.hpp	/^inline SparseMat& SparseMat::operator = (const Mat& m)$/;"	f	class:cv::SparseMat
operator =	opencv/include/cxmat.hpp	/^inline SparseMat& SparseMat::operator = (const MatND& m)$/;"	f	class:cv::SparseMat
operator =	opencv/include/cxmat.hpp	/^inline SparseMat& SparseMat::operator = (const SparseMat& m)$/;"	f	class:cv::SparseMat
operator =	opencv/include/cxmat.hpp	/^inline SparseMatConstIterator& SparseMatConstIterator::operator = (const SparseMatConstIterator& it)$/;"	f	class:cv::SparseMatConstIterator
operator =	opencv/include/cxmat.hpp	/^inline SparseMatIterator& SparseMatIterator::operator = (const SparseMatIterator& it)$/;"	f	class:cv::SparseMatIterator
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatIterator_<_Tp>& MatIterator_<_Tp>::operator = (const MatIterator_<_Tp>& it )$/;"	f	class:cv::MatIterator_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>& MatND_<_Tp>::operator = (const MatND& m)$/;"	f	class:cv::MatND_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>& MatND_<_Tp>::operator = (const MatND_<_Tp>& m)$/;"	f	class:cv::MatND_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatND_<_Tp>& MatND_<_Tp>::operator = (const _Tp& s)$/;"	f	class:cv::MatND_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>& Mat_<_Tp>::operator = (const Mat& m)$/;"	f	class:cv::Mat_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>& Mat_<_Tp>::operator = (const MatExpr_Base& e)$/;"	f	class:cv::Mat_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>& Mat_<_Tp>::operator = (const Mat_& m)$/;"	f	class:cv::Mat_
operator =	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>& Mat_<_Tp>::operator = (const _Tp& s)$/;"	f	class:cv::Mat_
operator =	opencv/include/cxoperations.hpp	/^    Vector<_Tp>& operator = (const Vector& d)$/;"	f	class:cv::Vector
operator =	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>& Point3_<_Tp>::operator = (const Point3_& pt)$/;"	f	class:cv::Point3_
operator =	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>& Point_<_Tp>::operator = (const Point_& pt)$/;"	f	class:cv::Point_
operator =	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>& Ptr<_Tp>::operator = (const Ptr<_Tp>& ptr)$/;"	f	class:cv::Ptr
operator =	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>& Rect_<_Tp>::operator = ( const Rect_<_Tp>& r )$/;"	f	class:cv::Rect_
operator =	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>& Size_<_Tp>::operator = (const Size_<_Tp>& sz)$/;"	f	class:cv::Size_
operator ==	opencv/include/cxmat.hpp	/^operator == (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxmat.hpp	/^operator == (const Mat& a, double alpha)$/;"	f	namespace:cv
operator ==	opencv/include/cxmat.hpp	/^operator == (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxmat.hpp	/^operator == (double alpha, const Mat& a)$/;"	f	namespace:cv
operator ==	opencv/include/cxmat.hpp	/^static inline bool operator == (const SparseMatConstIterator& it1, const SparseMatConstIterator& it2)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^bool operator == (const Complex<_Tp>& a, const Complex<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^bool operator == (const Vec<T1, n>& a, const Vec<T1, n>& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^static inline bool operator == (const FileNodeIterator& it1, const FileNodeIterator& it2)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^static inline bool operator == (const Range& r1, const Range& r2)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline bool operator == (const SeqIterator<_Tp>& a,$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator == ( const Scalar_<_Tp>& a, const Scalar_<_Tp>& b )$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator == (const Point3_<_Tp>& a, const Point3_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator == (const Point_<_Tp>& a, const Point_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator == (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator ==	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline bool operator == (const Size_<_Tp>& a, const Size_<_Tp>& b)$/;"	f	namespace:cv
operator ==	vascript/symbol.h	/^        bool operator ==(SymbolInfo& s){ return ((this->graph == s.graph)&&(this->symbolID==s.symbolID)&&(this->type==s.type));}$/;"	f	class:SymbolInfo
operator >	opencv/include/cxmat.hpp	/^operator > (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator >	opencv/include/cxmat.hpp	/^operator > (const Mat& a, double alpha)$/;"	f	namespace:cv
operator >	opencv/include/cxmat.hpp	/^operator > (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator >	opencv/include/cxmat.hpp	/^operator > (double alpha, const Mat& a)$/;"	f	namespace:cv
operator >=	opencv/include/cxmat.hpp	/^operator >= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator >=	opencv/include/cxmat.hpp	/^operator >= (const Mat& a, double alpha)$/;"	f	namespace:cv
operator >=	opencv/include/cxmat.hpp	/^operator >= (const MatConstIterator_<_Tp>& a, const MatConstIterator_<_Tp>& b)$/;"	f	namespace:cv
operator >=	opencv/include/cxmat.hpp	/^operator >= (double alpha, const Mat& a)$/;"	f	namespace:cv
operator >>	opencv/include/cxoperations.hpp	/^FileNodeIterator& operator >> (FileNodeIterator& it, vector<_Tp>& vec)$/;"	f	namespace:cv
operator >>	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline FileNodeIterator& operator >> (FileNodeIterator& it, _Tp& value)$/;"	f	namespace:cv
operator >>	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline void operator >> (const FileNode& n, _Tp& value)$/;"	f	namespace:cv
operator Complex<T2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename T2> inline Complex<_Tp>::operator Complex<T2>() const$/;"	f	class:cv::Complex
operator CvBox2D	opencv/include/cxoperations.hpp	/^inline RotatedRect::operator CvBox2D() const$/;"	f	class:cv::RotatedRect
operator CvMat	opencv/include/cxmat.hpp	/^inline Mat::operator CvMat() const$/;"	f	class:cv::Mat
operator CvMat	opencv/include/cxoperations.hpp	/^    operator CvMat() const$/;"	f	class:cv::Vector
operator CvMat*	opencv/include/cxcore.h	/^    operator CvMat* () { return matrix; }$/;"	f	class:CvMatrix
operator CvPoint	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::operator CvPoint() const$/;"	f	class:cv::Point_
operator CvPoint2D32f	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::operator CvPoint2D32f() const$/;"	f	class:cv::Point_
operator CvPoint3D32f	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::operator CvPoint3D32f() const$/;"	f	class:cv::Point3_
operator CvRect	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Rect_<_Tp>::operator CvRect() const$/;"	f	class:cv::Rect_
operator CvScalar	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline Vec<_Tp, cn>::operator CvScalar() const$/;"	f	class:cv::Vec
operator CvScalar	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Scalar_<_Tp>::operator CvScalar() const$/;"	f	class:cv::Scalar_
operator CvSize	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::operator CvSize() const$/;"	f	class:cv::Size_
operator CvSize2D32f	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp>::operator CvSize2D32f() const$/;"	f	class:cv::Size_
operator CvSlice	opencv/include/cxoperations.hpp	/^inline Range::operator CvSlice() const$/;"	f	class:cv::Range
operator CvSparseMat*	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::operator CvSparseMat*() const$/;"	f	class:cv::SparseMat_
operator CvTermCriteria	opencv/include/cxoperations.hpp	/^inline TermCriteria::operator CvTermCriteria() const$/;"	f	class:cv::TermCriteria
operator IplImage	opencv/include/cxmat.hpp	/^inline Mat::operator IplImage() const$/;"	f	class:cv::Mat
operator IplImage*	opencv/include/cxcore.h	/^    operator IplImage* () { return image; }$/;"	f	class:CvImage
operator M	opencv/include/cxmat.hpp	/^    operator M() const { M result; assignTo(result); return result; }$/;"	f	class:cv::MatExpr_Op1_
operator M	opencv/include/cxmat.hpp	/^    operator M() const { M result; assignTo(result); return result; }$/;"	f	class:cv::MatExpr_Op2_
operator M	opencv/include/cxmat.hpp	/^    operator M() const { M result; assignTo(result); return result; }$/;"	f	class:cv::MatExpr_Op3_
operator M	opencv/include/cxmat.hpp	/^    operator M() const { M result; assignTo(result); return result; }$/;"	f	class:cv::MatExpr_Op4_
operator M	opencv/include/cxmat.hpp	/^    operator M() const { M result; assignTo(result); return result; }$/;"	f	class:cv::MatExpr_Op5_
operator M	opencv/include/cxmat.hpp	/^    operator M() const { M result; assignTo(result); return result; }$/;"	f	class:cv::MatExpr_Op6_
operator M	opencv/include/cxmat.hpp	/^    operator M() const { return (M)e; }$/;"	f	class:cv::MatExpr_
operator MatExpr_<Mat, Mat>	opencv/include/cxmat.hpp	/^inline Mat::operator MatExpr_<Mat, Mat>() const$/;"	f	class:cv::Mat
operator MatExpr_<Mat_<_Tp>, Mat_<_Tp> >	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::operator MatExpr_<Mat_<_Tp>, Mat_<_Tp> >() const$/;"	f	class:cv::Mat_
operator MatND_<_Tp2>	opencv/include/cxmat.hpp	/^template<typename _Tp> template<typename _Tp2> inline MatND_<_Tp>::operator MatND_<_Tp2>() const$/;"	f	class:cv::MatND_
operator Mat_<T2>	opencv/include/cxmat.hpp	/^template<typename _Tp> template<typename T2> inline Mat_<_Tp>::operator Mat_<T2>() const$/;"	f	class:cv::Mat_
operator Mat_<_Tp>	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatCommaInitializer_<_Tp>::operator Mat_<_Tp>() const$/;"	f	class:cv::MatCommaInitializer_
operator Point3_<_Tp2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename _Tp2> inline Point3_<_Tp>::operator Point3_<_Tp2>() const$/;"	f	class:cv::Point3_
operator Point_<_Tp2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename _Tp2> inline Point_<_Tp>::operator Point_<_Tp2>() const$/;"	f	class:cv::Point_
operator Rect_<_Tp2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename _Tp2> inline Rect_<_Tp>::operator Rect_<_Tp2>() const$/;"	f	class:cv::Rect_
operator Scalar_<T2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename T2> inline Scalar_<_Tp>::operator Scalar_<T2>() const$/;"	f	class:cv::Scalar_
operator Size_<_Tp2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> template<typename _Tp2> inline Size_<_Tp>::operator Size_<_Tp2>() const$/;"	f	class:cv::Size_
operator Vec<T2, cn>	opencv/include/cxoperations.hpp	/^inline Vec<_Tp, cn>::operator Vec<T2, cn>() const$/;"	f	class:cv::Vec
operator Vec<_Tp, 2>	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp>::operator Vec<_Tp, 2>() const$/;"	f	class:cv::Point_
operator Vec<_Tp, 3>	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point3_<_Tp>::operator Vec<_Tp, 3>() const$/;"	f	class:cv::Point3_
operator []	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp MatConstIterator_<_Tp>::operator [](int i) const$/;"	f	class:cv::MatConstIterator_
operator []	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& MatIterator_<_Tp>::operator [](int i) const$/;"	f	class:cv::MatIterator_
operator []	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp* Mat_<_Tp>::operator [](int y)$/;"	f	class:cv::Mat_
operator []	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp* Mat_<_Tp>::operator [](int y) const$/;"	f	class:cv::Mat_
operator []	opencv/include/cxoperations.hpp	/^    _Tp& operator [] (size_t i) { CV_DbgAssert( i < size() ); return hdr.data[i]; }$/;"	f	class:cv::Vector
operator []	opencv/include/cxoperations.hpp	/^    const _Tp& operator [] (size_t i) const { CV_DbgAssert( i < size() ); return hdr.data[i]; }$/;"	f	class:cv::Vector
operator []	opencv/include/cxoperations.hpp	/^inline FileNode FileNode::operator[](const char* nodename) const$/;"	f	class:cv::FileNode
operator []	opencv/include/cxoperations.hpp	/^inline FileNode FileNode::operator[](const string& nodename) const$/;"	f	class:cv::FileNode
operator []	opencv/include/cxoperations.hpp	/^inline FileNode FileNode::operator[](int i) const$/;"	f	class:cv::FileNode
operator []	opencv/include/cxoperations.hpp	/^inline FileNode FileStorage::operator[](const char* nodename) const$/;"	f	class:cv::FileStorage
operator []	opencv/include/cxoperations.hpp	/^inline FileNode FileStorage::operator[](const string& nodename) const$/;"	f	class:cv::FileStorage
operator []	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline _Tp Vec<_Tp, cn>::operator [](int i) const { return val[i]; }$/;"	f	class:cv::Vec
operator []	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline _Tp& Vec<_Tp, cn>::operator[](int i) { return val[i]; }$/;"	f	class:cv::Vec
operator []	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline _Tp& Seq<_Tp>::operator [](int idx)$/;"	f	class:cv::Seq
operator []	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline const _Tp& Seq<_Tp>::operator [](int idx) const$/;"	f	class:cv::Seq
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const MatExpr_<A, M>& a, const M& b)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const MatExpr_<A, M>& a, const MatExpr_<B, M>& b)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const MatExpr_<A, M>& a, const Scalar& s)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Scalar& s, const Mat& a)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Scalar& s, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator ^	opencv/include/cxmat.hpp	/^operator ^ (const Scalar& s, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator ^=	opencv/include/cxmat.hpp	/^operator ^= (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator ^=	opencv/include/cxmat.hpp	/^operator ^= (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator ^=	opencv/include/cxmat.hpp	/^operator ^= (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator ^=	opencv/include/cxmat.hpp	/^static inline Mat& operator ^= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator ^=	opencv/include/cxmat.hpp	/^static inline Mat& operator ^= (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator _Tp*	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline AutoBuffer<_Tp, fixed_size>::operator _Tp* ()$/;"	f	class:cv::AutoBuffer
operator _Tp*	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>::operator _Tp* () { return obj; }$/;"	f	class:cv::Ptr
operator const CvMat*	opencv/include/cxcore.h	/^    operator const CvMat* () const { return matrix; }$/;"	f	class:CvMatrix
operator const IplImage*	opencv/include/cxcore.h	/^    operator const IplImage* () const { return image; }$/;"	f	class:CvImage
operator const _Tp*	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline AutoBuffer<_Tp, fixed_size>::operator const _Tp* () const$/;"	f	class:cv::AutoBuffer
operator const _Tp*	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>::operator const _Tp*() const { return obj; }$/;"	f	class:cv::Ptr
operator double	opencv/include/cxoperations.hpp	/^inline FileNode::operator double() const$/;"	f	class:cv::FileNode
operator double	opencv/include/cxoperations.hpp	/^inline RNG::operator double()$/;"	f	class:cv::RNG
operator float	opencv/include/cxoperations.hpp	/^inline FileNode::operator float() const$/;"	f	class:cv::FileNode
operator float	opencv/include/cxoperations.hpp	/^inline RNG::operator float() { return next()*2.3283064365386962890625e-10f; }$/;"	f	class:cv::RNG
operator int	opencv/include/cxoperations.hpp	/^inline FileNode::operator int() const$/;"	f	class:cv::FileNode
operator int	opencv/include/cxoperations.hpp	/^inline RNG::operator int() { return (int)next(); }$/;"	f	class:cv::RNG
operator schar	opencv/include/cxoperations.hpp	/^inline RNG::operator schar() { return (schar)next(); }$/;"	f	class:cv::RNG
operator short	opencv/include/cxoperations.hpp	/^inline RNG::operator short() { return (short)next(); }$/;"	f	class:cv::RNG
operator string	opencv/include/cxoperations.hpp	/^inline FileNode::operator string() const$/;"	f	class:cv::FileNode
operator uchar	opencv/include/cxoperations.hpp	/^inline RNG::operator uchar() { return (uchar)next(); }$/;"	f	class:cv::RNG
operator unsigned	opencv/include/cxoperations.hpp	/^inline RNG::operator unsigned() { return next(); }$/;"	f	class:cv::RNG
operator ushort	opencv/include/cxoperations.hpp	/^inline RNG::operator ushort() { return (ushort)next(); }$/;"	f	class:cv::RNG
operator vector<_Tp>	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp>::operator vector<_Tp>() const$/;"	f	class:cv::Mat_
operator vector<_Tp>	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Seq<_Tp>::operator vector<_Tp>() const$/;"	f	class:cv::Seq
operator |	opencv/include/cxmat.hpp	/^operator | (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const MatExpr_<A, M>& a, const M& b)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const MatExpr_<A, M>& a, const MatExpr_<B, M>& b)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const MatExpr_<A, M>& a, const Scalar& s)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Scalar& s, const Mat& a)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Scalar& s, const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator |	opencv/include/cxmat.hpp	/^operator | (const Scalar& s, const Mat_<_Tp>& a)$/;"	f	namespace:cv
operator |	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp> operator | (const Rect_<_Tp>& a, const Rect_<_Tp>& b)$/;"	f	namespace:cv
operator |=	opencv/include/cxmat.hpp	/^operator |= (const M& a, const MatExpr_<A, M>& b)$/;"	f	namespace:cv
operator |=	opencv/include/cxmat.hpp	/^operator |= (const Mat_<_Tp>& a, const Mat_<_Tp>& b)$/;"	f	namespace:cv
operator |=	opencv/include/cxmat.hpp	/^operator |= (const Mat_<_Tp>& a, const Scalar& s)$/;"	f	namespace:cv
operator |=	opencv/include/cxmat.hpp	/^static inline Mat& operator |= (const Mat& a, const Mat& b)$/;"	f	namespace:cv
operator |=	opencv/include/cxmat.hpp	/^static inline Mat& operator |= (const Mat& a, const Scalar& s)$/;"	f	namespace:cv
operator |=	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline Rect_<_Tp>& operator |= ( Rect_<_Tp>& a, const Rect_<_Tp>& b )$/;"	f	namespace:cv
operator ~	opencv/include/cxmat.hpp	/^operator ~ (const Mat& a)$/;"	f	namespace:cv
operator ~	opencv/include/cxmat.hpp	/^operator ~ (const MatExpr_<A, M>& a)$/;"	f	namespace:cv
operator ~	opencv/include/cxmat.hpp	/^operator ~ (const Mat_<_Tp>& a)$/;"	f	namespace:cv
operkind	vascript/ccg/ccg.h	148;"	d
oprand0	vascript/node.hxx	/^	AstExpression* oprand0;\/\/dest$/;"	m	class:AstOpExpr
oprand1	vascript/node.hxx	/^	AstExpression* oprand1;$/;"	m	class:AstOpExpr
oprand2	vascript/node.hxx	/^	AstExpression* oprand2;$/;"	m	class:AstOpExpr
opreg	vascript/ccg/opcodeDes.h	/^        Uchar opreg; 	\/\/ third 3-bit OPCODE or register$/;"	m	class:CCG::OpInfo
optimize	vascript/graph.cpp	/^void  FlowGraph::optimize(){$/;"	f	class:FlowGraph
ord	opencv/include/ml.h	/^        ord;$/;"	m	union:CvDTreeSplit::__anon50	typeref:struct:CvDTreeSplit::__anon50::__anon51
ord_var_count	opencv/include/ml.h	/^    int ord_var_count, cat_var_count, work_var_count;$/;"	m	struct:CvDTreeTrainData
origWinSize	opencv/include/cv.hpp	/^    Size origWinSize;$/;"	m	class:cv::CascadeClassifier
orig_response	opencv/include/ml.h	/^    CvMat* orig_response;$/;"	m	class:CvBoost
orig_window_size	opencv/include/cvtypes.h	/^    CvSize orig_window_size;$/;"	m	struct:CvHaarClassifierCascade
origin	opencv/include/cxcore.h	/^    int origin() const { return image ? image->origin : 0; }$/;"	f	class:CvImage
origin	opencv/include/cxtypes.h	/^    CvPoint  origin;$/;"	m	struct:CvChain
origin	opencv/include/cxtypes.h	/^    int  origin;            \/* 0 - top-left origin,$/;"	m	struct:_IplImage
other	opencv/include/cxcore.hpp	/^    template<typename U> class rebind { typedef Allocator<U> other; };$/;"	t	class:cv::Allocator::rebind
out	opencv/include/cvaux.hpp	/^    std::ostream* out;$/;"	m	class:cv::SpinImageModel
outFrame	vascript/node.hxx	/^	SymbolInfo  outFrame;$/;"	m	class:AstFilterState
p	opencv/include/cvaux.h	/^    CvPoint2D32f p; \/\/ pgruebele: So we do not loose precision, this needs to be float$/;"	m	struct:__anon107
p	opencv/include/cvaux.h	/^    CvPoint3D32f p;             \/\/ location of the tracked object$/;"	m	struct:__anon108
p	opencv/include/ml.h	/^    double      p; \/\/ for CV_SVM_EPS_SVR$/;"	m	struct:CvSVMParams
p1	opencv/include/cvtypes.h	/^    CvPoint p1;            \/* the first point of the binary tree root segment *\/$/;"	m	struct:CvContourTree
p2	opencv/include/cvtypes.h	/^    CvPoint p2;            \/* the last point of the binary tree root segment *\/$/;"	m	struct:CvContourTree
pBD	opencv/include/cvvidsurv.hpp	/^    CvBlobDetector*         pBD;           \/* Selected blob detector module. 					    *\/$/;"	m	struct:CvBlobTrackerAutoParam1
pBT	opencv/include/cvvidsurv.hpp	/^    CvBlobTracker*          pBT;           \/* Selected blob tracking module.					    *\/$/;"	m	struct:CvBlobTrackerAutoParam1
pBTA	opencv/include/cvvidsurv.hpp	/^    CvBlobTrackAnalysis*    pBTA;          \/* Selected blob trajectory analysis module.                             *\/$/;"	m	struct:CvBlobTrackerAutoParam1
pBTGen	opencv/include/cvvidsurv.hpp	/^    CvBlobTrackGen*         pBTGen;        \/* Selected blob trajectory generator.				    *\/$/;"	m	struct:CvBlobTrackerAutoParam1
pBTPP	opencv/include/cvvidsurv.hpp	/^    CvBlobTrackPostProc*    pBTPP;         \/* Selected blob trajectory postprocessing module.			    *\/$/;"	m	struct:CvBlobTrackerAutoParam1
pBlobSeq	opencv/include/cvvidsurv.hpp	/^    CvBlobSeq*  pBlobSeq;$/;"	m	struct:CvBlobTrack
pComment	opencv/include/cvvidsurv.hpp	/^    char*               pComment;$/;"	m	struct:CvDefParam
pDouble	opencv/include/cvvidsurv.hpp	/^    double*             pDouble;$/;"	m	struct:CvDefParam
pFG	opencv/include/cvvidsurv.hpp	/^    CvFGDetector*           pFG;           \/* FGDetector module. If this field is NULL the Process FG mask is used. *\/$/;"	m	struct:CvBlobTrackerAutoParam1
pFloat	opencv/include/cvvidsurv.hpp	/^    float*              pFloat;$/;"	m	struct:CvDefParam
pFrames	KeyBoard.cpp	/^IplImage* pFrames[nFrame_in_pool];$/;"	v
pFrames	global.cpp	/^IplImage* pFrames[nFrame_in_pool];$/;"	v
pImagePool	KeyBoard.cpp	/^IplImage* pImagePool[POOLSIZE] ;    $/;"	v
pImagePool	global.cpp	/^IplImage* pImagePool[POOLSIZE] ;    $/;"	v
pInt	opencv/include/cvvidsurv.hpp	/^    int*                pInt;$/;"	m	struct:CvDefParam
pName	opencv/include/cvvidsurv.hpp	/^    char*               pName;$/;"	m	struct:CvDefParam
pStr	opencv/include/cvvidsurv.hpp	/^    char**              pStr;$/;"	m	struct:CvDefParam
param	opencv/include/cv.hpp	/^    CvMat* param;$/;"	m	class:CvLevMarq
param	opencv/include/cvcompat.h	/^    CvScalar  param[2]; \/* parameters of RNG *\/$/;"	m	struct:CvRandState
parameter_list	vascript/vascript.y	/^parameter_list: type_specifier TK_IDENTIFIER {}$/;"	l
params	opencv/include/cvaux.h	/^    CvFGDStatModelParams   params;$/;"	m	struct:CvFGDStatModel
params	opencv/include/cvaux.h	/^    CvGaussBGStatModelParams   params;    $/;"	m	struct:CvGaussBGModel
params	opencv/include/ml.h	/^    CvANN_MLP_TrainParams params;$/;"	m	class:CvANN_MLP
params	opencv/include/ml.h	/^    CvBoostParams params;$/;"	m	class:CvBoost
params	opencv/include/ml.h	/^    CvDTreeParams params;$/;"	m	struct:CvDTreeTrainData
params	opencv/include/ml.h	/^    CvEMParams params;$/;"	m	class:CvEM
params	opencv/include/ml.h	/^    CvSVMParams params;$/;"	m	class:CvSVM
params	opencv/include/ml.h	/^    const CvSVMParams* params;$/;"	m	class:CvSVMSolver
params	opencv/include/ml.h	/^    const CvSVMParams* params;$/;"	m	struct:CvSVMKernel
parent	opencv/include/cvtypes.h	/^    int parent;$/;"	m	struct:CvHaarStageClassifier
parent	opencv/include/cxcore.h	/^CVAPI(CvMemStorage*)  cvCreateChildMemStorage( CvMemStorage* parent );$/;"	v
parent	opencv/include/cxtypes.h	/^    struct  CvMemStorage* parent; \/* We get new blocks from parent as needed. *\/$/;"	m	struct:CvMemStorage	typeref:struct:CvMemStorage::CvMemStorage
parent	opencv/include/ml.h	/^    CvDTreeNode* parent;$/;"	m	struct:CvDTreeNode
parent	vascript/graph.hxx	/^	FlowGraph *parent;$/;"	m	class:FlowGraph
parent	vascript/treeNode.h	/^    Node* parent(){return mParent;}$/;"	f	class:Node
parent	vascript/treeNode.h	/^    void parent(Node* o) { mParent = o;}$/;"	f	class:Node
parse	vascript/parserdriver.cpp	/^void vasParserDriver::parse()$/;"	f	class:vasParserDriver
parse	vascript/parserdriver.cpp	/^void vasParserDriver::parse(char* str)$/;"	f	class:vasParserDriver
parsefile	vascript/parserdriver.cpp	/^void vasParserDriver::parsefile(char* fn)$/;"	f	class:vasParserDriver
partition	opencv/include/cxoperations.hpp	/^partition( const vector<_Tp>& _vec, vector<int>& labels,$/;"	f	namespace:cv
pasm	vascript/ccg/ccg.cpp	/^InstructionCoder * const  pasm =  &m32;$/;"	m	namespace:CCG	file:
pasm	vascript/ccg/ccg.cpp	/^InstructionCoder * const pasm =  &m64;$/;"	m	namespace:CCG	file:
patchSize	opencv/include/cvaux.hpp	/^    Size patchSize;$/;"	m	class:cv::FernClassifier
perform_morphing	opencv/include/cvaux.h	/^    int    perform_morphing;	\/* Number of erode-dilate-erode foreground-blob cleanup iterations.						*\/$/;"	m	struct:CvFGDStatModelParams
pfunc	vascript/vacg.h	/^typedef void (*pfunc)();$/;"	t
phiMax	opencv/include/cvaux.hpp	/^    double phiMin, phiMax;$/;"	m	class:cv::PatchGenerator
phiMin	opencv/include/cvaux.hpp	/^    double phiMin, phiMax;$/;"	m	class:cv::PatchGenerator
pix	bmptest.cpp	6;"	d	file:
pix_size	opencv/include/cxcore.h	/^    int pix_size() const { return image ? ((image->depth & 255)>>3)*image->nChannels : 0; }$/;"	f	class:CvImage
pix_size	opencv/include/cxcore.h	/^    int pix_size() const { return matrix ? CV_ELEM_SIZE(matrix->type) : 0; }$/;"	f	class:CvMatrix
pixel_stat	opencv/include/cvaux.h	/^    CvBGPixelStat*         pixel_stat;$/;"	m	struct:CvFGDStatModel
planes	bmp.h	/^			unsigned short planes; $/;"	m	struct:__anon115::__anon116::__anon118
planes	bmp.h	/^	unsigned short planes;   \/*Specifies the number of planes for the target device. This value must be set to 1*\/$/;"	m	struct:__anon113
planes	opencv/include/cxcore.hpp	/^    vector<Mat> planes;$/;"	m	class:cv::NAryMatNDIterator
plusDelta	opencv/include/cxcore.hpp	/^    int minusDelta, plusDelta;$/;"	m	class:cv::LineIterator
plusStep	opencv/include/cxcore.hpp	/^    int minusStep, plusStep;$/;"	m	class:cv::LineIterator
plus_delta	opencv/include/cxtypes.h	/^    int  plus_delta;$/;"	m	struct:CvLineIterator
plus_step	opencv/include/cxtypes.h	/^    int  plus_step;$/;"	m	struct:CvLineIterator
pointer	opencv/include/cxcore.hpp	/^    typedef _Tp* pointer;$/;"	t	class:cv::MatIterator_
pointer	opencv/include/cxcore.hpp	/^    typedef value_type* pointer;$/;"	t	class:cv::Allocator
points	opencv/include/cv.h	/^CVAPI(CvBox2D) cvFitEllipse2( const CvArr* points );$/;"	v
points	opencv/include/cvaux.h	/^    CvPoint2D32f* points[MAX_CAMERAS];$/;"	m	class:CvCalibFilter
points	opencv/include/cvaux.hpp	/^    std::vector<CvFuzzyPoint> points;$/;"	m	class:CvFuzzyCurve
points	opencv/include/cvaux.hpp	/^    vector<Point3f> points;$/;"	m	class:cv::Octree
points	opencv/include/cxcore.hpp	/^    Mat points;$/;"	m	class:cv::KDTree
points	opencv/include/cxoperations.hpp	/^inline void RotatedRect::points(Point2f pt[]) const$/;"	f	class:cv::RotatedRect
pool	opencv/include/cxcore.hpp	/^        vector<uchar> pool;$/;"	m	struct:cv::SparseMat::Hdr
pop	vascript/graph.hxx	/^    static void pop(){ curRegion= curRegion->parent;}$/;"	f	class:FlowGraph
pop_back	opencv/include/cxoperations.hpp	/^    Vector<_Tp>& pop_back()$/;"	f	class:cv::Vector
pop_back	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::pop_back()$/;"	f	class:cv::Seq
pop_back	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::pop_back(_Tp* elem, size_t count)$/;"	f	class:cv::Seq
pop_front	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::pop_front()$/;"	f	class:cv::Seq
pop_front	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::pop_front(_Tp* elem, size_t count)$/;"	f	class:cv::Seq
portion	opencv/include/ml.h	/^        float *portion;$/;"	m	union:CvTrainTestSplit::__anon58
portion	opencv/include/ml.h	/^        float portion;$/;"	m	union:CvTrainTestSplit::__anon57
pos	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Point MatConstIterator_<_Tp>::pos() const$/;"	f	class:cv::MatConstIterator_
posit_object	opencv/include/cv.h	/^CVAPI(void)  cvReleasePOSITObject( CvPOSITObject**  posit_object );$/;"	v
posteriors	opencv/include/cvaux.hpp	/^    vector<float> posteriors;$/;"	m	class:cv::FernClassifier
ppFaceTracker	opencv/include/cvaux.h	/^CVAPI(void) cvReleaseFaceTracker(CvFaceTracker** ppFaceTracker);$/;"	v
pre0f	vascript/ccg/ccg.h	/^        Uchar pre0f;$/;"	m	class:CCG::Instr
pre1	vascript/ccg/ccg.h	/^        Uchar pre1;$/;"	m	class:CCG::Instr
pre2	vascript/ccg/ccg.h	/^        Uchar pre2;$/;"	m	class:CCG::Instr
pre3	vascript/ccg/ccg.h	/^        Uchar pre3;$/;"	m	class:CCG::Instr
pre4	vascript/ccg/ccg.h	/^        Uchar pre4;$/;"	m	class:CCG::Instr
preFilterCap	opencv/include/cv.h	/^    int preFilterCap; \/\/ the output of pre-filtering is clipped by [-preFilterCap,preFilterCap]$/;"	m	struct:CvStereoBMState
preFilterSize	opencv/include/cv.h	/^    int preFilterSize; \/\/ averaging window size: ~5x5..21x21$/;"	m	struct:CvStereoBMState
preFilterType	opencv/include/cv.h	/^    int preFilterType; \/\/ =CV_STEREO_BM_NORMALIZED_RESPONSE now$/;"	m	struct:CvStereoBMState
preFilteredImg0	opencv/include/cv.h	/^    CvMat* preFilteredImg0;$/;"	m	struct:CvStereoBMState
preFilteredImg1	opencv/include/cv.h	/^    CvMat* preFilteredImg1;$/;"	m	struct:CvStereoBMState
preFrame_symblinfo	vascript/symbol.h	105;"	d
preImage	mouse.cpp	/^IplImage *preImage = 0, *curImage=0;$/;"	v
preImageRaw	mouse.cpp	/^IplImage *preImageRaw = 0, *curImageRaw=0;$/;"	v
prePoint	mouse.cpp	/^CvPoint curPoint, prePoint;$/;"	v
preProcess	KeyBoard.cpp	/^void preProcess(IplImage *prv,IplImage *cur,IplImage *nxt,IplImage *wrt)$/;"	f
preProcess	dmvideo.cpp	/^void preProcess(IplImage *prv,IplImage *cur,IplImage *nxt,IplImage *wrt)$/;"	f
pred_float_buf	opencv/include/ml.h	/^    vector<vector<float> > pred_float_buf;$/;"	m	struct:CvDTreeTrainData
pred_int_buf	opencv/include/ml.h	/^    vector<vector<int> > pred_int_buf;$/;"	m	struct:CvDTreeTrainData
prefix	vascript/ccg/opcodeDes.h	/^        Uchar prefix;$/;"	m	class:CCG::OpInfo
prefix0F	vascript/ccg/opcodeDes.h	/^        Uchar prefix0F;$/;"	m	class:CCG::OpInfo
prefixLock	vascript/ccg/opcodeDes.h	/^        Uchar prefixLock;$/;"	m	class:CCG::OpInfo
prev	opencv/include/cxtypes.h	/^    struct CvMemBlock*  prev;$/;"	m	struct:CvMemBlock	typeref:struct:CvMemBlock::CvMemBlock
prev	opencv/include/cxtypes.h	/^    struct CvSeqBlock*  prev; \/* Previous sequence block.                   *\/$/;"	m	struct:CvSeqBlock	typeref:struct:CvSeqBlock::CvSeqBlock
prev	opencv/include/cxtypes.h	/^    struct CvTypeInfo* prev;$/;"	m	struct:CvTypeInfo	typeref:struct:CvTypeInfo::CvTypeInfo
prev	opencv/include/ml.h	/^    CvSVMKernelRow* prev;$/;"	m	struct:CvSVMKernelRow
prev	vascript/node.h	/^    Node* prev;$/;"	m	class:Node
prev	vascript/vastree.h	/^        node* prev;$/;"	m	class:node
prevErrNorm	opencv/include/cv.hpp	/^    double prevErrNorm, errNorm;$/;"	m	class:CvLevMarq
prevErrNorm	opencv/include/cvaux.hpp	/^    double prevErrNorm, errNorm;$/;"	m	class:cv::LevMarqSparse
prevP	opencv/include/cvaux.hpp	/^    CvMat* prevP; \/\/current already accepted parameter. $/;"	m	class:cv::LevMarqSparse
prevParam	opencv/include/cv.hpp	/^    CvMat* prevParam;$/;"	m	class:CvLevMarq
prev_frame	opencv/include/cvaux.h	/^    IplImage*              prev_frame;$/;"	m	struct:CvFGDStatModel
principal_point	opencv/include/cvaux.h	/^    CvPoint2D32f principal_point; \/* copied from intrinsics so this structure *\/$/;"	m	struct:__anon109
principal_point	opencv/include/cvaux.h	/^    CvPoint2D32f principal_point;$/;"	m	struct:__anon110
print	vascript/ccg/ccg.h	/^		void print()const {$/;"	f	class:CCG::MemMod
print	vascript/ccg/ccg.h	/^        void print(){$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/ccg.h	/^        void print(MN x, GPR dst){printf(" %-10s %-5s:", MNnames[x], regNames[dst]);}$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/ccg.h	/^        void print(MN x, GPR dst, GPR src){$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/ccg.h	/^        void print(MN x, GPR dst, I64 src){printf(" %-10s %-5s, %llx:", MNnames[x], regNames[dst], src);}$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/ccg.h	/^        void print(MN x, GPR dst, const MemMod& src){$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/ccg.h	/^        void print(MN x, I64 src){printf(" %-10s  %llx:", MNnames[x], src);}$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/ccg.h	/^        void print(MN x, const MemMod& dst, GPR src){$/;"	f	class:CCG::InstructionCoder
print	vascript/ccg/testccg.cpp	/^        void print(){ for(int i=0;i<len;i++) printf("%2x ", code[i]);}$/;"	f	class:OpCodeRef
printbmp	bmp.cpp	/^void printbmp(bmp_t * bmp)$/;"	f
priors	opencv/include/ml.h	/^    CvMat* priors;$/;"	m	struct:CvDTreeTrainData
priors	opencv/include/ml.h	/^    const float* priors;$/;"	m	struct:CvDTreeParams
priors_mult	opencv/include/ml.h	/^    CvMat* priors_mult;$/;"	m	struct:CvDTreeTrainData
probs	opencv/include/ml.h	/^    CvMat* probs;$/;"	m	class:CvEM
probs	opencv/include/ml.h	/^    const CvMat* probs;$/;"	m	struct:CvEMParams
proc	vascript/ccg/opcodeDes.h	/^        Uchar proc; 	\/\/ introduce with processor$/;"	m	class:CCG::OpInfo
process	opencv/include/cxmat.hpp	/^process( const Mat_<T1>& m1, Mat_<T2>& m2, Op op )$/;"	f	namespace:cv
process	opencv/include/cxmat.hpp	/^process( const Mat_<T1>& m1, const Mat_<T2>& m2, Mat_<T3>& m3, Op op )$/;"	f	namespace:cv
processFrame	dmvideo.cpp	/^void processFrame()$/;"	f
processNoiseCov	opencv/include/cv.hpp	/^    Mat processNoiseCov;    \/\/ process noise covariance matrix (Q)$/;"	m	class:cv::KalmanFilter
process_noise_cov	opencv/include/cvtypes.h	/^    CvMat* process_noise_cov;   \/* process noise covariance matrix (Q) *\/$/;"	m	struct:CvKalman
productsum	opencv/include/ml.h	/^    CvMat** productsum;$/;"	m	class:CvNormalBayesClassifier
program	vascript/vascript.y	/^program : statement_list 				{  \/*programGraph = $1;*\/}$/;"	l
programGraph	vascript/release/vasparser.cpp	/^FlowGraph* programGraph=rootRegion;$/;"	v
pruned_tree_idx	opencv/include/ml.h	/^    int pruned_tree_idx;$/;"	m	class:CvDTree
prv_frame	vascript/vacg.cpp	/^static const int prv_frame = PRV_FRAME;$/;"	v	file:
pt	opencv/include/cv.h	/^    CvPoint pt;$/;"	m	struct:CvStarKeypoint
pt	opencv/include/cv.h	/^    CvPoint2D32f pt;$/;"	m	struct:CvSURFPoint
pt	opencv/include/cv.hpp	/^    Point2f pt;$/;"	m	class:cv::KeyPoint
pt	opencv/include/cvtypes.h	/^    CvPoint   pt;$/;"	m	struct:CvChainPtReader
ptr	opencv/include/cxcore.h	/^    uchar* ptr[CV_MAX_ARR]; \/* pointers to the array slices *\/$/;"	m	struct:CvNArrayIterator
ptr	opencv/include/cxcore.hpp	/^    _Tp* ptr;$/;"	m	class:cv::AutoBuffer
ptr	opencv/include/cxcore.hpp	/^    _Tp* ptr;$/;"	m	class:cv::MatConstIterator_
ptr	opencv/include/cxcore.hpp	/^    uchar* ptr;$/;"	m	class:cv::LineIterator
ptr	opencv/include/cxcore.hpp	/^    uchar* ptr;$/;"	m	class:cv::SparseMatConstIterator
ptr	opencv/include/cxmat.hpp	/^inline const uchar* Mat::ptr(int y) const$/;"	f	class:cv::Mat
ptr	opencv/include/cxmat.hpp	/^inline const uchar* MatND::ptr(const int* idx) const$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline const uchar* MatND::ptr(int i0) const$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline const uchar* MatND::ptr(int i0, int i1) const$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline const uchar* MatND::ptr(int i0, int i1, int i2) const$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline uchar* Mat::ptr(int y)$/;"	f	class:cv::Mat
ptr	opencv/include/cxmat.hpp	/^inline uchar* MatND::ptr(const int* idx)$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline uchar* MatND::ptr(int i0)$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline uchar* MatND::ptr(int i0, int i1)$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^inline uchar* MatND::ptr(int i0, int i1, int i2)$/;"	f	class:cv::MatND
ptr	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp* Mat::ptr(int y)$/;"	f	class:cv::Mat
ptr	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp* Mat::ptr(int y) const$/;"	f	class:cv::Mat
ptr	opencv/include/cxtypes.h	/^        uchar* ptr;$/;"	m	union:CvMat::__anon31
ptr	opencv/include/cxtypes.h	/^        uchar* ptr;$/;"	m	union:CvMatND::__anon34
ptr	opencv/include/cxtypes.h	/^    CvPoint2D32f* ptr;$/;"	m	struct:CvGraphVtx2D
ptr	opencv/include/cxtypes.h	/^    char* ptr;$/;"	m	struct:CvString
ptr	opencv/include/cxtypes.h	/^    uchar* ptr;$/;"	m	struct:CvLineIterator
ptr	opencv/include/ml.h	/^        uchar** ptr;$/;"	m	union:CvVectors::__anon43
ptrLeft	opencv/include/cv.h	/^    CvMat* ptrLeft;$/;"	m	struct:CvStereoGCState
ptrRight	opencv/include/cv.h	/^    CvMat* ptrRight;$/;"	m	struct:CvStereoGCState
push	vascript/graph.hxx	/^    void push(){$/;"	f	class:FlowGraph
push_arg	vascript/vacg.h	/^    void push_arg(u8*& f){$/;"	f	class:VaVar
push_back	opencv/include/cxoperations.hpp	/^    Vector<_Tp>& push_back(const _Tp& elem)$/;"	f	class:cv::Vector
push_back	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::push_back(const _Tp& elem)$/;"	f	class:cv::Seq
push_back	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::push_back(const _Tp* elem, size_t count)$/;"	f	class:cv::Seq
push_frame	vascript/vacg.h	/^    void push_frame(u8*& f){$/;"	f	class:VaVar
push_front	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::push_front(const _Tp& elem)$/;"	f	class:cv::Seq
push_front	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::push_front(const _Tp* elem, size_t count)$/;"	f	class:cv::Seq
push_imm	vascript/vacg.h	/^    void push_imm(u8*& f){}$/;"	f	class:VaVar
push_ref	vascript/vacg.h	/^    void push_ref(u8*& f){code_pushVarible(f, (void*)var);}$/;"	f	class:VaVar
pvoid	vascript/vacg.h	/^typedef void* pvoid;$/;"	t
q	vascript/ccg/ccg.h	/^            I64 q;$/;"	m	union:CCG::Imm::__anon161
quad	opencv/include/cvaux.h	/^    CvPoint2D32f quad[2][4]; \/* coordinates of destination quadrangle after$/;"	m	struct:CvStereoCamera
quality	opencv/include/ml.h	/^    float quality;$/;"	m	struct:CvDTreeSplit
query	opencv/include/cvaux.hpp	/^    float query( int* bin ) const$/;"	f	class:CvCamShiftTracker
r	opencv/include/cvtypes.h	/^        CvRect r;$/;"	m	struct:CvHaarFeature::__anon38
r	opencv/include/ml.h	/^    double r;   \/\/ for Solver_NU$/;"	m	struct:CvSVMSolutionInfo
rGroup	vascript/ccg/ccg.h	/^}rGroup;$/;"	t	namespace:CCG	typeref:enum:CCG::__anon148
radius	opencv/include/cvaux.hpp	/^    int radius;$/;"	m	class:cv::LDetector
randn	opencv/include/cxcore.hpp	/^static inline void randn(Mat& dst, const Scalar& mean, const Scalar& stddev)$/;"	f	namespace:cv
randomBlur	opencv/include/cvaux.hpp	/^    bool randomBlur;$/;"	m	class:cv::PatchGenerator
randu	opencv/include/cxcore.hpp	/^static inline void randu(Mat& dst, const Scalar& low, const Scalar& high)$/;"	f	namespace:cv
randu	opencv/include/cxcore.hpp	/^template<typename _Tp> static inline _Tp randu() { return (_Tp)theRNG(); }$/;"	f	namespace:cv
re	opencv/include/cxcore.hpp	/^    _Tp re, im;$/;"	m	class:cv::Complex
read	opencv/include/cxoperations.hpp	/^read( FileNode& node, vector<_Tp>& vec, const vector<_Tp>& default_value=vector<_Tp>() )$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^read( FileNodeIterator& it, vector<_Tp>& vec, size_t maxCount=(size_t)INT_MAX )$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, bool& value, bool default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, double& value, double default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, float& value, float default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, int& value, int default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, schar& value, schar default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, short& value, short default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, string& value, const string& default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, uchar& value, uchar default_value)$/;"	f	namespace:cv
read	opencv/include/cxoperations.hpp	/^static inline void read(const FileNode& node, ushort& value, ushort default_value)$/;"	f	namespace:cv
read	opencv/include/cxtypes.h	/^    CvReadFunc read;$/;"	m	struct:CvTypeInfo
readRaw	opencv/include/cxoperations.hpp	/^inline void FileNode::readRaw( const string& fmt, uchar* vec, size_t len ) const$/;"	f	class:cv::FileNode
read_bmp	bmp.cpp	/^__inline__ unsigned char* read_bmp(char * filename, bmp_t* bmp )$/;"	f
reader	opencv/include/cv.h	/^CVAPI(CvPoint) cvReadChainPoint( CvChainPtReader* reader );$/;"	v
reader	opencv/include/cxcore.h	/^CVAPI(int)  cvGetSeqReaderPos( CvSeqReader* reader );$/;"	v
reader	opencv/include/cxcore.hpp	/^    CvSeqReader reader;$/;"	m	class:cv::FileNodeIterator
realWidth	bmp.h	/^inline int realWidth(int width){ return (( width %4)?(( width+4) &(~3)) : width);}$/;"	f
realWidth	bmp.h	/^inline size_t realWidth(size_t w){$/;"	f
real_window_size	opencv/include/cvtypes.h	/^    CvSize real_window_size;$/;"	m	struct:CvHaarClassifierCascade
rebind	opencv/include/cxcore.hpp	/^    template<typename U> class rebind { typedef Allocator<U> other; };$/;"	c	class:cv::Allocator
rect	opencv/include/cvtypes.h	/^    CvRect rect;    \/* ROI of the component  *\/$/;"	m	struct:CvConnectedComp
rect	opencv/include/cvtypes.h	/^    CvRect rect;$/;"	m	struct:CvAvgComp
rect	opencv/include/cvtypes.h	/^    } rect[CV_HAAR_FEATURE_MAX];$/;"	m	struct:CvHaarFeature	typeref:struct:CvHaarFeature::__anon38
rectMap	opencv/include/cvaux.h	/^    CvMat*  rectMap[MAX_CAMERAS][2];$/;"	m	class:CvCalibFilter
ref	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::ref(const int* idx, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::ref(int i0, int i1, int i2, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::ref(int i0, int i1, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv/include/cxmat.hpp	/^SparseMat_<_Tp>::ref(int i0, size_t* hashval)$/;"	f	class:cv::SparseMat_
ref	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& SparseMat::ref(const int* idx, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& SparseMat::ref(int i0, int i1, int i2, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& SparseMat::ref(int i0, int i1, size_t* hashval)$/;"	f	class:cv::SparseMat
ref	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& SparseMat::ref(int i0, size_t* hashval)$/;"	f	class:cv::SparseMat
refDefault	vascript/ccg/testccg.cpp	/^OpCodeRef refDefault;$/;"	v
refcount	opencv/include/cxcore.h	/^    int* refcount;$/;"	m	class:CvImage
refcount	opencv/include/cxcore.hpp	/^        int refcount;$/;"	m	struct:cv::SparseMat::Hdr
refcount	opencv/include/cxcore.hpp	/^    int* refcount;$/;"	m	class:cv::Mat
refcount	opencv/include/cxcore.hpp	/^    int* refcount;$/;"	m	class:cv::MatND
refcount	opencv/include/cxcore.hpp	/^    int* refcount;$/;"	m	class:cv::Ptr
refcount	opencv/include/cxoperations.hpp	/^        int* refcount;$/;"	m	struct:cv::Vector::Hdr
refcount	opencv/include/cxtypes.h	/^    int* refcount;$/;"	m	struct:CvMat
refcount	opencv/include/cxtypes.h	/^    int* refcount;$/;"	m	struct:CvMatND
refcount	opencv/include/cxtypes.h	/^    int* refcount;$/;"	m	struct:CvSparseMat
reference	opencv/include/cxcore.hpp	/^    typedef _Tp& reference;$/;"	t	class:cv::MatIterator_
reference	opencv/include/cxcore.hpp	/^    typedef value_type& reference;$/;"	t	class:cv::Allocator
reference	opencv/include/cxoperations.hpp	/^    typedef _Tp& reference;$/;"	t	class:cv::Vector
reg	vascript/ccg/opcodeDes.h	/^                unsigned int reg:3;$/;"	m	struct:CCG::OPC1::__anon130::__anon132
reg16	vascript/ccg/ccg.h	/^	regW = 1,    	reg16 = 1,$/;"	e	enum:CCG::__anon148
reg8	vascript/ccg/ccg.h	/^	regL = 0,    	reg8 = 0, $/;"	e	enum:CCG::__anon148
regE	vascript/ccg/ccg.h	/^	regE = 2,$/;"	e	enum:CCG::__anon148
regL	vascript/ccg/ccg.h	/^	regL = 0,    	reg8 = 0, $/;"	e	enum:CCG::__anon148
regNames	vascript/ccg/ccg.h	/^static const char* regNames[]={$/;"	m	namespace:CCG
regR	vascript/ccg/ccg.h	/^	regR = 3,$/;"	e	enum:CCG::__anon148
regRext	vascript/ccg/ccg.h	/^	regRext=4,$/;"	e	enum:CCG::__anon148
regSt	vascript/ccg/ccg.h	/^	regSt=7$/;"	e	enum:CCG::__anon148
regType	vascript/ccg/ccg.h	/^        ModRM regType;$/;"	m	class:CCG::MemMod
regW	vascript/ccg/ccg.h	/^	regW = 1,    	reg16 = 1,$/;"	e	enum:CCG::__anon148
regX	vascript/ccg/ccg.h	/^	regX = 5,$/;"	e	enum:CCG::__anon148
regXext	vascript/ccg/ccg.h	/^	regXext=6,$/;"	e	enum:CCG::__anon148
regop_	vascript/ccg/opcodeDes.h	105;"	d
regop_0	vascript/ccg/opcodeDes.h	97;"	d
regop_1	vascript/ccg/opcodeDes.h	98;"	d
regop_2	vascript/ccg/opcodeDes.h	99;"	d
regop_3	vascript/ccg/opcodeDes.h	100;"	d
regop_4	vascript/ccg/opcodeDes.h	101;"	d
regop_5	vascript/ccg/opcodeDes.h	102;"	d
regop_6	vascript/ccg/opcodeDes.h	103;"	d
regop_7	vascript/ccg/opcodeDes.h	104;"	d
regop_r	vascript/ccg/opcodeDes.h	95;"	d
regop_s	vascript/ccg/opcodeDes.h	96;"	d
regression	opencv/include/ml.h	/^    bool regression;$/;"	m	class:CvKNearest
regression_accuracy	opencv/include/ml.h	/^    float regression_accuracy;$/;"	m	struct:CvDTreeParams
release	opencv/include/cxcore.h	/^    void release() { detach(); }$/;"	f	class:CvImage
release	opencv/include/cxcore.h	/^    void release()$/;"	f	class:CvMatrix
release	opencv/include/cxmat.hpp	/^inline void Mat::release()$/;"	f	class:cv::Mat
release	opencv/include/cxmat.hpp	/^inline void MatND::release()$/;"	f	class:cv::MatND
release	opencv/include/cxmat.hpp	/^inline void SparseMat::release()$/;"	f	class:cv::SparseMat
release	opencv/include/cxoperations.hpp	/^    void release()$/;"	f	class:cv::Vector
release	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Ptr<_Tp>::release()$/;"	f	class:cv::Ptr
release	opencv/include/cxtypes.h	/^    CvReleaseFunc release;$/;"	m	struct:CvTypeInfo
release_function	vascript/vacg.h	/^inline void release_function(void*& f, size_t size = 1024){$/;"	f
remaining	opencv/include/cxcore.hpp	/^    size_t remaining;$/;"	m	class:cv::FileNodeIterator
remove	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::remove(const Range& r)$/;"	f	class:cv::Seq
remove	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void Seq<_Tp>::remove(int idx)$/;"	f	class:cv::Seq
removeDS	vascript/ccg/parseCoderHtml.cpp	/^void removeDS(char* psrc, char* pdst)$/;"	f
removeSpace	vascript/ccg/parseCoderHtml.cpp	/^void removeSpace(char* psrc, char* pdst)$/;"	f
removeTag	vascript/ccg/parseCoderHtml.cpp	/^void removeTag(char* p)$/;"	f
repeat	opencv/include/cxcore.hpp	/^static inline Mat repeat(const Mat& src, int ny, int nx)$/;"	f	namespace:cv
replace	vascript/symbol.h	/^            Symbol* replace;$/;"	m	union:Symbol::__anon126
replaceStr	vascript/ccg/parseCoderHtml.cpp	/^void replaceStr(char* psrc, char* s, char* replaceto)$/;"	f
reserve	opencv/include/cxoperations.hpp	/^    void reserve(size_t newCapacity)$/;"	f	class:cv::Vector
reserve	vascript/ccg/ccg.h	/^				unsigned int reserve:4;$/;"	m	struct:CCG::REX::__anon151::__anon152
reserved1	bmp.h	/^			unsigned short reserved1; $/;"	m	struct:__anon115::__anon116::__anon118
reserved1	bmp.h	/^	unsigned short reserved1; \/**\/$/;"	m	struct:__anon112
reserved2	bmp.h	/^			unsigned short reserved2; $/;"	m	struct:__anon115::__anon116::__anon118
reserved2	bmp.h	/^	unsigned short reserved2; \/**\/$/;"	m	struct:__anon112
reset	vascript/vacg.h	/^        void reset(){}$/;"	f	class:vaCG
resetRex	vascript/ccg/ccg.h	/^		void resetRex(){rex.init();} $/;"	f	class:CCG::MemMod
reset_roi	opencv/include/cxcore.h	/^    void reset_roi() { cvResetImageROI(image); }$/;"	f	class:CvImage
reshape	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::reshape(int _rows) const$/;"	f	class:cv::Mat_
resize	opencv/include/cxoperations.hpp	/^    void resize(size_t newSize)$/;"	f	class:cv::Vector
resolution	opencv/include/cvaux.hpp	/^    float resolution;    $/;"	m	class:cv::Mesh3D
resp_float_buf	opencv/include/ml.h	/^    vector<vector<float> > resp_float_buf;$/;"	m	struct:CvDTreeTrainData
resp_int_buf	opencv/include/ml.h	/^    vector<vector<int> > resp_int_buf;$/;"	m	struct:CvDTreeTrainData
response	opencv/include/cv.h	/^    float response;$/;"	m	struct:CvStarKeypoint
response	opencv/include/cv.hpp	/^    float response;$/;"	m	class:cv::KeyPoint
response	opencv/include/cvvidsurv.hpp	/^    float response;$/;"	m	struct:CvDetectedBlob
responseThreshold	opencv/include/cv.h	/^    int responseThreshold;$/;"	m	struct:CvStarDetectorParams
response_idx	opencv/include/ml.h	/^    int response_idx;$/;"	m	class:CvMLData
response_out	opencv/include/ml.h	/^    CvMat* response_out; \/\/ header$/;"	m	class:CvMLData
responses	opencv/include/ml.h	/^    const CvMat* responses;$/;"	m	struct:CvDTreeTrainData
responses_copy	opencv/include/ml.h	/^    CvMat* responses_copy; \/\/ used in Boosting$/;"	m	struct:CvDTreeTrainData
rex	vascript/ccg/ccg.h	/^		REX rex;$/;"	m	class:CCG::MemMod
rex	vascript/ccg/ccg.h	/^        Uchar rex;$/;"	m	class:CCG::Instr
rgb	transColor.cpp	/^    RGB24_t rgb;$/;"	m	struct:dmFrameSimple::_gray2rgb_t	file:
rgb_t	bmp.h	/^} rgb_t;$/;"	t	typeref:struct:__anon114
rho	opencv/include/ml.h	/^    double rho;$/;"	m	struct:CvSVMDecisionFunc
rho	opencv/include/ml.h	/^    double rho;$/;"	m	struct:CvSVMSolutionInfo
rhv	vascript/node.hxx	/^	AstExpression* rhv;$/;"	m	class:AstAssginState
right	opencv/include/cv.h	/^    CvMat* right;$/;"	m	struct:CvStereoGCState
right	opencv/include/cv.hpp	/^        int right;$/;"	m	struct:cv::CascadeClassifier::DTreeNode
right	opencv/include/cvtypes.h	/^    int* right;$/;"	m	struct:CvHaarClassifier
right	opencv/include/cxcore.hpp	/^        int left, right;    \/\/ node indices of left and right branches$/;"	m	struct:cv::KDTree::Node
right	opencv/include/ml.h	/^    CvDTreeNode* right;$/;"	m	struct:CvDTreeNode
ringBuf	opencv/include/cv.hpp	/^    vector<uchar> ringBuf;$/;"	m	class:cv::FilterEngine
ringLevel	vascript/ccg/opcodeDes.h	/^        Uchar ringLevel;$/;"	m	class:CCG::OpInfo
rm	vascript/ccg/ccg.h	/^        Uchar rm;$/;"	m	class:CCG::Instr
rmEdgeDensityFuzzy	opencv/include/cvaux.hpp	/^		rmEdgeDensityFuzzy		= 1,$/;"	e	enum:CvFuzzyMeanShiftTracker::ResizeMethod
rmEdgeDensityLinear	opencv/include/cvaux.hpp	/^		rmEdgeDensityLinear		= 0,$/;"	e	enum:CvFuzzyMeanShiftTracker::ResizeMethod
rmInnerDensity	opencv/include/cvaux.hpp	/^		rmInnerDensity			= 2$/;"	e	enum:CvFuzzyMeanShiftTracker::ResizeMethod
rng	opencv/include/ml.h	/^    CvRNG rng;$/;"	m	class:CvANN_MLP
rng	opencv/include/ml.h	/^    CvRNG rng;$/;"	m	class:CvMLData
rng	opencv/include/ml.h	/^    CvRNG rng;$/;"	m	class:CvRTrees
rng	opencv/include/ml.h	/^    CvRNG rng;$/;"	m	struct:CvDTreeTrainData
roi	opencv/include/cv.hpp	/^    Rect roi;$/;"	m	class:cv::FilterEngine
roi	opencv/include/cxcore.h	/^    CvRect roi() const$/;"	f	class:CvImage
roi	opencv/include/cxtypes.h	/^    struct _IplROI *roi;    \/* Image ROI. If NULL, the whole image is selected. *\/$/;"	m	struct:_IplImage	typeref:struct:_IplImage::_IplROI
roi_row	opencv/include/cxcore.h	/^    const uchar* roi_row(int y) const$/;"	f	class:CvImage
roi_row	opencv/include/cxcore.h	/^    uchar* roi_row(int y)$/;"	f	class:CvImage
roi_size	opencv/include/cxcore.h	/^    CvSize roi_size() const$/;"	f	class:CvImage
root	opencv/include/ml.h	/^    CvDTreeNode* root;$/;"	m	class:CvDTree
rootRegion	vascript/node.cpp	/^FlowGraph* rootRegion=NULL;$/;"	v
rotMatr	opencv/include/cvaux.h	/^    float   rotMatr[9];$/;"	m	struct:CvCamera
rotMatrix	opencv/include/cvaux.h	/^    float rotMatrix[9];$/;"	m	struct:CvStereoCamera
row	opencv/include/cxcore.h	/^    const uchar* row(int i) const$/;"	f	class:CvMatrix
row	opencv/include/cxcore.h	/^    uchar* row(int i) { return !matrix ? 0 : matrix->data.ptr + i*matrix->step; }$/;"	f	class:CvMatrix
row	opencv/include/cxmat.hpp	/^    M row(int y) const { return ((M)e).row(y); }$/;"	f	class:cv::MatExpr_
row	opencv/include/cxmat.hpp	/^inline Mat Mat::row(int y) const { return Mat(*this, Range(y, y+1), Range::all()); }$/;"	f	class:cv::Mat
row	opencv/include/cxmat.hpp	/^template<typename _Tp> inline Mat_<_Tp> Mat_<_Tp>::row(int y) const$/;"	f	class:cv::Mat_
rowBorderType	opencv/include/cv.hpp	/^    int rowBorderType, columnBorderType;$/;"	m	class:cv::FilterEngine
rowCount	opencv/include/cv.hpp	/^    int bufStep, startY, startY0, endY, rowCount, dstY;$/;"	m	class:cv::FilterEngine
rowFilter	opencv/include/cv.hpp	/^    Ptr<BaseRowFilter> rowFilter;$/;"	m	class:cv::FilterEngine
rowRange	opencv/include/cxmat.hpp	/^inline Mat Mat::rowRange(const Range& r) const$/;"	f	class:cv::Mat
rowRange	opencv/include/cxmat.hpp	/^inline Mat Mat::rowRange(int startrow, int endrow) const$/;"	f	class:cv::Mat
rows	opencv/include/cv.hpp	/^    vector<uchar*> rows;$/;"	m	class:cv::FilterEngine
rows	opencv/include/cxcore.h	/^    int rows() const { return matrix ? matrix->rows : 0; }$/;"	f	class:CvMatrix
rows	opencv/include/cxcore.hpp	/^    int rows, cols;$/;"	m	class:cv::Mat
rows	opencv/include/cxtypes.h	/^        int rows;$/;"	m	union:CvMat::__anon32
rows	opencv/include/cxtypes.h	/^    int rows;$/;"	m	struct:CvMat
rows	opencv/include/ml.h	/^    CvSVMKernelRow* rows;$/;"	m	class:CvSVMSolver
rp_dw0	opencv/include/ml.h	/^    double rp_dw0, rp_dw_plus, rp_dw_minus, rp_dw_min, rp_dw_max;$/;"	m	struct:CvANN_MLP_TrainParams
rp_dw_max	opencv/include/ml.h	/^    double rp_dw0, rp_dw_plus, rp_dw_minus, rp_dw_min, rp_dw_max;$/;"	m	struct:CvANN_MLP_TrainParams
rp_dw_min	opencv/include/ml.h	/^    double rp_dw0, rp_dw_plus, rp_dw_minus, rp_dw_min, rp_dw_max;$/;"	m	struct:CvANN_MLP_TrainParams
rp_dw_minus	opencv/include/ml.h	/^    double rp_dw0, rp_dw_plus, rp_dw_minus, rp_dw_min, rp_dw_max;$/;"	m	struct:CvANN_MLP_TrainParams
rp_dw_plus	opencv/include/ml.h	/^    double rp_dw0, rp_dw_plus, rp_dw_minus, rp_dw_min, rp_dw_max;$/;"	m	struct:CvANN_MLP_TrainParams
rules	opencv/include/cvaux.hpp	/^    std::vector<CvFuzzyRule*> rules;$/;"	m	class:CvFuzzyController
s	opencv/include/cvaux.h	/^    int* s; \/\/for selected candidate$/;"	m	struct:CvCliqueFinder
s	opencv/include/cxtypes.h	/^        short* s;$/;"	m	union:CvMat::__anon31
s	opencv/include/cxtypes.h	/^        short* s;$/;"	m	union:CvMatND::__anon34
sample_count	opencv/include/ml.h	/^    int sample_count, var_all, var_count, max_c_count;$/;"	m	struct:CvDTreeTrainData
sample_count	opencv/include/ml.h	/^    int sample_count;$/;"	m	class:CvSVMSolver
sample_count	opencv/include/ml.h	/^    int sample_count;$/;"	m	struct:CvDTreeNode
sample_fraction	opencv/include/cxflann.h	/^    float sample_fraction;     \/\/ what fraction of the dataset to use for autotuning$/;"	m	struct:cv::flann::AutotunedIndexParams
sample_idx	opencv/include/ml.h	/^    int* sample_idx; \/\/ data of train_sample_idx and test_sample_idx$/;"	m	class:CvMLData
sample_idx_buf	opencv/include/ml.h	/^    vector<vector<int> > sample_idx_buf;$/;"	m	struct:CvDTreeTrainData
sample_weights	opencv/include/ml.h	/^    CvMat* sample_weights;$/;"	m	class:CvANN_MLP
samples	opencv/include/ml.h	/^    CvVectors* samples;$/;"	m	class:CvKNearest
samples	opencv/include/ml.h	/^    const float** samples;$/;"	m	class:CvSVMSolver
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline int saturate_cast<int>(double v) { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline int saturate_cast<int>(float v) { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(double v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(float v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(int v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(short v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(uchar v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(unsigned v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline schar saturate_cast<schar>(ushort v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline short saturate_cast<short>(double v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline short saturate_cast<short>(float v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline short saturate_cast<short>(int v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline short saturate_cast<short>(unsigned v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline short saturate_cast<short>(ushort v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(double v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(float v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(int v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(schar v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(short v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(unsigned v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline uchar saturate_cast<uchar>(ushort v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline unsigned saturate_cast<unsigned>(double v) { return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline unsigned saturate_cast<unsigned>(float v){ return cvRound(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline ushort saturate_cast<ushort>(double v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline ushort saturate_cast<ushort>(float v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline ushort saturate_cast<ushort>(int v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline ushort saturate_cast<ushort>(schar v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline ushort saturate_cast<ushort>(short v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<> inline ushort saturate_cast<ushort>(unsigned v)$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(double v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(float v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(int v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(schar v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(short v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(uchar v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(unsigned v) { return _Tp(v); }$/;"	f	namespace:cv
saturate_cast	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline _Tp saturate_cast(ushort v) { return _Tp(v); }$/;"	f	namespace:cv
scalarToRawData	opencv/include/cxoperations.hpp	/^static inline void scalarToRawData(const Scalar& s, void* buf, int type, int unroll_to=0)$/;"	f	namespace:cv
scale	opencv/include/cvtypes.h	/^    double scale;$/;"	m	struct:CvHaarClassifierCascade
scale	vascript/ccg/ccg.h	/^		unsigned char scale(int s)const {$/;"	f	class:CCG::MemMod
scale0	vascript/ccg/ccg.h	/^	scale0= 0,$/;"	e	enum:CCG::__anon158
scale2	vascript/ccg/ccg.h	/^	scale2= 2,$/;"	e	enum:CCG::__anon158
scale4	vascript/ccg/ccg.h	/^	scale4= 4,$/;"	e	enum:CCG::__anon158
scale8	vascript/ccg/ccg.h	/^	scale8= 8$/;"	e	enum:CCG::__anon158
scanner	opencv/include/cv.h	/^CVAPI(CvSeq*)  cvEndFindContours( CvContourScanner* scanner );$/;"	v
scanner	opencv/include/cv.h	/^CVAPI(CvSeq*)  cvFindNextContour( CvContourScanner scanner );$/;"	v
scanner	opencv/include/cxcore.h	/^CVAPI(int)  cvNextGraphItem( CvGraphScanner* scanner );$/;"	v
scanner	opencv/include/cxcore.h	/^CVAPI(void) cvReleaseGraphScanner( CvGraphScanner** scanner );$/;"	v
schar	opencv/include/cxtypes.h	/^typedef signed char schar;$/;"	t
script1	vascript/vacg.cpp	/^static char* script1 = "oframe = frame - frame[-1]";$/;"	v	file:
script2	vascript/vacg.cpp	/^static char* script2 = "oframe = frame * sobel";$/;"	v	file:
searchMode	opencv/include/cvaux.hpp	/^	int searchMode;$/;"	m	class:CvFuzzyMeanShiftTracker
search_modules	opencv/include/cxtypes.h	/^    int search_modules;$/;"	m	struct:CvPluginFuncInfo
seek	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void SeqIterator<_Tp>::seek(size_t pos)$/;"	f	class:cv::SeqIterator
seekEnd	opencv/include/cxmat.hpp	/^inline void SparseMatConstIterator::seekEnd()$/;"	f	class:cv::SparseMatConstIterator
select_working_set_func	opencv/include/ml.h	/^    SelectWorkingSet select_working_set_func;$/;"	m	class:CvSVMSolver
seq	opencv/include/cxcore.h	/^CVAPI(void)  cvClearSeq( CvSeq* seq );$/;"	v
seq	opencv/include/cxcore.h	/^CVAPI(void) cvSeqInvert( CvSeq* seq );$/;"	v
seq	opencv/include/cxcore.hpp	/^    CvSeq* seq;$/;"	m	class:cv::Seq
seq	opencv/include/cxtypes.h	/^        CvSeq* seq; \/* sequence (ordered collection of file nodes) *\/$/;"	m	union:CvFileNode::__anon37
set	opencv/include/cxcore.h	/^    void set( CvMat* m, bool add_ref )$/;"	f	class:CvMatrix
set	opencv/include/cxoperations.hpp	/^    void set(_Tp* _data, size_t _size, bool _copyData=false)$/;"	f	class:cv::Vector
set	vascript/symbol.cpp	/^void Symbol::set(FlowGraph* graph, int sid, char* name, argtype_t t, int imm) $/;"	f	class:Symbol
set	vascript/symbol.h	/^            void set(FlowGraph* graph, int sid, char* name,  argtype_t t, T*& ref)$/;"	f	class:Symbol
set	vascript/symbol.h	/^        void set(FlowGraph* graph, int sid, argtype_t t){$/;"	f	class:SymbolInfo
setB	vascript/ccg/ccg.h	/^		void setB(){this->B = 1;}$/;"	f	class:CCG::REX
setB	vascript/ccg/ccg.h	/^		void setB(unsigned char b){this->B = b;}$/;"	f	class:CCG::REX
setD	vascript/ccg/opcodeDes.h	/^        void setD(){d=1;}$/;"	f	class:CCG::OPC1
setD	vascript/ccg/opcodeDes.h	/^        void setD(Uchar _d){d=_d;}$/;"	f	class:CCG::OPC1
setDefaultSize	Kernel.hxx	/^inline void setDefaultSize(int width, int height, int step)$/;"	f	namespace:dmFrameSimple
setDefnode	vascript/symbol.cpp	/^void SymbolInfo::setDefnode(GimpleBase* gnode)$/;"	f	class:SymbolInfo
setDisp	vascript/ccg/ccg.h	/^        void setDisp  (char s) {disp.c=s; hasDisp=1;}$/;"	f	class:CCG::Instr
setDisp	vascript/ccg/ccg.h	/^        void setDisp  (int s)   {disp.d=s; hasDisp=3;}$/;"	f	class:CCG::Instr
setDisp	vascript/ccg/ccg.h	/^        void setDisp  (long long s)  {disp.l=s; hasDisp=4;}$/;"	f	class:CCG::Instr
setDisp	vascript/ccg/ccg.h	/^        void setDisp  (short s) {disp.w=s; hasDisp=2;}$/;"	f	class:CCG::Instr
setEmpty	vascript/ccg/ccg.h	/^        void setEmpty(){};$/;"	f	class:CCG::InstructionCoder
setHasRex	vascript/ccg/ccg.h	/^        void setHasRex(){hasRex = 1;}$/;"	f	class:CCG::Instr
setImm	vascript/ccg/ccg.h	/^        void setImm   (Uchar s) {imm.uc=s; hasImm =1;}$/;"	f	class:CCG::Instr
setImm	vascript/ccg/ccg.h	/^        void setImm   (int s)   {imm.d=s; hasImm =3;}$/;"	f	class:CCG::Instr
setImm	vascript/ccg/ccg.h	/^        void setImm   (long long s)  {imm.l=s; hasImm =4;}$/;"	f	class:CCG::Instr
setImm	vascript/ccg/ccg.h	/^        void setImm   (short s) {imm.w=s; hasImm =2;}$/;"	f	class:CCG::Instr
setMod	vascript/ccg/ccg.h	/^		void setMod(Uchar m){Mod =m;}$/;"	f	class:CCG::ModRM
setModRmMod	vascript/ccg/ccg.h	/^        void setModRmMod(int mod){}$/;"	f	class:CCG::Instr
setModRmR	vascript/ccg/ccg.h	/^        void setModRmR (GPR r){}$/;"	f	class:CCG::Instr
setModRmRm	vascript/ccg/ccg.h	/^        void setModRmRm(GPR rm){}$/;"	f	class:CCG::Instr
setNext	vascript/node.h	/^    void setNext(Node* o){ next = o;}$/;"	f	class:Node
setNext	vascript/treeNode.cpp	/^void Node::setNext(Node* o)$/;"	f	class:Node
setOpc1	vascript/ccg/ccg.h	/^        void setOpc1  (OPC1 s)  { setOpc1(s.c);}$/;"	f	class:CCG::Instr
setOpc1	vascript/ccg/ccg.h	/^        void setOpc1  (Uchar s) {opc1  =s ;hasOpc1 = 1; }$/;"	f	class:CCG::Instr
setOpc2	vascript/ccg/ccg.h	/^        void setOpc2  (Uchar s) {opc2  =s ;hasOpc2  = 1;}$/;"	f	class:CCG::Instr
setOpc3	vascript/ccg/ccg.h	/^        void setOpc3  (Uchar s) {opc3  =s ;hasOpc3  = 1;}$/;"	f	class:CCG::Instr
setOpc4	vascript/ccg/ccg.h	/^        void setOpc4  (Uchar s) {opc4  =s ;hasOpc4  = 1;}$/;"	f	class:CCG::Instr
setOpcode	vascript/ccg/ccg.h	/^		void setOpcode(Uchar op){Opcode =op;}$/;"	f	class:CCG::ModRM
setParent	vascript/treeNode.h	/^    void setParent(Node* o){ mParent = o;}$/;"	f	class:Node
setPointer	vascript/parserdriver.h	/^        void setPointer(YYSTYPE* s, YYLTYPE* l){ ::yylval = s; ::yylloc = l;}$/;"	f	class:vasParserDriver
setPre	vascript/ccg/ccg.cpp	/^void 	Instr::setPre 		(Uchar s){$/;"	f	class:CCG::Instr
setPre	vascript/ccg/ccg.h	/^        void setPre   (PREFIX1 s){ setPre1(s);};$/;"	f	class:CCG::Instr
setPre	vascript/ccg/ccg.h	/^        void setPre   (PREFIX2 s){ setPre2(s);};$/;"	f	class:CCG::Instr
setPre	vascript/ccg/ccg.h	/^        void setPre   (PREFIX3 s){ setPre3(s);};$/;"	f	class:CCG::Instr
setPre	vascript/ccg/ccg.h	/^        void setPre   (PREFIX4 s){ setPre4(s);};$/;"	f	class:CCG::Instr
setPre0f	vascript/ccg/ccg.h	/^        void setPre0f (Uchar s) {pre0f =s;hasPre0f= 1;}$/;"	f	class:CCG::Instr
setPre1	vascript/ccg/ccg.h	/^        void setPre1  (Uchar s) {pre1 =s ;hasPre1 = 1;}$/;"	f	class:CCG::Instr
setPre2	vascript/ccg/ccg.h	/^        void setPre2  (Uchar s) {pre2 =s ;hasPre2 = 1;}$/;"	f	class:CCG::Instr
setPre3	vascript/ccg/ccg.h	/^        void setPre3  (Uchar s) {pre3 =s ;hasPre3 = 1;}$/;"	f	class:CCG::Instr
setPre4	vascript/ccg/ccg.h	/^        void setPre4  (Uchar s) {pre4 =s ;hasPre4 = 1;}$/;"	f	class:CCG::Instr
setR	vascript/ccg/ccg.h	/^		void setR(){this->R = 1;}$/;"	f	class:CCG::REX
setR	vascript/ccg/ccg.h	/^		void setR(Uchar r){Reg = r;}$/;"	f	class:CCG::ModRM
setR	vascript/ccg/ccg.h	/^		void setR(unsigned char b){this->R = b;}$/;"	f	class:CCG::REX
setR2RM	vascript/ccg/opcodeDes.h	/^        void setR2RM(){w=1;}$/;"	f	class:CCG::OPC1
setR2Rm	vascript/ccg/ccg.h	/^        void setR2Rm(Uchar o){}$/;"	f	class:CCG::Instr
setRM2R	vascript/ccg/opcodeDes.h	/^        void setRM2R(){w=0;}$/;"	f	class:CCG::OPC1
setRM2Reg	vascript/ccg/ccg.h	/^        void setRM2Reg(){ opc1 = opc1 & (~2);}$/;"	f	class:CCG::Instr
setRRm	vascript/ccg/ccg.h	/^		void setRRm(Uchar dst, Uchar src){ Mod = 3; Reg=dst; RM=src;}$/;"	f	class:CCG::ModRM
setReg	vascript/ccg/opcodeDes.h	/^        void setReg(Uchar r){reg = r;}$/;"	f	class:CCG::OPC1
setReg2RM	vascript/ccg/ccg.h	/^        void setReg2RM(){ opc1 = opc1 | 2;}$/;"	f	class:CCG::Instr
setRegType	vascript/ccg/ccg.h	/^		template<typename GPRT>	void setRegType(GPRT base, GPRT index) {rex.setB((base&RGROUPMASK)==(regRext<<3)); rex.setX((index&RGROUPMASK)==(regRext<<3));}$/;"	f	class:CCG::MemMod
setRegType	vascript/ccg/ccg.h	/^		template<typename GPRT>	void setRegType(GPRT src) { regType.setR( (src>>3) & 7) ;}$/;"	f	class:CCG::MemMod
setRegType	vascript/ccg/ccg.h	/^		void setRegType(GPRE base, GPRE index) {setRegType(base);}$/;"	f	class:CCG::MemMod
setRegType	vascript/ccg/ccg.h	/^		void setRegType(GPRR base) { regType.setR( (base>>3) & 7);rex.setB((base & RGROUPMASK)==(regRext<<3));}$/;"	f	class:CCG::MemMod
setRegType	vascript/ccg/ccg.h	/^		void setRegType(GPRR base, GPRR index) {setRegType(base);rex.setB((base&RGROUPMASK)==(regRext<<3)); rex.setX((index&RGROUPMASK)==(regRext<<3)); }$/;"	f	class:CCG::MemMod
setReplace	vascript/symbol.cpp	/^void SymbolInfo::setReplace(SymbolInfo s)$/;"	f	class:SymbolInfo
setReplace	vascript/symbol.h	/^        void setReplace(Symbol* o){replace = o;}$/;"	f	class:Symbol
setRex	vascript/ccg/ccg.cpp	/^int Instr::setRex(GPRR dst, const MemMod& m)$/;"	f	class:CCG::Instr
setRex	vascript/ccg/ccg.cpp	/^int Instr::setRex(const MemMod& m)$/;"	f	class:CCG::Instr
setRex	vascript/ccg/ccg.h	/^        void setRex   (REX& s)  {setRex(s.c);}$/;"	f	class:CCG::Instr
setRex	vascript/ccg/ccg.h	/^        void setRex   (Uchar s) {rex  =s ;hasRex = 1; }$/;"	f	class:CCG::Instr
setRexB	vascript/ccg/ccg.h	/^        void setRexB(Uchar o){rex &=(255-1); rex |= (o&1);}$/;"	f	class:CCG::Instr
setRexR	vascript/ccg/ccg.h	/^        void setRexR(Uchar o){rex &=(255-4); rex |= ((o&1)<<2);}$/;"	f	class:CCG::Instr
setRexW	vascript/ccg/ccg.h	/^        void setRexW(Uchar o){rex &=(255-8); rex |= ((o&1)<<3);}$/;"	f	class:CCG::Instr
setRexX	vascript/ccg/ccg.h	/^        void setRexX(Uchar o){rex &=(255-2); rex |= ((o&1)<<1);}$/;"	f	class:CCG::Instr
setRm	vascript/ccg/ccg.h	/^		void setRm(Uchar rm){RM =rm;}$/;"	f	class:CCG::ModRM
setRm	vascript/ccg/ccg.h	/^        void setRm    (ModRM& s){setRm(s.c);} $/;"	f	class:CCG::Instr
setRm	vascript/ccg/ccg.h	/^        void setRm    (Uchar s) {rm  =s; hasModRM=1;} $/;"	f	class:CCG::Instr
setRm2R	vascript/ccg/ccg.h	/^        void setRm2R(Uchar o){}$/;"	f	class:CCG::Instr
setRmR	vascript/ccg/ccg.h	/^		void setRmR(Uchar dst, Uchar src){ Mod = 3; Reg=src; RM=dst;}$/;"	f	class:CCG::ModRM
setSib	vascript/ccg/ccg.h	/^        void setSib   (Uchar s) { sib  =s; hasSib  =1;} $/;"	f	class:CCG::Instr
setSib	vascript/ccg/ccg.h	/^        void setSib   (const SIB& s)  { setSib(s.c);} $/;"	f	class:CCG::Instr
setType	vascript/vacg.h	/^    void setType(argtype_t t){var_type =t ;}$/;"	f	class:VaVar
setValue	vascript/vacg.h	/^    void setValue(void* v){var = v;}$/;"	f	class:VaVar
setVar	vascript/symbol.h	/^        void setVar(VaVar var){$/;"	f	class:Symbol
setW	vascript/ccg/ccg.h	/^		void setW(){this->W = 1;}$/;"	f	class:CCG::REX
setW	vascript/ccg/ccg.h	/^		void setW(unsigned char b){this->W = b;}$/;"	f	class:CCG::REX
setW	vascript/ccg/opcodeDes.h	/^        void setW(){w = 1;}$/;"	f	class:CCG::OPC1
setW	vascript/ccg/opcodeDes.h	/^        void setW(Uchar _w){w = _w;}$/;"	f	class:CCG::OPC1
setX	vascript/ccg/ccg.h	/^		void setX(){this->X = 1;}$/;"	f	class:CCG::REX
setX	vascript/ccg/ccg.h	/^		void setX(unsigned char b){this->X = b;}$/;"	f	class:CCG::REX
set_coi	opencv/include/cxcore.h	/^    void set_coi(int coi) { cvSetImageCOI(image,coi); }$/;"	f	class:CvImage
set_data	opencv/include/cxcore.h	/^    void set_data( void* data, int step=CV_AUTOSTEP )$/;"	f	class:CvMatrix
set_debug	vascript/flexbison/flexlexer.h	/^	void set_debug( int flag )	{ yy_flex_debug = flag; }$/;"	f	class:FlexLexer
set_header	opencv/include/cxcore.h	/^CVAPI(void)  cvClearSet( CvSet* set_header );$/;"	v
set_max_ch_val	opencv/include/cvaux.hpp	/^    bool    set_max_ch_val( int channel, int val ) \/\/ set the maximum allowed value of the specified channel$/;"	f	class:CvCamShiftTracker
set_min_ch_val	opencv/include/cvaux.hpp	/^    bool    set_min_ch_val( int channel, int val ) \/\/ set the minimum allowed value of the specified channel$/;"	f	class:CvCamShiftTracker
set_num_valid	opencv/include/ml.h	/^    void set_num_valid(int vi, int n) { if( num_valid ) num_valid[vi] = n; }$/;"	f	struct:CvDTreeNode
set_postprocess_func	opencv/include/highgui.h	372;"	d
set_preprocess_func	opencv/include/highgui.h	371;"	d
set_roi	opencv/include/cxcore.h	/^    void set_roi(CvRect roi) { cvSetImageROI(image,roi); }$/;"	f	class:CvImage
set_threshold	opencv/include/cvaux.hpp	/^    bool    set_threshold( int threshold ) \/\/ threshold applied to the histogram bins$/;"	f	class:CvCamShiftTracker
set_window	opencv/include/cvaux.hpp	/^    bool    set_window( CvRect window)$/;"	f	class:CvCamShiftTracker
setf	vascript/vacg.h	/^        void setf(u8* _f){f0=f=_f;}$/;"	f	class:vaCG
setobj	vascript/symbol.h	/^        void setobj(VaVar var){setVar(var);}$/;"	f	class:Symbol
shape	opencv/include/cvvidsurv.hpp	/^    enum {RECT, ELLIPSE} shape;$/;"	m	struct:CvDrawShape	typeref:enum:CvDrawShape::__anon42
shared	opencv/include/ml.h	/^    bool shared;$/;"	m	struct:CvDTreeTrainData
shear	opencv/include/cxcore.h	/^    float       shear; \/* slope coefficient: 0 - normal, >0 - italic *\/$/;"	m	struct:CvFont
shift1	opencv/include/cvvidsurv.hpp	/^    int shift1,shift2;$/;"	m	struct:CvTracksTimePos
shift2	opencv/include/cvvidsurv.hpp	/^    int shift1,shift2;$/;"	m	struct:CvTracksTimePos
show_hist	mouse.cpp	/^int show_hist = 1;$/;"	v
sib	vascript/ccg/ccg.h	/^		SIB sib;$/;"	m	class:CCG::MemMod
sib	vascript/ccg/ccg.h	/^        Uchar sib;$/;"	m	class:CCG::Instr
sigma	opencv/include/cvvidsurv.hpp	/^    float   sigma;$/;"	m	struct:CvBlobTrackerParamMS
signature	opencv/include/cxtypes.h	/^    int signature;$/;"	m	struct:CvMemStorage
signatureSize	opencv/include/cvaux.hpp	/^    int signatureSize;$/;"	m	class:cv::FernClassifier
simplePush	vascript/graph.hxx	/^    void simplePush(){$/;"	f	class:FlowGraph
size	opencv/include/cv.h	/^    int size;$/;"	m	struct:CvSURFPoint
size	opencv/include/cv.h	/^    int size;$/;"	m	struct:CvStarKeypoint
size	opencv/include/cv.hpp	/^    float size;$/;"	m	class:cv::KeyPoint
size	opencv/include/cvaux.h	/^    CvSize size;$/;"	m	struct:CvBGCodeBookModel
size	opencv/include/cxcore.h	/^    CvSize size() const { return image ? cvSize(image->width, image->height) : cvSize(0,0); }$/;"	f	class:CvImage
size	opencv/include/cxcore.h	/^    CvSize size() const$/;"	f	class:CvMatrix
size	opencv/include/cxcore.h	/^    CvSize size; \/* maximal common linear size: { width = size, height = 1 } *\/$/;"	m	struct:CvNArrayIterator
size	opencv/include/cxcore.h	/^CVAPI(void*)  cvAlloc( size_t size );$/;"	v
size	opencv/include/cxcore.hpp	/^        int size[CV_MAX_DIM];$/;"	m	struct:cv::SparseMat::Hdr
size	opencv/include/cxcore.hpp	/^    Size2f size;$/;"	m	class:cv::RotatedRect
size	opencv/include/cxcore.hpp	/^    int size[MAX_DIM];$/;"	m	class:cv::MatND
size	opencv/include/cxcore.hpp	/^    size_t size;$/;"	m	class:cv::AutoBuffer
size	opencv/include/cxmat.hpp	/^inline Size Mat::size() const { return Size(cols, rows); }$/;"	f	class:cv::Mat
size	opencv/include/cxmat.hpp	/^inline const int* SparseMat::size() const$/;"	f	class:cv::SparseMat
size	opencv/include/cxmat.hpp	/^inline int SparseMat::size(int i) const$/;"	f	class:cv::SparseMat
size	opencv/include/cxoperations.hpp	/^        size_t size;$/;"	m	struct:cv::Vector::Hdr
size	opencv/include/cxoperations.hpp	/^    size_t size() const { return hdr.size; }$/;"	f	class:cv::Vector
size	opencv/include/cxoperations.hpp	/^inline int Range::size() const { return end - start; }$/;"	f	class:cv::Range
size	opencv/include/cxoperations.hpp	/^inline size_t FileNode::size() const$/;"	f	class:cv::FileNode
size	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Size_<_Tp> Rect_<_Tp>::size() const { return Size_<_Tp>(width, height); }$/;"	f	class:cv::Rect_
size	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline size_t Seq<_Tp>::size() const$/;"	f	class:cv::Seq
size	opencv/include/cxtypes.h	/^        int size;$/;"	m	struct:CvMatND::__anon35
size	opencv/include/cxtypes.h	/^    CvSize2D32f  size;    \/* Box width and length.                       *\/$/;"	m	struct:CvBox2D
size	opencv/include/cxtypes.h	/^    int size[CV_MAX_DIM];$/;"	m	struct:CvSparseMat
size	vascript/vacg.h	/^        size_t size;$/;"	m	class:vaCG
size_type	opencv/include/cxcore.hpp	/^    typedef size_t size_type;$/;"	t	class:cv::Allocator
sizeimage	bmp.h	/^			unsigned int sizeimage; $/;"	m	struct:__anon115::__anon116::__anon118
sizeimage	bmp.h	/^	unsigned int sizeimage;  \/**\/$/;"	m	struct:__anon113
skinHueHistogram	opencv/include/cvaux.hpp	/^	Histogram histogramHueMotion, skinHueHistogram;$/;"	m	class:CvAdaptiveSkinDetector
sliceEnd	opencv/include/cxcore.hpp	/^    _Tp* sliceEnd;$/;"	m	class:cv::MatConstIterator_
slidingSumBuf	opencv/include/cv.h	/^    CvMat* slidingSumBuf;$/;"	m	struct:CvStereoBMState
smallSize	opencv/include/cvaux.hpp	/^	int smallSize;$/;"	m	class:cv::SelfSimDescriptor
solveZ	opencv/include/cxmat.hpp	/^inline void SVD::solveZ( const Mat& m, Mat& dst )$/;"	f	class:cv::SVD
solver	opencv/include/ml.h	/^    CvSVMSolver* solver;$/;"	m	class:CvSVM
sort	opencv/include/cxoperations.hpp	/^template<typename _Tp, class _LT> void sort( vector<_Tp>& vec, _LT LT=_LT() )$/;"	f	namespace:cv
speckleRange	opencv/include/cv.h	/^    int speckleRange; \/\/ acceptable range of variation in window$/;"	m	struct:CvStereoBMState
speckleWindowSize	opencv/include/cv.h	/^    int speckleWindowSize; \/\/ disparity variation window$/;"	m	struct:CvStereoBMState
spinImages	opencv/include/cvaux.hpp	/^    Mat spinImages;$/;"	m	class:cv::SpinImageModel
split	opencv/include/cxmat.hpp	/^static inline void split(const Mat& m, vector<Mat>& mv)$/;"	f	namespace:cv
split	opencv/include/cxmat.hpp	/^static inline void split(const MatND& m, vector<MatND>& mv)$/;"	f	namespace:cv
split	opencv/include/cxmat.hpp	/^template<typename _Tp> void split(const Mat& src, vector<Mat_<_Tp> >& mv)$/;"	f	namespace:cv
split	opencv/include/ml.h	/^    CvDTreeSplit* split;$/;"	m	struct:CvDTreeNode
split_buf	opencv/include/ml.h	/^    CvMat* split_buf;$/;"	m	struct:CvDTreeTrainData
split_criteria	opencv/include/ml.h	/^    int split_criteria;$/;"	m	struct:CvBoostParams
split_heap	opencv/include/ml.h	/^    CvSet* split_heap;$/;"	m	struct:CvDTreeTrainData
split_point	opencv/include/ml.h	/^            int split_point;$/;"	m	struct:CvDTreeSplit::__anon50::__anon51
srcRow	opencv/include/cv.hpp	/^    vector<uchar> srcRow;$/;"	m	class:cv::FilterEngine
srcType	opencv/include/cv.hpp	/^    int srcType, dstType, bufType;$/;"	m	class:cv::FilterEngine
sscode	vascript/ccg/ccg.h	/^		int sscode(int scale){$/;"	f	class:CCG::MemMod
st	vascript/ccg/opcodeDes.h	/^        Uchar st;   	\/\/ status of document$/;"	m	class:CCG::OpInfo
st0	vascript/ccg/ccg.h	/^st0 = 56,$/;"	e	enum:CCG::__anon147
st1	vascript/ccg/ccg.h	/^st1 = 57,$/;"	e	enum:CCG::__anon147
st2	vascript/ccg/ccg.h	/^st2 = 58,$/;"	e	enum:CCG::__anon147
st3	vascript/ccg/ccg.h	/^st3 = 59,$/;"	e	enum:CCG::__anon147
st4	vascript/ccg/ccg.h	/^st4 = 60,$/;"	e	enum:CCG::__anon147
st5	vascript/ccg/ccg.h	/^st5 = 61,$/;"	e	enum:CCG::__anon147
st6	vascript/ccg/ccg.h	/^st6 = 62,$/;"	e	enum:CCG::__anon147
st7	vascript/ccg/ccg.h	/^st7 = 63,$/;"	e	enum:CCG::__anon147
stack	opencv/include/cxcore.h	/^    CvSeq*   stack;        \/* the graph vertex stack *\/$/;"	m	struct:CvGraphScanner
stack	opencv/include/cxcore.h	/^    int stack[CV_MAX_DIM]; \/* for internal use *\/$/;"	m	struct:CvNArrayIterator
stageType	opencv/include/cv.hpp	/^    int stageType;$/;"	m	class:cv::CascadeClassifier
stage_classifier	opencv/include/cvtypes.h	/^    CvHaarStageClassifier* stage_classifier;$/;"	m	struct:CvHaarClassifierCascade
stages	opencv/include/cv.hpp	/^    vector<Stage> stages;$/;"	m	class:cv::CascadeClassifier
stale	opencv/include/cvaux.h	/^    int stale;$/;"	m	struct:CvBGCodeBookElem
start	opencv/include/cvtypes.h	/^    CvPoint* start; \/* point of the contour where the defect begins *\/$/;"	m	struct:CvConvexityDefect
start	opencv/include/cxcore.hpp	/^    int start, end;$/;"	m	class:cv::Range
startDistanceBucket	opencv/include/cvaux.hpp	/^    int startDistanceBucket;$/;"	m	class:cv::SelfSimDescriptor
startTime	opencv/include/cvaux.hpp	/^    int64 startTime;$/;"	m	class:cv::TickMeter
startY	opencv/include/cv.hpp	/^    int bufStep, startY, startY0, endY, rowCount, dstY;$/;"	m	class:cv::FilterEngine
startY0	opencv/include/cv.hpp	/^    int bufStep, startY, startY0, endY, rowCount, dstY;$/;"	m	class:cv::FilterEngine
start_index	opencv/include/cxtypes.h	/^    int  start_index, end_index;$/;"	m	struct:CvSlice
start_index	opencv/include/cxtypes.h	/^  int    start_index;         \/* Index of the first element in the block +  *\/$/;"	m	struct:CvSeqBlock
start_pusharg	vascript/vacg.h	/^        void start_pusharg(){};$/;"	f	class:vaCG
start_step	opencv/include/ml.h	/^    int start_step;$/;"	m	struct:CvEMParams
state	opencv/include/cv.h	/^CVAPI(void) cvReleaseStereoBMState( CvStereoBMState** state );$/;"	v
state	opencv/include/cv.h	/^CVAPI(void) cvReleaseStereoGCState( CvStereoGCState** state );$/;"	v
state	opencv/include/cv.hpp	/^    Ptr<CvStereoBMState> state;$/;"	m	class:cv::StereoBM
state	opencv/include/cv.hpp	/^    int state;$/;"	m	class:CvLevMarq
state	opencv/include/cvaux.h	/^        CvEHMMState* state; \/* if level == 0 points to real states array,$/;"	m	union:CvEHMM::__anon106
state	opencv/include/cvaux.h	/^    int* state;\/* arr of pairs superstate\/state to which observation belong *\/$/;"	m	struct:CvImgObsInfo
state	opencv/include/cvcompat.h	/^    CvRNG     state;    \/* RNG state (the current seed and carry)*\/$/;"	m	struct:CvRandState
state	opencv/include/cxcore.hpp	/^    int state;$/;"	m	class:cv::FileStorage
state	opencv/include/cxcore.hpp	/^    uint64 state;$/;"	m	class:cv::RNG
statePost	opencv/include/cv.hpp	/^    Mat statePost;          \/\/ corrected state (x(k)):$/;"	m	class:cv::KalmanFilter
statePre	opencv/include/cv.hpp	/^    Mat statePre;           \/\/ predicted state (x'(k)):$/;"	m	class:cv::KalmanFilter
state_post	opencv/include/cvtypes.h	/^    CvMat* state_post;          \/* corrected state (x(k)):$/;"	m	struct:CvKalman
state_pre	opencv/include/cvtypes.h	/^    CvMat* state_pre;           \/* predicted state (x'(k)):$/;"	m	struct:CvKalman
statement	vascript/vascript.y	/^statement:	expression '=' expression  ';'       	{  $$= new AstAssginState($1,$3);}$/;"	l
statement_list	vascript/vascript.y	/^statement_list:	statement 				{ \/* $$= new FlowGraph();*\/ $$=curRegion; if($1) $$->appandNode($1); }$/;"	l
status	opencv/include/cvaux.h	/^    int status;$/;"	m	struct:CvCliqueFinder
std_threshold	opencv/include/cvaux.h	/^    double  bg_threshold, std_threshold, minArea;$/;"	m	struct:CvGaussBGStatModelParams
step	opencv/include/cvcompat.h	/^    int     step;                   \/* distance between lines ( in elements of single   *\/$/;"	m	struct:_CvPixelPosition8u
step	opencv/include/cvcompat.h	/^    int     step;$/;"	m	struct:_CvPixelPosition32f
step	opencv/include/cvcompat.h	/^    int     step;$/;"	m	struct:_CvPixelPosition8s
step	opencv/include/cxcore.h	/^    int step() const { return image ? image->widthStep : 0; }$/;"	f	class:CvImage
step	opencv/include/cxcore.h	/^    int step() const { return matrix ? matrix->step : 0; }$/;"	f	class:CvMatrix
step	opencv/include/cxcore.hpp	/^    size_t step;$/;"	m	class:cv::Mat
step	opencv/include/cxcore.hpp	/^    size_t step[MAX_DIM];$/;"	m	class:cv::MatND
step	opencv/include/cxtypes.h	/^        int step;$/;"	m	struct:CvMatND::__anon35
step	opencv/include/cxtypes.h	/^    int step;$/;"	m	struct:CvMat
step	opencv/include/ml.h	/^    double step;$/;"	m	struct:CvParamGrid
step1	opencv/include/cxmat.hpp	/^inline size_t Mat::step1() const { return step\/elemSize1(); }$/;"	f	class:cv::Mat
step1	opencv/include/cxmat.hpp	/^inline size_t MatND::step1(int i) const$/;"	f	class:cv::MatND
step1	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t MatND_<_Tp>::step1(int i) const$/;"	f	class:cv::MatND_
step1	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t Mat_<_Tp>::step1() const { return step\/elemSize1(); }$/;"	f	class:cv::Mat_
stepT	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t MatND_<_Tp>::stepT(int i) const$/;"	f	class:cv::MatND_
stepT	opencv/include/cxmat.hpp	/^template<typename _Tp> inline size_t Mat_<_Tp>::stepT() const { return step\/elemSize(); }$/;"	f	class:cv::Mat_
step_arr	opencv/include/cvcompat.h	/^    int     step_arr[3];            \/* array: ( 0, -step, step ). It is used for        *\/$/;"	m	struct:_CvPixelPosition8u
step_arr	opencv/include/cvcompat.h	/^    int     step_arr[3];$/;"	m	struct:_CvPixelPosition32f
step_arr	opencv/include/cvcompat.h	/^    int     step_arr[3];$/;"	m	struct:_CvPixelPosition8s
stereo	opencv/include/cvaux.h	/^    CvStereoCamera stereo;$/;"	m	class:CvCalibFilter
stereoCamera	opencv/include/cvaux.h	/^CVAPI(int) icvComputeCoeffForStereo(  CvStereoCamera* stereoCamera);$/;"	v
stereoCamera	opencv/include/cvaux.h	/^CVAPI(void) icvComputeStereoParamsForCameras(CvStereoCamera* stereoCamera);$/;"	v
stereoCamera	opencv/include/cvaux.h	/^CVAPI(void) icvGetQuadsTransformStruct(  CvStereoCamera* stereoCamera);$/;"	v
stereoparams	opencv/include/cvaux.h	/^CVAPI(int) icvComputeRestStereoParams(CvStereoCamera *stereoparams);$/;"	v
stmt	vascript/release/vasparser.cpp	/^AstStatement* stmt;$/;"	m	union:__anon124	file:
stmt	vascript/release/vasparser.h	/^AstStatement* stmt;$/;"	m	union:__anon125
stmts	vascript/graph.hxx	/^	std::vector<AstNode*> stmts;$/;"	m	class:FlowGraph
storage	opencv/include/cvaux.h	/^    CvMemStorage* storage;$/;"	m	class:CvCalibFilter
storage	opencv/include/cvaux.h	/^    CvMemStorage* storage;$/;"	m	struct:CvBGCodeBookModel
storage	opencv/include/cxcore.h	/^CVAPI(void)  cvClearMemStorage( CvMemStorage* storage );$/;"	v
storage	opencv/include/cxcore.h	/^CVAPI(void)  cvReleaseMemStorage( CvMemStorage** storage );$/;"	v
storage	opencv/include/ml.h	/^    CvMemStorage* storage;$/;"	m	class:CvSVM
storage	opencv/include/ml.h	/^    CvMemStorage* storage;$/;"	m	class:CvSVMSolver
str	opencv/include/cxtypes.h	/^        CvString str; \/* text string *\/$/;"	m	union:CvFileNode::__anon37
str	opencv/include/cxtypes.h	/^    CvString str;$/;"	m	struct:CvStringHashNode
strdup	opencv/include/cvvidsurv.hpp	55;"	d
stricmp	opencv/include/cvvidsurv.hpp	56;"	d
structSize	opencv/include/cvaux.hpp	/^    int structSize;$/;"	m	class:cv::FernClassifier
structs	opencv/include/cxcore.hpp	/^    vector<char> structs;$/;"	m	class:cv::FileStorage
studyFromRGBimg	cvKernel.h	/^inline void studyFromRGBimg( IplImage *in){$/;"	f	namespace:dmFrameSimple
studyFromRGBimg	transColor.cpp	/^void studyFromRGBimg( char* dataIn, int w, int h, int bytesinLine)$/;"	f	namespace:dmFrameSimple
subdiv	opencv/include/cv.h	/^CVAPI(void)  cvCalcSubdivVoronoi2D( CvSubdiv2D* subdiv );$/;"	v
subdiv	opencv/include/cv.h	/^CVAPI(void)  cvClearSubdivVoronoi2D( CvSubdiv2D* subdiv );$/;"	v
subdiv	opencv/include/cvaux.h	/^CVAPI(int)   icvSubdiv2DCheck( CvSubdiv2D* subdiv );$/;"	v
subgraph	vascript/vastree.h	/^        node* subgraph;$/;"	m	class:node
subsample_mask	opencv/include/ml.h	/^    CvMat* subsample_mask;$/;"	m	class:CvBoost
subset	opencv/include/cvaux.hpp	/^    vector<int> subset;$/;"	m	class:cv::SpinImageModel
subset	opencv/include/ml.h	/^        int subset[2];$/;"	m	union:CvDTreeSplit::__anon50
subsets	opencv/include/cv.hpp	/^    vector<int> subsets;$/;"	m	class:cv::CascadeClassifier
subtract	opencv/include/cxmat.hpp	/^inline void subtract(const MatND& a, const Scalar& s, MatND& c, const MatND& mask=MatND())$/;"	f	namespace:cv
subtree_weights	opencv/include/ml.h	/^    CvMat* subtree_weights;$/;"	m	class:CvBoost
sum	opencv/include/ml.h	/^    CvMat** sum;$/;"	m	class:CvNormalBayesClassifier
sumTime	opencv/include/cvaux.hpp	/^    int64 sumTime;$/;"	m	class:cv::TickMeter
sum_response	opencv/include/ml.h	/^    CvMat* sum_response;$/;"	m	class:CvBoost
suppressNonmaxSize	opencv/include/cv.h	/^    int suppressNonmaxSize;$/;"	m	struct:CvStarDetectorParams
sv	opencv/include/ml.h	/^    float** sv;$/;"	m	class:CvSVM
sv_count	opencv/include/ml.h	/^    int sv_count;$/;"	m	struct:CvSVMDecisionFunc
sv_index	opencv/include/ml.h	/^    int* sv_index;$/;"	m	struct:CvSVMDecisionFunc
sv_total	opencv/include/ml.h	/^    int sv_total;$/;"	m	class:CvSVM
svmDetector	opencv/include/cvaux.hpp	/^    vector<float> svmDetector;$/;"	m	struct:cv::HOGDescriptor
svm_type	opencv/include/ml.h	/^    int         svm_type;$/;"	m	struct:CvSVMParams
swap	opencv/include/cxmat.hpp	/^static inline void swap( Mat& a, Mat& b )$/;"	f	namespace:cv
switch_streams	vascript/release/vaslexer.cpp	/^void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )$/;"	f	class:yyFlexLexer
symbolID	vascript/symbol.h	/^        int symbolID;$/;"	m	class:SymbolInfo
symbol_INC	vascript/symbol.h	17;"	d
t	opencv/include/cvaux.h	/^    int t;$/;"	m	struct:CvBGCodeBookModel
t	opencv/include/cxmat.hpp	/^    MatExpr_<MatExpr_Op2_<M, double, M, MatOp_T_<Mat> >, M> t() const$/;"	f	class:cv::MatExpr_
t	opencv/include/cxmat.hpp	/^Mat::t() const$/;"	f	class:cv::Mat
t	opencv/include/cxmat.hpp	/^Mat_<_Tp>::t() const$/;"	f	class:cv::Mat_
tLastUpdate	opencv/include/cvaux.h	/^    int tLastUpdate;$/;"	m	struct:CvBGCodeBookElem
tag	opencv/include/cxtypes.h	/^    int tag;$/;"	m	struct:CvFileNode
tagRGBQUAD	bmp.h	/^typedef struct tagRGBQUAD {$/;"	s
target_precision	opencv/include/cxflann.h	/^	float target_precision;    \/\/ precision desired (used for autotuning, -1 otherwise)$/;"	m	struct:cv::flann::AutotunedIndexParams
tell	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline size_t SeqIterator<_Tp>::tell() const$/;"	f	class:cv::SeqIterator
temp1	opencv/include/cv.hpp	/^    Mat temp1;              \/\/ temporary matrices$/;"	m	class:cv::KalmanFilter
temp1	opencv/include/cvtypes.h	/^    CvMat* temp1;               \/* temporary matrices *\/$/;"	m	struct:CvKalman
temp2	opencv/include/cv.hpp	/^    Mat temp2;$/;"	m	class:cv::KalmanFilter
temp2	opencv/include/cvtypes.h	/^    CvMat* temp2;$/;"	m	struct:CvKalman
temp3	opencv/include/cv.hpp	/^    Mat temp3;$/;"	m	class:cv::KalmanFilter
temp3	opencv/include/cvtypes.h	/^    CvMat* temp3;$/;"	m	struct:CvKalman
temp4	opencv/include/cv.hpp	/^    Mat temp4;$/;"	m	class:cv::KalmanFilter
temp4	opencv/include/cvtypes.h	/^    CvMat* temp4;$/;"	m	struct:CvKalman
temp5	opencv/include/cv.hpp	/^    Mat temp5;$/;"	m	class:cv::KalmanFilter
temp5	opencv/include/cvtypes.h	/^    CvMat* temp5;$/;"	m	struct:CvKalman
tempImg	opencv/include/cvaux.h	/^    CvMat*  tempImg;$/;"	m	class:CvCalibFilter
temp_storage	opencv/include/ml.h	/^    CvMemStorage* temp_storage;$/;"	m	struct:CvDTreeTrainData
term_crit	opencv/include/ml.h	/^    CvTermCriteria term_crit; \/\/ termination criteria$/;"	m	struct:CvSVMParams
term_crit	opencv/include/ml.h	/^    CvTermCriteria term_crit;$/;"	m	struct:CvANN_MLP_TrainParams
term_crit	opencv/include/ml.h	/^    CvTermCriteria term_crit;$/;"	m	struct:CvEMParams
term_crit	opencv/include/ml.h	/^    CvTermCriteria term_crit;$/;"	m	struct:CvRTParams
test	vascript/ccg/testccg.cpp	/^void test ( MN mn, I64 src, OpCodeRef ref = refDefault)$/;"	f
test	vascript/ccg/testccg.cpp	/^void test ( MN mn, T dst, T src, OpCodeRef ref = refDefault)$/;"	f
test	vascript/ccg/testccg.cpp	/^void test ( MN mn, T src, OpCodeRef ref = refDefault)$/;"	f
test	vascript/ccg/testccg.cpp	/^void test( MN mn, T dst, I64 i, OpCodeRef ref = refDefault)$/;"	f
test	vascript/ccg/testccg.cpp	/^void test( MN mn, T dst, const MemMod& m, OpCodeRef ref = refDefault)$/;"	f
test	vascript/ccg/testccg.cpp	/^void test( MN mn, const MemMod& m, T src, OpCodeRef ref = refDefault)$/;"	f
test	vascript/ccg/testopcode.cpp	/^int test()$/;"	f
test2	vascript/ccg/testopcode.cpp	/^int test2()$/;"	f
testMemMod	vascript/ccg/testccg.cpp	/^void testMemMod()$/;"	f
testMemMod1	vascript/ccg/testccg.cpp	/^void testMemMod1()$/;"	f
testMemMod32	vascript/ccg/testccg.cpp	/^void testMemMod32()$/;"	f
testMemMod64	vascript/ccg/testccg.cpp	/^void testMemMod64()$/;"	f
testX2X	vascript/ccg/testccg.cpp	/^void testX2X()$/;"	f
test_ccg	vascript/vacg.cpp	/^void* vaCG::test_ccg()$/;"	f	class:vaCG
test_ccg2	vascript/vacg.cpp	/^void* vaCG::test_ccg2()$/;"	f	class:vaCG
test_sample_idx	opencv/include/ml.h	/^    CvMat* test_sample_idx;$/;"	m	class:CvMLData
testedFlag	vascript/ccg/opcodeDes.h	/^        unsigned int testedFlag;$/;"	m	class:CCG::OpInfo
testvas	dmvideo.cpp	/^void testvas()$/;"	f
text	vascript/release/vasparser.cpp	/^      char *text;$/;"	m	struct:yyltype	file:
text	vascript/release/vasparser.h	/^      char *text;$/;"	m	struct:yyltype
text	vascript/yy.lex.parser.h	/^      char *text;$/;"	m	struct:YYLTYPE
textureThreshold	opencv/include/cv.h	/^    int textureThreshold;  \/\/ the disparity is only computed for pixels$/;"	m	struct:CvStereoBMState
tflag	opencv/include/ml.h	/^    int tflag;$/;"	m	struct:CvDTreeTrainData
thetaMax	opencv/include/cvaux.hpp	/^    double thetaMin, thetaMax;$/;"	m	class:cv::PatchGenerator
thetaMin	opencv/include/cvaux.hpp	/^    double thetaMin, thetaMax;$/;"	m	class:cv::PatchGenerator
thickness	opencv/include/cxcore.h	/^    int         thickness; \/* letters thickness *\/$/;"	m	struct:CvFont
thresh	opencv/include/cxtypes.h	/^    float   thresh[CV_MAX_DIM][2];  \/* For uniform histograms.                      *\/$/;"	m	struct:CvHistogram
thresh2	opencv/include/cxtypes.h	/^    float** thresh2;                \/* For non-uniform histograms.                  *\/$/;"	m	struct:CvHistogram
threshold	opencv/include/cv.hpp	/^        float threshold; \/\/ for ordered features only$/;"	m	struct:cv::CascadeClassifier::DTreeNode
threshold	opencv/include/cv.hpp	/^        float threshold;$/;"	m	struct:cv::CascadeClassifier::Stage
threshold	opencv/include/cvaux.hpp	/^    int threshold;$/;"	m	class:cv::LDetector
threshold	opencv/include/cvtypes.h	/^    float threshold;$/;"	m	struct:CvHaarStageClassifier
threshold	opencv/include/cvtypes.h	/^    float* threshold;$/;"	m	struct:CvHaarClassifier
tileInfo	opencv/include/cxtypes.h	/^    struct _IplTileInfo *tileInfo;  \/* "           " *\/$/;"	m	struct:_IplImage	typeref:struct:_IplImage::_IplTileInfo
tilted	opencv/include/cvtypes.h	/^    int  tilted;$/;"	m	struct:CvHaarFeature
timestamp	vascript/release/vasparser.cpp	/^      int timestamp;$/;"	m	struct:yyltype	file:
timestamp	vascript/release/vasparser.h	/^      int timestamp;$/;"	m	struct:yyltype
timestamp	vascript/yy.lex.parser.h	/^      int timestamp;$/;"	m	struct:YYLTYPE
tl	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Point_<_Tp> Rect_<_Tp>::tl() const { return Point_<_Tp>(x,y); }$/;"	f	class:cv::Rect_
tmpFK	KeyBoard.cpp	/^int tmpFK[9] = {1,1,1,$/;"	v
tmpFK	detect.cpp	/^int tmpFK[9] = {1,1,1,$/;"	m	namespace:dmFrameSimple	file:
tmpfile	vascript/compileflexbison.bat	/^set tmpfile=%temp%\\vaslexer.cpp$/;"	v
tmpfs	vascript/compileflexbison.bat	/^set tmpfs=tmpfs.txt$/;"	v
top	opencv/include/cxtypes.h	/^    CvMemBlock* top;              \/* Current memory block - top of the stack. *\/$/;"	m	struct:CvMemStorage
top	opencv/include/cxtypes.h	/^    CvMemBlock* top;$/;"	m	struct:CvMemStoragePos
topline	opencv/include/cvcompat.h	/^    float*  topline;$/;"	m	struct:_CvPixelPosition32f
topline	opencv/include/cvcompat.h	/^    schar*  topline;$/;"	m	struct:_CvPixelPosition8s
topline	opencv/include/cvcompat.h	/^    uchar*  topline;       \/* pointer to the start of the top pixel line       *\/$/;"	m	struct:_CvPixelPosition8u
total	opencv/include/ml.h	/^    int total;$/;"	m	class:CvKNearest
total_class_count	opencv/include/ml.h	/^    int total_class_count;$/;"	m	class:CvMLData
train_data	opencv/include/ml.h	/^    const CvMat* train_data;$/;"	m	struct:CvDTreeTrainData
train_method	opencv/include/ml.h	/^    int train_method;$/;"	m	struct:CvANN_MLP_TrainParams
train_sample_count	opencv/include/ml.h	/^    int train_sample_count;$/;"	m	class:CvMLData
train_sample_idx	opencv/include/ml.h	/^    CvMat* train_sample_idx;$/;"	m	class:CvMLData
train_sample_part	opencv/include/ml.h	/^    } train_sample_part;$/;"	m	struct:CvTrainTestSplit	typeref:union:CvTrainTestSplit::__anon57
train_sample_part_mode	opencv/include/ml.h	/^    int train_sample_part_mode;$/;"	m	struct:CvTrainTestSplit
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPR dst,  I64 src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPR dst, GPR src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPR dst, const MemMod& m)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPR src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRB dst, GPRB src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRB dst, I64 src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRB dst, const MemMod& m)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRB src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRE dst, GPRE src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRE dst, I64 src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRE dst, const MemMod& m)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRE src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRR dst , GPRR src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRR dst, I64 src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRR dst, const MemMod& m)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRR src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRW dst, GPRW src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRW dst, I64 src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRW dst, const MemMod& m)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, GPRW src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, I64 i)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, XMMS dst, I64 src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, XMMS dst, XMMS src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, XMMS dst, const MemMod& m)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, XMMS src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, const MemMod& m, GPR src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, const MemMod& m, GPRB src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, const MemMod& m, GPRE src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, const MemMod& m, GPRR src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, const MemMod& m, GPRW src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.cpp	/^int Instr::trans(MN x, const MemMod& m, XMMS src)$/;"	f	class:CCG::Instr
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(GPRT  base, GPRT index)           {  setRegType(base,index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(GPRT  base, GPRT index, int scale){ setRegType(base,index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(GPRT base) { setRegType(base); modrm.Mod=0; modrm.RM=base;	return 0;};$/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(char off,  GPRT base, GPRT index, int scale){ setRegType(base,index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(char off, GPRT base){ setRegType(base);  modrm.Mod=1; modrm.RM=base; off8=off; return 0;}$/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(int  off,  GPRT base){ setRegType(base); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(int  off,  GPRT base, GPRT index) {  setRegType(base,index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(int  off,  GPRT base, GPRT index, int scale){  setRegType(base,index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT>	int trans(int off, GPRT index, int scale){ setRegType(index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^		template<typename GPRT> int trans(char off,  GPRT base, GPRT index) {  setRegType(base,index); $/;"	f	class:CCG::MemMod
trans	vascript/ccg/ccg.h	/^        int trans(MN x){ m.trans(x); len = m.trans2bytes(code); return DM_SUCCESS; }$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(MN x, GPR dst , I64 i){m.trans(x, dst, i); len = m.trans2bytes(code); return DM_SUCCESS;}$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(MN x, GPR dst, GPR src){ m.trans(x, dst, src); len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(MN x, GPR dst, const MemMod& src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(MN x, GPR src){ m.trans(x, src); len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(MN x, I64 i){m.trans(x, i); len = m.trans2bytes(code); return DM_SUCCESS;}$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(MN x, const MemMod& dst, GPR src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans	vascript/ccg/ccg.h	/^        int trans(int off ){$/;"	f	class:CCG::MemMod
trans	vascript/ccg/testccg.cpp	/^void trans(MN mn, int arg1, int arg2)$/;"	f	namespace:CCG
trans2bytes	vascript/ccg/ccg.cpp	/^int Instr::trans2bytes(Uchar* dst){$/;"	f	class:CCG::Instr
transGray2RGB	cvKernel.h	/^inline void transGray2RGB( IplImage *out, IplImage *in){$/;"	f	namespace:dmFrameSimple
transGray2RGB	transColor.cpp	/^void transGray2RGB(char* dataOut, char* dataIn, int w, int h, int bytesinLine)$/;"	f	namespace:dmFrameSimple
transGray2RGB_2	cvKernel.h	/^inline void transGray2RGB_2( IplImage *out, IplImage *in){$/;"	f	namespace:dmFrameSimple
transGray2RGB_2	transColor.cpp	/^void transGray2RGB_2(char* dataOut, char* dataIn, int w, int h, int bytesinLine)$/;"	f	namespace:dmFrameSimple
transImm2Reg	vascript/ccg/ccg.cpp	/^int Instr::transImm2Reg(const OpInfo* opinfo, GPR dst, I64 src)$/;"	f	class:CCG::Instr
transMem2Reg	vascript/ccg/ccg.cpp	/^int Instr::transMem2Reg(const OpInfo* opinfo, GPR dst, const MemMod& m)$/;"	f	class:CCG::Instr
transP	opencv/include/cvaux.h	/^    float*  transP;\/*transition probab. matrices for states *\/$/;"	m	struct:CvEHMM
transRGB2Gray	cvKernel.h	/^inline void transRGB2Gray( IplImage *out, IplImage *in){$/;"	f	namespace:dmFrameSimple
transRGB2Gray	transColor.cpp	/^void transRGB2Gray(char* dataOut, char* dataIn, int w, int h, int bytesinLine)$/;"	f	namespace:dmFrameSimple
transReg	vascript/ccg/ccg.cpp	/^int Instr::transReg(const OpInfo* d, GPR src)$/;"	f	class:CCG::Instr
transReg2Mem	vascript/ccg/ccg.cpp	/^int Instr::transReg2Mem(const OpInfo* opinfo, const MemMod& m, GPR src)$/;"	f	class:CCG::Instr
transReg2Reg	vascript/ccg/ccg.cpp	/^int Instr::transReg2Reg(const OpInfo* opinfo, GPR dst, GPR src)$/;"	f	class:CCG::Instr
transVect	opencv/include/cvaux.h	/^    float   transVect[3]; \/* rotation matrix and transition vector relatively$/;"	m	struct:CvCamera
transVector	opencv/include/cvaux.h	/^    float transVector[3];$/;"	m	struct:CvStereoCamera
trans_GPR_one	vascript/ccg/ccg.cpp	/^int trans_GPR_one(char* dst, MN x, GPR r)$/;"	f	namespace:CCG
trans_SSE_X2X	vascript/ccg/ccg.cpp	/^int trans_SSE_X2X(char* dst, MN x, XMMS d, XMMS s)$/;"	f	namespace:CCG
trans_X2X	vascript/ccg/ccg.h	/^        int trans_X2X(MN x, XMMS dst, XMMS src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans_b2b	vascript/ccg/ccg.h	/^        int trans_b2b(MN x, GPRB dst, GPRB src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans_e	vascript/ccg/ccg.h	/^        int trans_e(MN x, GPRE src){m.trans(x, src); len = m.trans2bytes(code); return DM_SUCCESS;}$/;"	f	class:CCG::InstructionCoder
trans_e2e	vascript/ccg/ccg.h	/^        int trans_e2e(MN x, GPRE dst, GPRE src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans_m2e	vascript/ccg/ccg.h	/^        int trans_m2e(MN x, GPRE dst, const MemMod& src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans_r2r	vascript/ccg/ccg.cpp	/^int trans_r2r(MN x, GPRR dst, GPRR src)$/;"	f	namespace:CCG
trans_r2r	vascript/ccg/ccg.h	/^        int trans_r2r(MN x, GPRR dst, GPRR src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans_w2w	vascript/ccg/ccg.h	/^        int trans_w2w(MN x, GPRW dst, GPRW src){m.trans(x, dst, src);	len = m.trans2bytes(code); return DM_SUCCESS;};$/;"	f	class:CCG::InstructionCoder
trans_x87_x	vascript/ccg/ccg.cpp	/^int trans_x87_x(char* dst, MN x)$/;"	f	namespace:CCG
transi32	vascript/ccg/ccg.h	/^		template<typename GPRT>	int transi32(int  off,  GPRT base, GPRT index, int scale){  setRegType(base,index); $/;"	f	class:CCG::MemMod
transi32	vascript/ccg/ccg.h	/^		template<typename GPRT>	int transi32(int  off, GPRT base, GPRT index) {  setRegType(base,index); $/;"	f	class:CCG::MemMod
transi32	vascript/ccg/ccg.h	/^		template<typename GPRT>	int transi32(int off, GPRT base){ setRegType(base);  modrm.Mod=2; modrm.RM=base; off32=off;return 0;}$/;"	f	class:CCG::MemMod
transitionMatrix	opencv/include/cv.hpp	/^    Mat transitionMatrix;   \/\/ state transition matrix (A)$/;"	m	class:cv::KalmanFilter
transition_matrix	opencv/include/cvtypes.h	/^    CvMat* transition_matrix;   \/* state transition matrix (A) *\/$/;"	m	struct:CvKalman
tree_error	opencv/include/ml.h	/^    double node_risk, tree_risk, tree_error;$/;"	m	struct:CvDTreeNode
tree_iterator	opencv/include/cxcore.h	/^CVAPI(void*) cvNextTreeNode( CvTreeNodeIterator* tree_iterator );$/;"	v
tree_iterator	opencv/include/cxcore.h	/^CVAPI(void*) cvPrevTreeNode( CvTreeNodeIterator* tree_iterator );$/;"	v
tree_risk	opencv/include/ml.h	/^    double node_risk, tree_risk, tree_error;$/;"	m	struct:CvDTreeNode
tree_storage	opencv/include/ml.h	/^    CvMemStorage* tree_storage;$/;"	m	struct:CvDTreeTrainData
trees	opencv/include/cxflann.h	/^	int trees;                 \/\/ number of randomized trees to use (for kdtree)$/;"	m	struct:cv::flann::CompositeIndexParams
trees	opencv/include/cxflann.h	/^	int trees;                 \/\/ number of randomized trees to use (for kdtree)$/;"	m	struct:cv::flann::KDTreeIndexParams
trees	opencv/include/ml.h	/^    CvForestTree** trees;$/;"	m	class:CvRTrees
truncate_pruned_tree	opencv/include/ml.h	/^    bool  truncate_pruned_tree;$/;"	m	struct:CvDTreeParams
trySmallerWindows	opencv/include/cv.h	/^    int trySmallerWindows; \/\/ if 1, the results may be more accurate,$/;"	m	struct:CvStereoBMState
tsDisabled	opencv/include/cvaux.hpp	/^		tsDisabled		= 10$/;"	e	enum:CvFuzzyMeanShiftTracker::TrackingState
tsNone	opencv/include/cvaux.hpp	/^		tsNone 			= 0,$/;"	e	enum:CvFuzzyMeanShiftTracker::TrackingState
tsSearching	opencv/include/cvaux.hpp	/^		tsSearching 	= 1,$/;"	e	enum:CvFuzzyMeanShiftTracker::TrackingState
tsSetWindow	opencv/include/cvaux.hpp	/^		tsSetWindow 	= 3,$/;"	e	enum:CvFuzzyMeanShiftTracker::TrackingState
tsTracking	opencv/include/cvaux.hpp	/^		tsTracking 		= 2,$/;"	e	enum:CvFuzzyMeanShiftTracker::TrackingState
type	bmp.h	/^			unsigned short type; $/;"	m	struct:__anon115::__anon116::__anon118
type	bmp.h	/^	unsigned short type;      \/*Specifies the file type. It must be set to the signature word BM (0x4D42) to indicate bitmap. *\/$/;"	m	struct:__anon112
type	opencv/include/cxcore.h	/^    int type() const { return matrix ? CV_MAT_TYPE(matrix->type) : 0; }$/;"	f	class:CvMatrix
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon70
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon71
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon72
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon73
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon74
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon75
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon76
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon77
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon78
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon79
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon80
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon81
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon82
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon83
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon84
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon85
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon86
type	opencv/include/cxcore.hpp	/^           type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::DataType::__anon87
type	opencv/include/cxcore.hpp	/^    enum { depth = DataDepth<_Tp>::value, channels = cn, type = CV_MAKETYPE(depth, channels) };$/;"	e	enum:cv::Vec::__anon69
type	opencv/include/cxcore.hpp	/^    int type;$/;"	m	class:cv::TermCriteria
type	opencv/include/cxmat.hpp	/^inline int Mat::type() const { return CV_MAT_TYPE(flags); }$/;"	f	class:cv::Mat
type	opencv/include/cxmat.hpp	/^inline int MatND::type() const { return CV_MAT_TYPE(flags); }$/;"	f	class:cv::MatND
type	opencv/include/cxmat.hpp	/^inline int SparseMat::type() const$/;"	f	class:cv::SparseMat
type	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int MatND_<_Tp>::type() const$/;"	f	class:cv::MatND_
type	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int Mat_<_Tp>::type() const$/;"	f	class:cv::Mat_
type	opencv/include/cxmat.hpp	/^template<typename _Tp> inline int SparseMat_<_Tp>::type() const$/;"	f	class:cv::SparseMat_
type	opencv/include/cxoperations.hpp	/^    int type() const { return DataType<_Tp>::type; }$/;"	f	class:cv::Vector
type	opencv/include/cxoperations.hpp	/^inline int FileNode::type() const { return !node ? NONE : (node->tag & TYPE_MASK); }$/;"	f	class:cv::FileNode
type	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline int Seq<_Tp>::type() const$/;"	f	class:cv::Seq
type	opencv/include/cxtypes.h	/^    int     type;$/;"	m	struct:CvHistogram
type	opencv/include/cxtypes.h	/^    int    type;  \/* may be combination of$/;"	m	struct:CvTermCriteria
type	opencv/include/cxtypes.h	/^    int type;$/;"	m	struct:CvMat
type	opencv/include/cxtypes.h	/^    int type;$/;"	m	struct:CvMatND
type	opencv/include/cxtypes.h	/^    int type;$/;"	m	struct:CvSparseMat
type	opencv/include/ml.h	/^    int type;$/;"	m	struct:CvVectors
type	vascript/symbol.h	/^        argtype_t type;$/;"	m	class:SymbolInfo
type	vascript/vastree.h	/^        int type;$/;"	m	class:node
type_name	opencv/include/cxtypes.h	/^    const char* type_name;$/;"	m	struct:CvTypeInfo
type_specifier	vascript/vascript.y	/^type_specifier: TK_VOID {  $$ = 0; printf("VOID GET\\n");}$/;"	l
u	opencv/include/cvaux.h	/^    } u;$/;"	m	struct:CvEHMM	typeref:union:CvEHMM::__anon106
u	opencv/include/cxcore.hpp	/^    Mat u, w, vt;$/;"	m	class:cv::SVD
u	opencv/include/cxtypes.h	/^    uint64 u;$/;"	m	union:Cv64suf
u	opencv/include/cxtypes.h	/^    unsigned u;$/;"	m	union:Cv32suf
u	opencv/include/ml.h	/^    unsigned short* u;$/;"	m	struct:CvPair16u32s
u16	bmptest.cpp	/^typedef unsigned short u16;$/;"	t	file:
u32	bmptest.cpp	/^typedef unsigned int u32;$/;"	t	file:
u32	vascript/vacg.h	/^typedef unsigned int u32;$/;"	t
u8	bmp.h	/^typedef unsigned char u8;$/;"	t
u8	bmptest.cpp	/^typedef unsigned char u8;$/;"	t	file:
u8	vascript/vacg.h	/^typedef unsigned char u8;$/;"	t
uc	vascript/ccg/ccg.h	/^            unsigned char uc;$/;"	m	union:CCG::Imm::__anon161
uchar	opencv/include/cxtypes.h	/^typedef unsigned char uchar;$/;"	t
ucp	vascript/ccg/ccg.h	/^            unsigned char ucp[8];$/;"	m	union:CCG::Imm::__anon161
ud	vascript/ccg/ccg.h	/^            unsigned int ud;$/;"	m	union:CCG::Imm::__anon161
uint64	opencv/include/cxtypes.h	/^typedef uint64_t uint64;$/;"	t
uint64	opencv/include/cxtypes.h	/^typedef unsigned __int64 uint64;$/;"	t
ul	vascript/ccg/ccg.h	/^            U64 ul;$/;"	m	union:CCG::Imm::__anon161
undefFlag	vascript/ccg/opcodeDes.h	/^        unsigned int undefFlag;$/;"	m	class:CCG::OpInfo
undistImg	opencv/include/cvaux.h	/^    CvMat*  undistImg;$/;"	m	class:CvCalibFilter
undistMap	opencv/include/cvaux.h	/^    CvMat*  undistMap[MAX_CAMERAS][2];$/;"	m	class:CvCalibFilter
undistortion_map	opencv/include/cvcompat.h	/^                                CvArr* undistortion_map,$/;"	v
uniform	opencv/include/cxoperations.hpp	/^inline double RNG::uniform(double a, double b) { return ((float)*this)*(b - a) + a; }$/;"	f	class:cv::RNG
uniform	opencv/include/cxoperations.hpp	/^inline float RNG::uniform(float a, float b) { return ((float)*this)*(b - a) + a; }$/;"	f	class:cv::RNG
uniform	opencv/include/cxoperations.hpp	/^inline int RNG::uniform(int a, int b) { return a == b ? a : next()%(b - a) + a; }$/;"	f	class:cv::RNG
uniquenessRatio	opencv/include/cv.h	/^    int uniquenessRatio;   \/\/ accept the computed disparity d* only if$/;"	m	struct:CvStereoBMState
unput	vascript/release/vaslexer.cpp	199;"	d	file:
upper_bound_n	opencv/include/ml.h	/^    double upper_bound_n;$/;"	m	struct:CvSVMSolutionInfo
upper_bound_p	opencv/include/ml.h	/^    double upper_bound_p;$/;"	m	struct:CvSVMSolutionInfo
uq	vascript/ccg/ccg.h	/^            U64 uq;$/;"	m	union:CCG::Imm::__anon161
use_1se_rule	opencv/include/ml.h	/^    bool  use_1se_rule;$/;"	m	struct:CvDTreeParams
use_surrogates	opencv/include/ml.h	/^    bool  use_surrogates;$/;"	m	struct:CvDTreeParams
ushort	opencv/include/cxtypes.h	/^typedef unsigned short ushort;$/;"	t
uw	vascript/ccg/ccg.h	/^            unsigned short uw;$/;"	m	union:CCG::Imm::__anon161
v	opencv/include/cvaux.h	/^    uchar          v[3];$/;"	m	struct:CvBGPixelCStatTable
v	opencv/include/cvaux.h	/^    uchar          v[6];$/;"	m	struct:CvBGPixelCCStatTable
vaCG	vascript/vacg.h	/^        vaCG():f(NULL), f0(NULL){}$/;"	f	class:vaCG
vaCG	vascript/vacg.h	/^class vaCG$/;"	c
vacgOBJ	vascript/Makefile	/^vacgOBJ=$(call getobjs, $(vacgSRC))$/;"	m
vacgSRC	vascript/Makefile	/^vacgSRC= OBJ_DIR\/vasparser.cpp OBJ_DIR\/vaslexer.cpp  parserdriver.cpp testvas.cpp vacg.cpp node.cpp symbol.cpp graph.cpp ..\/global.cpp ..\/detect.cpp ..\/filterKernel.cpp ..\/transforKernel.cpp ccg\/ccg.cpp$/;"	m
vacgmalloc	vascript/vacg.h	/^        static inline u8* vacgmalloc(int size){$/;"	f	class:vaCG
val	opencv/include/cxcore.hpp	/^    _Tp val[cn];$/;"	m	class:cv::Vec
val	opencv/include/cxtypes.h	/^    double val[4];$/;"	m	struct:CvScalar
valid	opencv/include/cvaux.h	/^    CvBool valid;$/;"	m	struct:__anon109
valoffset	opencv/include/cxtypes.h	/^    int valoffset;$/;"	m	struct:CvSparseMat
value	opencv/include/cvaux.hpp	/^	double value, centre;$/;"	m	class:CvFuzzyCurve
value	opencv/include/cvaux.hpp	/^	double x, y, value;$/;"	m	class:CvFuzzyPoint
value	opencv/include/cvtypes.h	/^    CvScalar value; \/* average color of the connected component *\/$/;"	m	struct:CvConnectedComp
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<bool> { public: enum { value = CV_8U, fmt=(int)'u' }; };$/;"	e	enum:cv::DataDepth::__anon60
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<double> { public: enum { value = CV_64F, fmt=(int)'d' }; };$/;"	e	enum:cv::DataDepth::__anon67
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<float> { public: enum { value = CV_32F, fmt=(int)'f' }; };$/;"	e	enum:cv::DataDepth::__anon66
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<int> { public: enum { value = CV_32S, fmt=(int)'i' }; };$/;"	e	enum:cv::DataDepth::__anon65
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<schar> { public: enum { value = CV_8S, fmt=(int)'c' }; };$/;"	e	enum:cv::DataDepth::__anon62
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<short> { public: enum { value = CV_16S, fmt=(int)'s' }; };$/;"	e	enum:cv::DataDepth::__anon64
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<uchar> { public: enum { value = CV_8U, fmt=(int)'u' }; };$/;"	e	enum:cv::DataDepth::__anon61
value	opencv/include/cxcore.hpp	/^template<> class DataDepth<ushort> { public: enum { value = CV_16U, fmt=(int)'w' }; };$/;"	e	enum:cv::DataDepth::__anon63
value	opencv/include/cxcore.hpp	/^template<typename _Tp> class CV_EXPORTS DataDepth { public: enum { value = -1, fmt=(int)'\\0' }; };$/;"	e	enum:cv::DataDepth::__anon59
value	opencv/include/cxcore.hpp	/^template<typename _Tp> class DataDepth<_Tp*> { public: enum { value = CV_USRTYPE1, fmt=(int)'r' }; };$/;"	e	enum:cv::DataDepth::__anon68
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp SparseMat::value(const int* idx, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp SparseMat::value(int i0, int i1, int i2, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp SparseMat::value(int i0, int i1, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp SparseMat::value(int i0, size_t* hashval) const$/;"	f	class:cv::SparseMat
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& SparseMat::value(Node* n)$/;"	f	class:cv::SparseMat
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline _Tp& SparseMatIterator::value() const$/;"	f	class:cv::SparseMatIterator
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& SparseMat::value(const Node* n) const$/;"	f	class:cv::SparseMat
value	opencv/include/cxmat.hpp	/^template<typename _Tp> inline const _Tp& SparseMatConstIterator::value() const$/;"	f	class:cv::SparseMatConstIterator
value	opencv/include/ml.h	/^    double value;$/;"	m	struct:CvDTreeNode
valueOffset	opencv/include/cxcore.hpp	/^        int valueOffset;$/;"	m	struct:cv::SparseMat::Hdr
value_type	opencv/include/cxcore.hpp	/^    typedef Complex<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Point3_<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Point_<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Range value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Rect_<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Scalar_<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Size_<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef Vec<_Tp, cn> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Allocator
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::AutoBuffer
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::MatConstIterator_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::MatND_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Mat_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Point3_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Point_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Rect_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Size_
value_type	opencv/include/cxcore.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Vec
value_type	opencv/include/cxcore.hpp	/^    typedef bool value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef double value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef float value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef int value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef schar value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef short value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef std::complex<_Tp> value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef uchar value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxcore.hpp	/^    typedef ushort value_type;$/;"	t	class:cv::DataType
value_type	opencv/include/cxoperations.hpp	/^    typedef _Tp value_type;$/;"	t	class:cv::Vector
value_type	vascript/vacg.h	/^    typedef void*& value_type;$/;"	t	class:VaVar
values	opencv/include/cxtypes.h	/^    float *values;$/;"	m	struct:_IplConvKernelFP
values	opencv/include/cxtypes.h	/^    int *values;$/;"	m	struct:_IplConvKernel
values	opencv/include/ml.h	/^    CvMat* values;$/;"	m	class:CvMLData
var	vascript/node.hxx	/^	SymbolInfo var;$/;"	m	class:AstVarExpr
var	vascript/node.hxx	/^	VaVar var;$/;"	m	class:AstConstExpr
var	vascript/vacg.h	/^        void* var;$/;"	m	union:VaVar::__anon122
varTable	vascript/graph.hxx	/^	VarTable* varTable;$/;"	m	class:FlowGraph
var_all	opencv/include/ml.h	/^    int     var_count, var_all;$/;"	m	class:CvNormalBayesClassifier
var_all	opencv/include/ml.h	/^    int sample_count, var_all, var_count, max_c_count;$/;"	m	struct:CvDTreeTrainData
var_all	opencv/include/ml.h	/^    int var_all;$/;"	m	class:CvSVM
var_count	opencv/include/ml.h	/^    int     var_count, var_all;$/;"	m	class:CvNormalBayesClassifier
var_count	opencv/include/ml.h	/^    int max_k, var_count;$/;"	m	class:CvKNearest
var_count	opencv/include/ml.h	/^    int sample_count, var_all, var_count, max_c_count;$/;"	m	struct:CvDTreeTrainData
var_count	opencv/include/ml.h	/^    int var_count;$/;"	m	class:CvSVMSolver
var_idx	opencv/include/ml.h	/^    CvMat*  var_idx;$/;"	m	class:CvNormalBayesClassifier
var_idx	opencv/include/ml.h	/^    CvMat* var_idx;$/;"	m	class:CvSVM
var_idx	opencv/include/ml.h	/^    CvMat* var_idx;$/;"	m	struct:CvDTreeTrainData
var_idx	opencv/include/ml.h	/^    int var_idx;$/;"	m	struct:CvDTreeSplit
var_idx_mask	opencv/include/ml.h	/^    CvMat* var_idx_mask;$/;"	m	class:CvMLData
var_idx_out	opencv/include/ml.h	/^    CvMat* var_idx_out; \/\/ mat$/;"	m	class:CvMLData
var_importance	opencv/include/ml.h	/^    CvMat* var_importance;$/;"	m	class:CvDTree
var_importance	opencv/include/ml.h	/^    CvMat* var_importance;$/;"	m	class:CvRTrees
var_type	opencv/include/ml.h	/^    CvMat* var_type; \/\/ i-th element =$/;"	m	struct:CvDTreeTrainData
var_type	vascript/vacg.h	/^	argtype_t var_type;$/;"	m	class:VaVar
var_types	opencv/include/ml.h	/^    CvMat* var_types;$/;"	m	class:CvMLData
var_types_out	opencv/include/ml.h	/^    CvMat* var_types_out; \/\/ mat$/;"	m	class:CvMLData
variance	opencv/include/cvaux.h	/^    double      variance[CV_BGFG_MOG_NCOLORS];$/;"	m	struct:CvGaussBGValues
variance_init	opencv/include/cvaux.h	/^    double  weight_init, variance_init;$/;"	m	struct:CvGaussBGStatModelParams
vasFlexLexer	vascript/vasFlexLexer.h	/^        vasFlexLexer( std::istream* arg_yyin = 0, std::ostream* arg_yyout = 0 ):yyFlexLexer(arg_yyin, arg_yyout){};$/;"	f	class:vasFlexLexer
vasFlexLexer	vascript/vasFlexLexer.h	/^class vasFlexLexer :public yyFlexLexer{$/;"	c
vasParserDriver	vascript/parserdriver.h	/^        vasParserDriver(){ $/;"	f	class:vasParserDriver
vasParserDriver	vascript/parserdriver.h	/^class vasParserDriver$/;"	c
vaslexer	vascript/parserdriver.h	/^        vasFlexLexer vaslexer;$/;"	m	class:vasParserDriver
verbose	opencv/include/cvaux.hpp	/^    bool verbose;$/;"	m	class:cv::FernClassifier
verbose	opencv/include/cvaux.hpp	/^    bool verbose;$/;"	m	class:cv::LDetector
verbose	opencv/include/cvaux.hpp	/^    bool verbose;$/;"	m	class:cv::PlanarObjectDetector
version	opencv/include/cxtypes.h	/^    const char* version;$/;"	m	struct:CvModuleInfo
vertex_weights	opencv/include/cvaux.h	/^    float* vertex_weights;$/;"	m	struct:CvCliqueFinder
verticalEdgeLeft	opencv/include/cvaux.hpp	/^		int verticalEdgeLeft, verticalEdgeRight, horizontalEdgeTop, horizontalEdgeBottom;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
verticalEdgeRight	opencv/include/cvaux.hpp	/^		int verticalEdgeLeft, verticalEdgeRight, horizontalEdgeTop, horizontalEdgeBottom;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
vscale	opencv/include/cxcore.h	/^    float       hscale, vscale;$/;"	m	struct:CvFont
vt	opencv/include/cxcore.hpp	/^    Mat u, w, vt;$/;"	m	class:cv::SVD
vtx	opencv/include/cvaux.hpp	/^    vector<Point3f> vtx;$/;"	m	class:cv::Mesh3D
vtx	opencv/include/cxcore.h	/^    CvGraphVtx* vtx;       \/* current graph vertex (or current edge origin) *\/$/;"	m	struct:CvGraphScanner
vtxBuf	opencv/include/cv.h	/^    CvMat* vtxBuf;$/;"	m	struct:CvStereoGCState
w	opencv/include/cvvidsurv.hpp	/^    float   w,h; \/* blob sizes      *\/$/;"	m	struct:CvBlob
w	opencv/include/cxcore.hpp	/^    Mat u, w, vt;$/;"	m	class:cv::SVD
w	vascript/ccg/ccg.h	/^	short w;$/;"	m	union:CCG::__anon160
w	vascript/ccg/ccg.h	/^            short w;$/;"	m	union:CCG::Imm::__anon161
w	vascript/ccg/opcodeDes.h	/^                unsigned int w:1;$/;"	m	struct:CCG::OPC1::__anon130::__anon131
warpSize	opencv/include/cvaux.h	/^    CvSize warpSize;$/;"	m	struct:CvStereoCamera
wbuf	opencv/include/ml.h	/^    CvMat* wbuf;$/;"	m	class:CvANN_MLP
weak	opencv/include/ml.h	/^    CvSeq* weak;$/;"	m	class:CvBoost
weak_count	opencv/include/ml.h	/^    int weak_count;$/;"	m	struct:CvBoostParams
weak_eval	opencv/include/ml.h	/^    CvMat* weak_eval;$/;"	m	class:CvBoost
weight	opencv/include/cvaux.h	/^    double      weight;$/;"	m	struct:CvGaussBGValues
weight	opencv/include/cvaux.h	/^    float* weight;      \/*array of mixture weights. Summ of all weights in state is 1. *\/$/;"	m	struct:CvEHMMState
weight	opencv/include/cvtypes.h	/^        float weight;$/;"	m	struct:CvHaarFeature::__anon38
weight_init	opencv/include/cvaux.h	/^    double  weight_init, variance_init;$/;"	m	struct:CvGaussBGStatModelParams
weight_trim_rate	opencv/include/ml.h	/^    double weight_trim_rate;$/;"	m	struct:CvBoostParams
weighted	opencv/include/cvaux.h	/^    int weighted;$/;"	m	struct:CvCliqueFinder
weighted_edges	opencv/include/cvaux.h	/^    int weighted_edges;    $/;"	m	struct:CvCliqueFinder
weights	opencv/include/ml.h	/^    CvMat* weights;$/;"	m	class:CvBoost
weights	opencv/include/ml.h	/^    CvMat* weights;$/;"	m	class:CvEM
weights	opencv/include/ml.h	/^    const CvMat* weights;$/;"	m	struct:CvEMParams
weights	opencv/include/ml.h	/^    double** weights;$/;"	m	class:CvANN_MLP
whichKernel	KeyBoard.cpp	/^int whichKernel = 7;$/;"	v
whichKernel	detect.cpp	/^static int whichKernel = 0;$/;"	m	namespace:dmFrameSimple	file:
whichKernel	dmvideo.cpp	/^static int whichKernel = 0;$/;"	v	file:
wholeSize	opencv/include/cv.hpp	/^    Size wholeSize;$/;"	m	class:cv::FilterEngine
width	Kernel.h	/^	int width;$/;"	m	struct:dmFrameSimple::__anon165
width	bmp.h	/^			unsigned int width; $/;"	m	struct:__anon115::__anon116::__anon118
width	bmp.h	/^	unsigned int width;      \/**\/$/;"	m	struct:__anon113
width	opencv/include/cvaux.h	/^    float width;$/;"	m	struct:CvLCMEdge
width	opencv/include/cvaux.hpp	/^		int width, height, maxWidth, maxHeight, ellipseHeight, ellipseWidth;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
width	opencv/include/cvcompat.h	/^    int     width;                  \/* width of the image  ( in pixels )                *\/$/;"	m	struct:_CvPixelPosition8u
width	opencv/include/cvcompat.h	/^    int     width;$/;"	m	struct:_CvPixelPosition32f
width	opencv/include/cvcompat.h	/^    int     width;$/;"	m	struct:_CvPixelPosition8s
width	opencv/include/cxcore.h	/^    int width() const { return image ? image->width : 0; }$/;"	f	class:CvImage
width	opencv/include/cxcore.hpp	/^    _Tp width, height;$/;"	m	class:cv::Size_
width	opencv/include/cxcore.hpp	/^    _Tp x, y, width, height;$/;"	m	class:cv::Rect_
width	opencv/include/cxtypes.h	/^        int width;$/;"	m	union:CvMat::__anon33
width	opencv/include/cxtypes.h	/^    float width;$/;"	m	struct:CvSize2D32f
width	opencv/include/cxtypes.h	/^    int  width;             \/* Image width in pixels.                           *\/$/;"	m	struct:_IplImage
width	opencv/include/cxtypes.h	/^    int  width;$/;"	m	struct:_IplROI
width	opencv/include/cxtypes.h	/^    int width;$/;"	m	struct:CvRect
width	opencv/include/cxtypes.h	/^    int width;$/;"	m	struct:__anon36
widthStep	opencv/include/cxtypes.h	/^    int  widthStep;         \/* Size of aligned image row in bytes.    *\/$/;"	m	struct:_IplImage
winSigma	opencv/include/cvaux.hpp	/^    double winSigma;$/;"	m	struct:cv::HOGDescriptor
winSize	opencv/include/cvaux.hpp	/^    Size winSize;$/;"	m	struct:cv::HOGDescriptor
win_size	opencv/include/cvaux.h	/^    int     win_size;               \/* = 1\/alpha *\/$/;"	m	struct:CvGaussBGStatModelParams
work_type	opencv/include/cxcore.hpp	/^    typedef Point3_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef Point_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef Rect_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef Scalar_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef Size_<typename DataType<_Tp>::work_type> work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef Vec<typename DataType<_Tp>::work_type, cn> work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef int work_type;$/;"	t	class:cv::DataType
work_type	opencv/include/cxcore.hpp	/^    typedef value_type work_type;$/;"	t	class:cv::DataType
work_var_count	opencv/include/ml.h	/^    int ord_var_count, cat_var_count, work_var_count;$/;"	m	struct:CvDTreeTrainData
write	opencv/include/cxoperations.hpp	/^inline void write(FileStorage& fs, const Range& r )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^inline void write(FileStorage& fs, const string& name, const Range& r )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^static inline void write( FileStorage& fs, const string& name, const string& value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^static inline void write( FileStorage& fs, const string& name, double value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^static inline void write( FileStorage& fs, const string& name, float value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^static inline void write( FileStorage& fs, const string& name, int value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<> inline void write(FileStorage& fs, const double& value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<> inline void write(FileStorage& fs, const float& value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<> inline void write(FileStorage& fs, const int& value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<> inline void write(FileStorage& fs, const string& value )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline void write(FileStorage& fs, const Vec<_Tp, cn>& v )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp, int cn> inline void write(FileStorage& fs, const string& name, const Vec<_Tp, cn>& v )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const Complex<_Tp>& c )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const Point3_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const Point_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const Rect_<_Tp>& r )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const Scalar_<_Tp>& s )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const Size_<_Tp>& sz )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const string& name, const Complex<_Tp>& c )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const string& name, const Point3_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const string& name, const Point_<_Tp>& pt )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const string& name, const Rect_<_Tp>& r )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const string& name, const Scalar_<_Tp>& s )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline void write(FileStorage& fs, const string& name, const Size_<_Tp>& sz )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline void write( FileStorage& fs, const vector<_Tp>& vec )$/;"	f	namespace:cv
write	opencv/include/cxoperations.hpp	/^template<typename _Tp> static inline void write(FileStorage& fs, const _Tp& value)$/;"	f	namespace:cv
write	opencv/include/cxtypes.h	/^    CvWriteFunc write;$/;"	m	struct:CvTypeInfo
write_bmp	bmp.cpp	/^__inline__ int write_bmp(char * filename, bmp_t* bmp,$/;"	f
write_bmp	bmp.cpp	/^__inline__ int write_bmp(char * filename,$/;"	f
write_gray256	bmp.cpp	/^__inline__ int write_gray256(char * filename,$/;"	f
write_gray256	bmp.cpp	/^__inline__ int write_gray256(char* filename, bmp_t* bmp, u8* pixel)$/;"	f
writer	opencv/include/cxcore.h	/^CVAPI(CvSeq*)  cvEndWriteSeq( CvSeqWriter* writer );$/;"	v
writer	opencv/include/cxcore.h	/^CVAPI(void)   cvFlushSeqWriter( CvSeqWriter* writer );$/;"	v
writer	opencv/include/cxcore.h	/^CVAPI(void)  cvCreateSeqBlock( CvSeqWriter* writer );$/;"	v
writer	opencv/include/highgui.h	/^CVAPI(void) cvReleaseVideoWriter( CvVideoWriter** writer );$/;"	v
writer	opencv/include/highgui.hpp	/^    Ptr<CvVideoWriter> writer;$/;"	m	class:cv::VideoWriter
x	opencv/include/cvaux.hpp	/^		int x, y;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
x	opencv/include/cvaux.hpp	/^	double x, y, value;$/;"	m	class:CvFuzzyPoint
x	opencv/include/cvcompat.h	/^    int     x;                      \/* current x coordinate ( in pixels )               *\/$/;"	m	struct:_CvPixelPosition8u
x	opencv/include/cvcompat.h	/^    int     x;$/;"	m	struct:_CvPixelPosition32f
x	opencv/include/cvcompat.h	/^    int     x;$/;"	m	struct:_CvPixelPosition8s
x	opencv/include/cvvidsurv.hpp	/^    float   x,y; \/* blob position   *\/$/;"	m	struct:CvBlob
x	opencv/include/cxcore.hpp	/^    _Tp x, y, width, height;$/;"	m	class:cv::Rect_
x	opencv/include/cxcore.hpp	/^    _Tp x, y, z;$/;"	m	class:cv::Point3_
x	opencv/include/cxcore.hpp	/^    _Tp x, y;$/;"	m	class:cv::Point_
x	opencv/include/cxtypes.h	/^    double x;$/;"	m	struct:CvPoint2D64f
x	opencv/include/cxtypes.h	/^    double x;$/;"	m	struct:CvPoint3D64f
x	opencv/include/cxtypes.h	/^    float x;$/;"	m	struct:CvPoint2D32f
x	opencv/include/cxtypes.h	/^    float x;$/;"	m	struct:CvPoint3D32f
x	opencv/include/cxtypes.h	/^    int x;$/;"	m	struct:CvPoint
x	opencv/include/cxtypes.h	/^    int x;$/;"	m	struct:CvRect
x1	opencv/include/cvaux.hpp	/^        uchar x1, y1, x2, y2;$/;"	m	struct:cv::FernClassifier::Feature
x2	opencv/include/cvaux.hpp	/^        uchar x1, y1, x2, y2;$/;"	m	struct:cv::FernClassifier::Feature
xGc	opencv/include/cvaux.hpp	/^		int xGc, yGc;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
xOffset	opencv/include/cxtypes.h	/^    int  xOffset;$/;"	m	struct:_IplROI
x_max	opencv/include/cvaux.hpp	/^        float x_min, x_max, y_min, y_max, z_min, z_max;		$/;"	m	struct:cv::Octree::Node
x_min	opencv/include/cvaux.hpp	/^        float x_min, x_max, y_min, y_max, z_min, z_max;		$/;"	m	struct:cv::Octree::Node
xmm0	vascript/ccg/ccg.h	/^xmm0 = 40,$/;"	e	enum:CCG::__anon146
xmm1	vascript/ccg/ccg.h	/^xmm1 = 41,$/;"	e	enum:CCG::__anon146
xmm10	vascript/ccg/ccg.h	/^xmm10= 50,$/;"	e	enum:CCG::__anon146
xmm11	vascript/ccg/ccg.h	/^xmm11= 51,$/;"	e	enum:CCG::__anon146
xmm12	vascript/ccg/ccg.h	/^xmm12= 52,$/;"	e	enum:CCG::__anon146
xmm13	vascript/ccg/ccg.h	/^xmm13= 53,$/;"	e	enum:CCG::__anon146
xmm14	vascript/ccg/ccg.h	/^xmm14= 54,$/;"	e	enum:CCG::__anon146
xmm15	vascript/ccg/ccg.h	/^xmm15= 55,$/;"	e	enum:CCG::__anon146
xmm2	vascript/ccg/ccg.h	/^xmm2 = 42,$/;"	e	enum:CCG::__anon146
xmm3	vascript/ccg/ccg.h	/^xmm3 = 43,$/;"	e	enum:CCG::__anon146
xmm4	vascript/ccg/ccg.h	/^xmm4 = 44,$/;"	e	enum:CCG::__anon146
xmm5	vascript/ccg/ccg.h	/^xmm5 = 45,$/;"	e	enum:CCG::__anon146
xmm6	vascript/ccg/ccg.h	/^xmm6 = 46,$/;"	e	enum:CCG::__anon146
xmm7	vascript/ccg/ccg.h	/^xmm7 = 47,$/;"	e	enum:CCG::__anon146
xmm8	vascript/ccg/ccg.h	/^xmm8 = 48,$/;"	e	enum:CCG::__anon146
xmm9	vascript/ccg/ccg.h	/^xmm9 = 49,$/;"	e	enum:CCG::__anon146
xpelspermeter	bmp.h	/^			int xpelspermeter; $/;"	m	struct:__anon115::__anon116::__anon118
xpelspermeter	bmp.h	/^	int xpelspermeter;       \/**\/$/;"	m	struct:__anon113
y	opencv/include/cvaux.hpp	/^		int x, y;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
y	opencv/include/cvaux.hpp	/^	double x, y, value;$/;"	m	class:CvFuzzyPoint
y	opencv/include/cvvidsurv.hpp	/^    float   x,y; \/* blob position   *\/$/;"	m	struct:CvBlob
y	opencv/include/cxcore.hpp	/^    _Tp x, y, width, height;$/;"	m	class:cv::Rect_
y	opencv/include/cxcore.hpp	/^    _Tp x, y, z;$/;"	m	class:cv::Point3_
y	opencv/include/cxcore.hpp	/^    _Tp x, y;$/;"	m	class:cv::Point_
y	opencv/include/cxtypes.h	/^    double y;$/;"	m	struct:CvPoint2D64f
y	opencv/include/cxtypes.h	/^    double y;$/;"	m	struct:CvPoint3D64f
y	opencv/include/cxtypes.h	/^    float y;$/;"	m	struct:CvPoint2D32f
y	opencv/include/cxtypes.h	/^    float y;$/;"	m	struct:CvPoint3D32f
y	opencv/include/cxtypes.h	/^    int y;$/;"	m	struct:CvPoint
y	opencv/include/cxtypes.h	/^    int y;$/;"	m	struct:CvRect
y	opencv/include/ml.h	/^    schar* y;$/;"	m	class:CvSVMSolver
y1	opencv/include/cvaux.hpp	/^        uchar x1, y1, x2, y2;$/;"	m	struct:cv::FernClassifier::Feature
y2	opencv/include/cvaux.hpp	/^        uchar x1, y1, x2, y2;$/;"	m	struct:cv::FernClassifier::Feature
yGc	opencv/include/cvaux.hpp	/^		int xGc, yGc;$/;"	m	class:CvFuzzyMeanShiftTracker::SearchWindow
yOffset	opencv/include/cxtypes.h	/^    int  yOffset;$/;"	m	struct:_IplROI
y_max	opencv/include/cvaux.hpp	/^        float x_min, x_max, y_min, y_max, z_min, z_max;		$/;"	m	struct:cv::Octree::Node
y_min	opencv/include/cvaux.hpp	/^        float x_min, x_max, y_min, y_max, z_min, z_max;		$/;"	m	struct:cv::Octree::Node
ypelspermeter	bmp.h	/^			int ypelspermeter; $/;"	m	struct:__anon115::__anon116::__anon118
ypelspermeter	bmp.h	/^	int ypelspermeter;       \/**\/$/;"	m	struct:__anon113
yyFlexLexer	vascript/flexbison/flexlexer.h	/^class yyFlexLexer : public FlexLexer {$/;"	c
yyFlexLexer	vascript/release/vaslexer.cpp	/^yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )$/;"	f	class:yyFlexLexer
yyFlexLexer	vascript/release/vaslexer.cpp	23;"	d	file:
yyFlexLexer	vascript/vasFlexLexer.h	21;"	d
yyFlexLexer	vascript/vasFlexLexer.h	22;"	d
yyFlexLexer	vascript/vasFlexLexer.h	24;"	d
yyFlexLexerOnce	vascript/flexbison/flexlexer.h	101;"	d
yy_accept	vascript/release/vaslexer.cpp	/^static yyconst flex_int16_t yy_accept[349] =$/;"	v	file:
yy_at_bol	vascript/release/vaslexer.cpp	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	vascript/release/vaslexer.cpp	/^static yyconst flex_int16_t yy_base[355] =$/;"	v	file:
yy_bs_column	vascript/release/vaslexer.cpp	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	vascript/release/vaslexer.cpp	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	vascript/release/vaslexer.cpp	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	vascript/release/vaslexer.cpp	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_state	vascript/release/vaslexer.cpp	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	vascript/release/vaslexer.cpp	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	vascript/flexbison/flexlexer.h	/^	char* yy_c_buf_p;$/;"	m	class:yyFlexLexer
yy_ch_buf	vascript/release/vaslexer.cpp	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	vascript/release/vaslexer.cpp	/^static yyconst flex_int16_t yy_chk[632] =$/;"	v	file:
yy_create_buffer	vascript/release/vaslexer.cpp	/^    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )$/;"	f	class:yyFlexLexer
yy_current_buffer	vascript/flexbison/flexlexer.h	/^	struct yy_buffer_state* yy_current_buffer;$/;"	m	class:yyFlexLexer	typeref:struct:yyFlexLexer::yy_buffer_state
yy_def	vascript/release/vaslexer.cpp	/^static yyconst flex_int16_t yy_def[355] =$/;"	v	file:
yy_delete_buffer	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )$/;"	f	class:yyFlexLexer
yy_did_buffer_switch_on_eof	vascript/flexbison/flexlexer.h	/^	int yy_did_buffer_switch_on_eof;$/;"	m	class:yyFlexLexer
yy_ec	vascript/release/vaslexer.cpp	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fill_buffer	vascript/release/vaslexer.cpp	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	vascript/flexbison/flexlexer.h	/^	int yy_flex_debug;	\/\/ only has effect with -d or "%option debug"$/;"	m	class:FlexLexer
yy_flex_strlen	vascript/release/vaslexer.cpp	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	vascript/release/vaslexer.cpp	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )$/;"	f	class:yyFlexLexer
yy_full_lp	vascript/flexbison/flexlexer.h	/^	int yy_full_lp;$/;"	m	class:yyFlexLexer
yy_full_match	vascript/flexbison/flexlexer.h	/^	char* yy_full_match;$/;"	m	class:yyFlexLexer
yy_full_state	vascript/flexbison/flexlexer.h	/^	int* yy_full_state;$/;"	m	class:yyFlexLexer
yy_get_next_buffer	vascript/release/vaslexer.cpp	/^int yyFlexLexer::yy_get_next_buffer()$/;"	f	class:yyFlexLexer
yy_get_previous_state	vascript/release/vaslexer.cpp	/^    yy_state_type yyFlexLexer::yy_get_previous_state()$/;"	f	class:yyFlexLexer
yy_hold_char	vascript/flexbison/flexlexer.h	/^	char yy_hold_char;$/;"	m	class:yyFlexLexer
yy_init	vascript/flexbison/flexlexer.h	/^	int yy_init;		\/\/ whether we need to initialize$/;"	m	class:yyFlexLexer
yy_init_buffer	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )$/;"	f	class:yyFlexLexer
yy_input_file	vascript/release/vaslexer.cpp	/^	std::istream* yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	vascript/release/vaslexer.cpp	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	vascript/release/vaslexer.cpp	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	vascript/flexbison/flexlexer.h	/^	char* yy_last_accepting_cpos;$/;"	m	class:yyFlexLexer
yy_last_accepting_state	vascript/flexbison/flexlexer.h	/^	yy_state_type yy_last_accepting_state;$/;"	m	class:yyFlexLexer
yy_load_buffer_state	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_load_buffer_state()$/;"	f	class:yyFlexLexer
yy_looking_for_trail_begin	vascript/flexbison/flexlexer.h	/^	int yy_looking_for_trail_begin;$/;"	m	class:yyFlexLexer
yy_lp	vascript/flexbison/flexlexer.h	/^	int yy_lp;$/;"	m	class:yyFlexLexer
yy_meta	vascript/release/vaslexer.cpp	/^static yyconst flex_int32_t yy_meta[66] =$/;"	v	file:
yy_more_flag	vascript/flexbison/flexlexer.h	/^	int yy_more_flag;$/;"	m	class:yyFlexLexer
yy_more_len	vascript/flexbison/flexlexer.h	/^	int yy_more_len;$/;"	m	class:yyFlexLexer
yy_more_offset	vascript/flexbison/flexlexer.h	/^	int yy_more_offset;$/;"	m	class:yyFlexLexer
yy_n_chars	vascript/flexbison/flexlexer.h	/^	int yy_n_chars;$/;"	m	class:yyFlexLexer
yy_n_chars	vascript/release/vaslexer.cpp	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_new_buffer	vascript/release/vaslexer.cpp	291;"	d	file:
yy_nxt	vascript/release/vaslexer.cpp	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	vascript/release/vaslexer.cpp	/^static yyconst flex_int16_t yy_nxt[632] =$/;"	v	file:
yy_pop_state	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_pop_state()$/;"	f	class:yyFlexLexer
yy_prev_more_offset	vascript/flexbison/flexlexer.h	/^	int yy_prev_more_offset;$/;"	m	class:yyFlexLexer
yy_push_state	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_push_state( int new_state )$/;"	f	class:yyFlexLexer
yy_set_bol	vascript/release/vaslexer.cpp	303;"	d	file:
yy_set_interactive	vascript/release/vaslexer.cpp	293;"	d	file:
yy_size_t	vascript/release/vaslexer.cpp	/^typedef size_t yy_size_t;$/;"	t	file:
yy_start	vascript/flexbison/flexlexer.h	/^	int yy_start;		\/\/ start state number$/;"	m	class:yyFlexLexer
yy_start_stack	vascript/flexbison/flexlexer.h	/^	int* yy_start_stack;$/;"	m	class:yyFlexLexer
yy_start_stack_depth	vascript/flexbison/flexlexer.h	/^	int yy_start_stack_depth;$/;"	m	class:yyFlexLexer
yy_start_stack_ptr	vascript/flexbison/flexlexer.h	/^	int yy_start_stack_ptr;$/;"	m	class:yyFlexLexer
yy_state_buf	vascript/flexbison/flexlexer.h	/^	yy_state_type* yy_state_buf;$/;"	m	class:yyFlexLexer
yy_state_ptr	vascript/flexbison/flexlexer.h	/^	yy_state_type* yy_state_ptr;$/;"	m	class:yyFlexLexer
yy_state_type	vascript/flexbison/flexlexer.h	/^typedef int yy_state_type;$/;"	t
yy_switch_to_buffer	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )$/;"	f	class:yyFlexLexer
yy_top_state	vascript/release/vaslexer.cpp	/^    int yyFlexLexer::yy_top_state()$/;"	f	class:yyFlexLexer
yy_trans_info	vascript/release/vaslexer.cpp	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	vascript/release/vaslexer.cpp	/^    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )$/;"	f	class:yyFlexLexer
yy_vasParser_stype	vascript/release/vasparser.cpp	/^} yy_vasParser_stype;$/;"	t	typeref:union:__anon124	file:
yy_vasParser_stype	vascript/release/vasparser.h	/^} yy_vasParser_stype;$/;"	t	typeref:union:__anon125
yy_verify	vascript/release/vaslexer.cpp	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	vascript/release/vaslexer.cpp	/^void *yyalloc (yy_size_t  size )$/;"	f
yycheck	vascript/release/vasparser.cpp	/^static const short yycheck[] = {    19,$/;"	v	file:
yyclearin	vascript/release/vasparser.cpp	1030;"	d	file:
yyconst	vascript/release/vaslexer.cpp	119;"	d	file:
yyconst	vascript/release/vaslexer.cpp	121;"	d	file:
yydefact	vascript/release/vasparser.cpp	/^static const short yydefact[] = {     0,$/;"	v	file:
yydefgoto	vascript/release/vasparser.cpp	/^static const short yydefgoto[] = {   107,$/;"	v	file:
yyensure_buffer_stack	vascript/release/vaslexer.cpp	/^void yyFlexLexer::yyensure_buffer_stack(void)$/;"	f	class:yyFlexLexer
yyerrok	vascript/release/vasparser.cpp	1029;"	d	file:
yyerror	vascript/parserdriver.cpp	/^void vasParserDriver::yyerror(char * msg)$/;"	f	class:vasParserDriver
yyerror	vascript/release/vasparser.cpp	/^void yyerror(char* s)$/;"	f
yyfree	vascript/release/vaslexer.cpp	/^void yyfree (void * ptr )$/;"	f
yyin	vascript/flexbison/flexlexer.h	/^	istream* yyin;	\/\/ input source for default LexerInput$/;"	m	class:yyFlexLexer
yyinput	vascript/release/vaslexer.cpp	/^    int yyFlexLexer::yyinput()$/;"	f	class:yyFlexLexer
yyleng	vascript/flexbison/flexlexer.h	/^	int yyleng;$/;"	m	class:FlexLexer
yyless	vascript/release/vaslexer.cpp	186;"	d	file:
yyless	vascript/release/vaslexer.cpp	2259;"	d	file:
yyless	vascript/release/vaslexer.cpp	2260;"	d	file:
yylex	vascript/flexbison/flexlexer.h	/^	int yylex( istream* new_in, ostream* new_out = 0 )$/;"	f	class:FlexLexer
yylex	vascript/parserdriver.cpp	/^int vasParserDriver::yylex()$/;"	f	class:vasParserDriver
yylex	vascript/parserdriver.cpp	/^int yylex()$/;"	f
yylexparser_INC	vascript/yy.lex.parser.h	20;"	d
yylineno	vascript/flexbison/flexlexer.h	/^	int yylineno;		\/\/ only maintained if you use %option yylineno$/;"	m	class:FlexLexer
yylloc	vascript/parserdriver.cpp	/^YYLTYPE yylloc;$/;"	v
yylloc	vascript/release/vaslexer.cpp	/^YYLTYPE *yylloc;$/;"	v
yyltype	vascript/release/vasparser.cpp	/^  struct yyltype$/;"	s	file:
yyltype	vascript/release/vasparser.cpp	/^  yyltype;$/;"	t	typeref:struct:yyltype	file:
yyltype	vascript/release/vasparser.h	/^  struct yyltype$/;"	s
yyltype	vascript/release/vasparser.h	/^  yyltype;$/;"	t	typeref:struct:yyltype
yylval	vascript/release/vaslexer.cpp	/^YYSTYPE *yylval;$/;"	v
yylvalfd	vascript/yy.lex.parser.h	54;"	d
yylvalfd	vascript/yy.lex.parser.h	58;"	d
yymore	vascript/release/vaslexer.cpp	666;"	d	file:
yyout	vascript/flexbison/flexlexer.h	/^	ostream* yyout;	\/\/ output sink for default LexerOutput$/;"	m	class:yyFlexLexer
yypact	vascript/release/vasparser.cpp	/^static const short yypact[] = {   120,$/;"	v	file:
yypgoto	vascript/release/vasparser.cpp	/^static const short yypgoto[] = {-32768,$/;"	v	file:
yypop_buffer_state	vascript/release/vaslexer.cpp	/^void yyFlexLexer::yypop_buffer_state (void)$/;"	f	class:yyFlexLexer
yyprhs	vascript/release/vasparser.cpp	/^static const short yyprhs[] = {     0,$/;"	v	file:
yypush_buffer_state	vascript/release/vaslexer.cpp	/^void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)$/;"	f	class:yyFlexLexer
yyr1	vascript/release/vasparser.cpp	/^static const short yyr1[] = {     0,$/;"	v	file:
yyr2	vascript/release/vasparser.cpp	/^static const short yyr2[] = {     0,$/;"	v	file:
yyrealloc	vascript/release/vaslexer.cpp	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yyrestart( std::istream* input_file )$/;"	f	class:yyFlexLexer
yyrhs	vascript/release/vasparser.cpp	/^static const short yyrhs[] = {    90,$/;"	v	file:
yyrline	vascript/release/vasparser.cpp	/^static const short yyrline[] = { 0,$/;"	v	file:
yytable	vascript/release/vasparser.cpp	/^static const short yytable[] = {    47,$/;"	v	file:
yyterminate	vascript/release/vaslexer.cpp	752;"	d	file:
yytext	vascript/flexbison/flexlexer.h	/^	char* yytext;$/;"	m	class:FlexLexer
yytext_ptr	vascript/release/vaslexer.cpp	319;"	d	file:
yytname	vascript/release/vasparser.cpp	/^static const char * const yytname[] = {   "$","error","$illegal.","TK_IDENTIFIER",$/;"	v	file:
yytranslate	vascript/release/vasparser.cpp	/^static const char yytranslate[] = {     0,$/;"	v	file:
yyunput	vascript/release/vaslexer.cpp	/^    void yyFlexLexer::yyunput( int c, register char* yy_bp)$/;"	f	class:yyFlexLexer
yywrap	vascript/release/vaslexer.cpp	/^int \/*yyFlexLexer::*\/yywrap()$/;"	f
z	opencv/include/cxcore.hpp	/^    _Tp x, y, z;$/;"	m	class:cv::Point3_
z	opencv/include/cxtypes.h	/^    double z;$/;"	m	struct:CvPoint3D64f
z	opencv/include/cxtypes.h	/^    float z;$/;"	m	struct:CvPoint3D32f
z_max	opencv/include/cvaux.hpp	/^        float x_min, x_max, y_min, y_max, z_min, z_max;		$/;"	m	struct:cv::Octree::Node
z_min	opencv/include/cvaux.hpp	/^        float x_min, x_max, y_min, y_max, z_min, z_max;		$/;"	m	struct:cv::Octree::Node
zero	vascript/vacg.cpp	/^static const int zero      = 0;$/;"	v	file:
zeros	opencv/include/cxmat.hpp	/^inline MatExpr_Initializer Mat::zeros(Size size, int type)$/;"	f	class:cv::Mat
zeros	opencv/include/cxmat.hpp	/^inline MatExpr_Initializer Mat::zeros(int rows, int cols, int type)$/;"	f	class:cv::Mat
zeros	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatExpr_Initializer Mat_<_Tp>::zeros(Size size)$/;"	f	class:cv::Mat_
zeros	opencv/include/cxmat.hpp	/^template<typename _Tp> inline MatExpr_Initializer Mat_<_Tp>::zeros(int rows, int cols)$/;"	f	class:cv::Mat_
~Allocator	opencv/include/cxcore.hpp	/^    ~Allocator() {}$/;"	f	class:cv::Allocator
~AstNode	vascript/node.hxx	/^	~AstNode(){}$/;"	f	class:AstNode
~AutoBuffer	opencv/include/cxoperations.hpp	/^template<typename _Tp, size_t fixed_size> inline AutoBuffer<_Tp, fixed_size>::~AutoBuffer()$/;"	f	class:cv::AutoBuffer
~CvBlobSeq	opencv/include/cvvidsurv.hpp	/^    virtual ~CvBlobSeq()$/;"	f	class:CvBlobSeq
~CvBlobTrackAnalysisOne	opencv/include/cvvidsurv.hpp	/^    virtual ~CvBlobTrackAnalysisOne() {};$/;"	f	class:CvBlobTrackAnalysisOne
~CvBlobTrackSeq	opencv/include/cvvidsurv.hpp	/^    virtual ~CvBlobTrackSeq()$/;"	f	class:CvBlobTrackSeq
~CvImage	opencv/include/cxcore.h	/^    ~CvImage()$/;"	f	class:CvImage
~CvImageDrawer	opencv/include/cvvidsurv.hpp	/^    ~CvImageDrawer() { cvReleaseImage( &m_image ); }$/;"	f	class:CvImageDrawer
~CvLSHOperations	opencv/include/cv.hpp	/^  virtual ~CvLSHOperations() {}$/;"	f	struct:CvLSHOperations
~CvMatrix	opencv/include/cxcore.h	/^    ~CvMatrix()$/;"	f	class:CvMatrix
~CvObjectDetector	opencv/include/cvvidsurv.hpp	/^    ~CvObjectDetector() {};$/;"	f	class:CvObjectDetector
~CvProb	opencv/include/cvvidsurv.hpp	/^    virtual ~CvProb() {};$/;"	f	class:CvProb
~CvVSModule	opencv/include/cvvidsurv.hpp	/^    virtual ~CvVSModule()$/;"	f	class:CvVSModule
~FlexLexer	vascript/flexbison/flexlexer.h	/^	virtual ~FlexLexer()	{ }$/;"	f	class:FlexLexer
~FlowGraph	vascript/graph.hxx	/^	~FlowGraph(){ delete varTable;}$/;"	f	class:FlowGraph
~HOGDescriptor	opencv/include/cvaux.hpp	/^    virtual ~HOGDescriptor() {}$/;"	f	struct:cv::HOGDescriptor
~IndexFactory	opencv/include/cxflann.h	/^    virtual ~IndexFactory() {}$/;"	f	class:cv::flann::IndexFactory
~Mat	opencv/include/cxmat.hpp	/^inline Mat::~Mat()$/;"	f	class:cv::Mat
~MatExpr_	opencv/include/cxmat.hpp	/^    ~MatExpr_() {}$/;"	f	class:cv::MatExpr_
~MatExpr_Base_	opencv/include/cxmat.hpp	/^    virtual ~MatExpr_Base_() {}$/;"	f	class:cv::MatExpr_Base_
~MatND	opencv/include/cxmat.hpp	/^inline MatND::~MatND() { release(); }$/;"	f	class:cv::MatND
~Node	vascript/node.h	/^	~Node(){}$/;"	f	class:Node
~Ptr	opencv/include/cxoperations.hpp	/^template<typename _Tp> inline Ptr<_Tp>::~Ptr() { release(); }$/;"	f	class:cv::Ptr
~SparseMat	opencv/include/cxmat.hpp	/^inline SparseMat::~SparseMat()$/;"	f	class:cv::SparseMat
~Vector	opencv/include/cxoperations.hpp	/^    ~Vector()  { release(); }$/;"	f	class:cv::Vector
~WImage	opencv/include/cvwimage.h	/^template<typename T> inline WImage<T>::~WImage() {}$/;"	f	class:cv::WImage
~WImageBuffer	opencv/include/cvwimage.h	/^    ~WImageBuffer() {$/;"	f	class:cv::WImageBuffer
~WImageBufferC	opencv/include/cvwimage.h	/^    ~WImageBufferC() {$/;"	f	class:cv::WImageBufferC
~WImageC	opencv/include/cvwimage.h	/^template<typename T, int C> inline WImageC<T, C>::~WImageC() {}$/;"	f	class:cv::WImageC
~WImageViewC	opencv/include/cvwimage.h	/^    virtual ~WImageViewC() {}$/;"	f	class:cv::WImageViewC
~WriteStructContext	opencv/include/cxoperations.hpp	/^    ~WriteStructContext() { cvEndWriteStruct(**fs); }$/;"	f	class:cv::WriteStructContext
~yyFlexLexer	vascript/release/vaslexer.cpp	/^yyFlexLexer::~yyFlexLexer()$/;"	f	class:yyFlexLexer
